%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: BR-EPS-02-4001.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Ted Grajeda
%%CreationDate: 3/22/17
%%BoundingBox: 0 0 720 540
%%HiResBoundingBox: 0 0 720 540
%%CropBox: 0 0 720 540
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.2 x242 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2017-03-22T16:36:05-07:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-03-22T16:36:05-07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-03-22T16:36:05-07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>192</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9G4q7FXYq2BXFV6piqoq&#xA;4qqBcVXBcVXBcVXBcVbpirdMVbpirdMVdTFXUxV1MVdTFXUxVqmKtUxVqmKtFcVWlcVWlcVWlcVW&#xA;MuKqbJiqmRTFWsVdirsVdirsVbAriqoq4qqquKrwuKrwuKrgMVXAYq2BirdMVbpirdMVdTFXUxV1&#xA;MVdTFXUxV1MVdTFWqYq1TFWiMVaIxVaRiq0riqwriqxlxVTZcVUytMVW4q7FXYq2BXFVRVxVVVcV&#xA;VFXFV4GKrgMVXAYq3TFW6Yq3TFW6Yq6mKt4q7FXYq7FXYq7FWqYq6mKtUxV1MVW0xVojFVpGKrSM&#xA;VWEYqpsuKqbLiqkRTFWsVbGKqiriqqq4qqKuKrwMVXAYquAxVcBirdMVbpireKupirdMVdirsVdi&#xA;rsVdirsVdTFWqYq7FWqYq1TFWiMVaIxVaRiqwjFVhGKqbLiqmy4qpEUxVcq4qrKMVVFGKqgGKrgM&#xA;VXgYq2BirdMVbxVumKt4qgV17RGSZxf2/G35fWP3iAxlPtBxWqle9ct8Ge2x3avHhvuNmKa5+bfl&#xA;qwv7W0tJkvQ8ypezoWMUMRI5OHUNzI8F+/M3D2ZklEkittvNwM3auOMgAb338gzkEEAg1B3BGa12&#xA;jqYqp3NxBbW8lxcSLFBCpeWRjQKqipJwxiSaHNEpCIs8m7eeG5gjuIHWWCZQ8UimqsrCoIPvjKJB&#xA;o81jIEWOS+mBLsVdirsVdirVMVdirVMVWkYq0Riq0jFVhGKrGGKqTDFVJlxVeoxVVUYqqAYqvAxV&#xA;cBiq4DFW8VXYq6mKsY1j8y/JukXs9je3rLe27KssCwysQWAOzBeHRq9czMWgy5AJAbHzDh5dfigS&#xA;Cdx5FNPLnmLT9f0eHVbIssEvIFJKB0KMVIYAmnTKc+CWKZiebdgzxyQ4hyeIfm5d6HP5qe60u89e&#xA;aSNUuxEAYwygptIG3JUCop9OdH2ZGYxVIV3PO9pmBy3E2erD9Mu7e21K0uLiMTW8M0ck0J6OisCy&#xA;/SBTM/JEmJA504GOhIE8rfRep/md5J060juG1FLj1UV4YbYGSRlbpsNlpQ1DEUzlMfZ+aRrhr3vV&#xA;5NfhiLu/cxK//Pqwi1FY7PT2uNPqpednKS0I+ICMrQEH/K3zOh2NIx3NScGfbAEto3Fjfnv82j5j&#xA;0caZZ2r2UTycrlmcNzRd1XYD9rc/LMvR9m+FPiJtxNZ2j4sOECmcfk95vttU0OPRpKrf6ZHQ7bPD&#xA;yorD/VBCnNb2ppTCfH/DL73Y9l6kThwfxR+56Fmrdo7FXUxVqmKuxV2KupirWKtYqtIxVojFVhGK&#xA;rCMVU2GKqTDFV6jFVRRiqoBiq8DFVwxVvFV2KuGKt4q+bvzatNUsfOV1HfXT3Uc5N1Z8mJCQzMaR&#xA;gEnjwK8fornWdmzjLEOEVWx97y/aEJDKbN9QxKK/u4onhinkjikIMkasQrEVAqAaHrmcYAmyHDBI&#xA;FBR55JjTueK07nitO54rTYLNWgJoKmnYYE0yfyn53vPKmpvLpaLdRToiXMUi05lRU8SOTLRmNKHf&#xA;w8MPU6QZo1LanL0+pOGVx3t6vZfnl5VaeO2v457WXiBcTqqyQLKB8SqysXZQdg3Hf5ZpZ9kZauNH&#xA;73bx7Ux3RsfcznSdb0jV4PrGmXcV3FQEtEwala0DDqp26HNdkwygakKc/HljMXE2jcrbHYq6mKtY&#xA;q7FWqADbbFXYqtxVojFVpGKrCMVWMMVUmGKrlGKqijFV4GKrwMVXDFWxirYxVvFVK5ura1hae5lS&#xA;CBBV5ZGCIo92agGGMSTQ3QZACy+avzb1eLUfPd/JDIstvCIoYXUhlIWNS1CNqcy2db2bj4MIvm83&#xA;r5cWU0w7nmc4dO54rTueK07nitO54rTueK0uSeRDyRip33Bp12OJCgLeeK0m3l3zbrfl2eafSLj6&#xA;vNOnpyMVV6qDXowK9e9P45Tn00MoAkLptw5p4zcTTNdO/P3zbbxeneW9resFoJWVo3LV6twIT6Ao&#xA;zXz7HxE7EhzYdp5BzALLvJn556dqlyljrsC6fcSsFhuYyTAxY0CtyqyfMkj5Zg6rsmUBxQPEPtcz&#xA;T9pCRqYovU807s3HYE+GKtA1FfHFXYq0cVaOKtHFVpxVaRiqmwxVTYYq2oxVUAxVeMVXjFW8VXYq&#xA;3iqF1PUrLTLCe/vplgtbdeUsrmijsPvJoMnjxmchEbksZzERZ5PkzzJ5o1bzBqc19qFw8pdiYo2a&#xA;qRpU8URRQAAeAztMGCOKPDEPMZcsskrKVc8ua6dzxWnc8Vp3PFadzxWnc8Vp3PFadzxWnc8Vp3PF&#xA;adzxWnc8VplWjfmj540i3htbTU3NpAQUglSOUcR+xydWcL7A/LMPLoMMySY7lycerywFA7PqHT72&#xA;G/0+2vof7m6iSeP/AFZFDD8DnITiYyIPR6KMrAPeiDkWTWKuxVrFWjiq04qtOKrDiqmwxVtcVXjF&#xA;V4xVcMVXDFWxireKpJ5z8txeZPLV7pDuYmnSsMor8MiHkhIHUchuPDMjS5ziyCTVnxccDF8m32m6&#xA;jYXrWV5bSwXQIHoyxvG5r0IRwrb9ts7KGSMhYOzzkoEGiEJzybGncsVp3PFadzxWnc8Vp3PFadzx&#xA;Wnc8Vp3PFadzxWnc8Vp3PFaVrK1ur27itLSJp7mdhHDCgqzM2wAGRlIRFnkExiSaD7D8u6WdJ0DT&#xA;tMJ5NZW0UDMOhaNArH6SM4nNk45mXeXpscOGIHcEwypm1irsVaOKtHFWjiqw4qtOKqbYq5cVVBiq&#xA;8YquGKtjFWxireKtjFUu1XQdP1CK4LQxJfTQSW8d/wCmrTRiRGSqufi25HauW480o1vtfJhLGD73&#xA;l0X/ADjfpCzwNLrM8kKtW4jESKXHgrcjw+5s2x7blR9IcAdnR72cX3kjTbHyRquheXrNIJLmzmhi&#xA;6cpJHjKjnI1SSxpucwIaqUssZzN0Q5UsAGMxiOj5Qu7W6s7mS1u4Xt7mFiksMilXVh2KncZ2EZCQ&#xA;sbh0JiQaKlywop3LFadyxWncsVp3LFadyxWncsVp3LFadyxWn0n+T35aWmg6Zb65fxltdvIuY5/8&#xA;e8UgqEVezlftHr28a8v2lrjkkYD6B9rutHphAcR+ovS81TmuxVxxVrFXHFVuKtHFVpxVYcVWNirl&#xA;xVeMVXjFVwxVvFVwxV2KtjFXYq7FXYql2teXNC1u1e11Wyiu4X3IdfiB23VxRlO3UHLcWaeM3E0w&#xA;njjIUQ8M/NT8nNH8s6BNrmlXM7Ik6q9rLxZUjlag4t8LfCSBvXN/oO0pZZ8EgOTrdTpIwjxB5Byz&#xA;dOBTuWK07litO5YrTuWK07litO5YrT0r8hdB0zWPOFx+kbdbmGytTcQxuTxEwmjCMVGzUFdm2zV9&#xA;rZpQxDhNWf0Fy9FjEp7vpnOVdy7FXYq44q1irjirWKrTiq04qtOKqbYq5cVXjFV4xVcMVXYq2MVd&#xA;irYxV2KuxV2KuxVJfOPlaz80+XrnRbtzFHcFGWdVDPG0bhwy177U+Ry/TZzimJjo15cYnGi+bPzP&#xA;/LKfyXcWnozTX1jcoS140XBFk5EemSCwrx33zqNDrhnBvYjo6rUafw/cwWpzPcZ1TirqnFXVOKuq&#xA;cVdU4q9g/wCcarNpPM2q3nOiwWYiMf8AMZpVYH6PSzS9ty/dxHm52hj6ifJ9D5zbtHYq7FXHFWsV&#xA;ccVaxVacVWnFVpxVTbFWlxVUGKrxiq4Yq2MVbGKt4q2MVdirsVdirsVdiryj/nI3WBaeTbbTgoZ9&#xA;SuV+I0+FIBzJHevLiPlm37Gx3lMv5o+9w9bKo13vmuudO6unVxWnVxWnVxWnVxWnVxWn1B/zj/os&#xA;mn+RFup7YQT6jO86ymnOSGirGT3A2NAfn3zle18vFmoHkHbaOFQ970vNW5TsVdirjirWKuOKrcVa&#xA;OKrTiqw4qsbFWlxVeMVXjFVwxVcMVbGKt4q7FW8VdirsVdirsVecfnl5P13zP5dsbbRLJby8t7sS&#xA;sC8cbLH6bK1DIyLuxWo9s2fZeohimTM0CHG1WMyiKfN/mXyn5h8s3cVprdm1pPMgliUsjhlrTZkL&#xA;DY9d86bDqIZRcDbrZ45R5pRXLmDq4q6uKurirK/y28laj5r8x20ENqbjTbWaF9WfmsYS3aSjbk1J&#xA;ZQ1Au+Yet1McUCSakbr3tuHEZy8n1/b28FtbxW9vGsUEKLHFEgoqogoqqB0AAzjSSTZdyBSpgV2K&#xA;uxVqgHQUxV2KtHFWjirRxVacVWHFVNsVaU4qvXFVQYquGKrhireKt4q7FWxirsVdirsVdirsVed/&#xA;nD+X2k+Y9M/TF9eSWY0S1upj6aq3McOYBr4FPpzZdnauWKXCBfEQ4+oxCQs9HylXOtdU6uKvQPy1&#xA;/KDWvOdb2ST9H6IhKm9ZebSOp3SJKrWndjsPc7Zrtb2jHDtzl3ORh05nv0e+eUvyi8l+W4JI47Nd&#xA;Qmdy/wBZvlWaQDcKKEcBxBO6qM5/UdoZcp517nOx6eMWYW9naWwIt4I4QaVEaqlaVI6AeJzCMieZ&#xA;bgKVcCXYq7FXHFWsVdirWKtHFVpxVacVWHFVNjiq1TiqopxVeDiq8YquGKtjFWxireKuxVvFXYq7&#xA;FXYq7FUv8wX2hWWk3E+uyQR6Xx43H1riYmB/ZKtUNXstN8sxRnKQEL4vJjIgDfk+MPNFzpdz5k1S&#xA;40lOGmS3Uz2SAcQIWkJSimnEU6DtnbYBIQiJfVW7qJ1ZrkldctYvtvyaLT/COi/UxS1NjbGEU4/A&#xA;YlINPfOG1N+JK+dl3GP6QnGUs3Yq7FXYq7FWsVdirRxVrFWjiq04qtJxVYxxVTY4qsU4qqKcVVAc&#xA;VXg4quBxVvFV2KtjFXYq7FW64q7FXYqhNW1bT9I06fUdQmEFnbLzlkbsOgAHck7Adzk8eMzkIx5l&#xA;EpACy+Q/zI/MLU/OeuyXUxaLTYGKafZV+GOOv2mFaeo37R+joM7HR6SOGFD6updXlyGZYjXMtqZv&#xA;+VH5dSed9ekt5pGg0uyQS386U50Y0SNK1AZ6Hc9gcwdfrPAhY+o8m7Di4z5PruCCK3gjghXhDCqx&#xA;xoOgVRQD6BnHkkmy7QBfgV2KuxV2KtYq7FXYq1irRxVaTiq0nFVhOKrGOKqbHFVNTiqqpxVUU4qv&#xA;BxVcDiq4HFV2Kt4q3XFXYq7FW64q7FVskUUq8ZEV1qG4sARVTUHfwOEGleS/mV+Qmm69Ld6zoUn1&#xA;LWJayyWpC/V5nC9BTj6bO25apFe3fNvou1ZY6jPeP2hxcunEtxzeD6J5L1a985R+WLq2njvVmaK7&#xA;hiVXkQR1LkEsI6UH2i3Hvm/y6mMcXiAinDjjJlT6z8leULTy3p8scaRrdXbiS5MSqqAIgjijWgXk&#xA;I41A5EVY1Y7tnI6nUHLLyDs8cOEMhzGZuxV2KurirWKuxV1cVaxVonFWicVWk4qsJxVYTiqxjiqk&#xA;xxVTRsVVVOKqinFVQHFV4OKrgcVbBxVdireKurireKuxV2KuxV1cVYzpfkmC0866r5sublrq+vo0&#xA;trWMiiW9sqpVF61LOla/25lZNSTijjAoDf3lrGOpGTJ65itjq4q1irsVdirsVarirsVarirROKrS&#xA;cVWk4qsJxVYxxVTY4qos2KrAaYqqK2KqqtiqoDiq8HFV4OKrgcVbBxVuuKt1xVvFXVxVuuKuxV2K&#xA;uxV2KuxV2KuxVquKuxVquKtVxVonFWicVWk4qsJxVaTiqmzYqpM2KqRNcVaxVsGmKqqtiqqrYqvB&#xA;xVeDiq4HFVwOKt1xVdXFXVxVuuKuxVvFXVxV1cVdXFXVxV2KuxVquKurirVcVariq0nFWicVWE4q&#xA;tJxVTZsVU2bFVJmriq3FXYq7FVwamKqitiqorYqvDYqvDYquBxVcDirYOKt1xVuuKt1xV1cVbrir&#xA;q4q6uKurirVcVdXFWq4q6uKtE4qtJxVonFVhbFVpbFVjNiqkzYqplsVW4q7FXYq7FXYq2DTFVRWx&#xA;VUVsVXhsVXhsVXBsVbBxVcDirdcVbrirq4q6uKt1xV1cVarirq4q6uKtVxVquKtE4qtLYqtLYqo3&#xA;IleCRIZPRlZGEctA3BiKBuJ2NDvTFWGNoP5l8zH/AIotxbmBED/UVMglUAMxo42am/xA+FMVa03Q&#xA;fzFRLNtR80xSPHIJLuOGyjCuCsnKMMxrTk60NB9npiq+DQfPCxmCXzOJIxEI1lFlGJuYdCZCxYqS&#xA;UVh9nqa9qYq2mi+ejFwl8yR+oYZUMqWUY/fMhEcgUsdkejFa79PkqpJov5iLNLXzHbNAYisQ+oqH&#xA;EpjZeVeZFBIQ1N6jb5qptoth5itrid9V1VNQikp6MSW6wenQD9pWYtXfr7eG6r//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:DocumentID>xmp.did:a4b9d2f6-723d-4503-9d49-94c9e2dbd933</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:a4b9d2f6-723d-4503-9d49-94c9e2dbd933</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:67790c3e-08c7-44d7-9d45-ebc38129d76f</stRef:instanceID>
            <stRef:documentID>xmp.did:67790c3e-08c7-44d7-9d45-ebc38129d76f</stRef:documentID>
            <stRef:originalDocumentID>uuid:AFABD02F2D09E211A448E36E157BCECF</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:AFABD02F2D09E211A448E36E157BCECF</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:67790c3e-08c7-44d7-9d45-ebc38129d76f</stEvt:instanceID>
                  <stEvt:when>2017-03-22T16:36:04-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a4b9d2f6-723d-4503-9d49-94c9e2dbd933</stEvt:instanceID>
                  <stEvt:when>2017-03-22T16:36:05-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>720.000000</stDim:w>
            <stDim:h>540.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Roboto-Light</stFnt:fontName>
                  <stFnt:fontFamily>Roboto</stFnt:fontFamily>
                  <stFnt:fontFace>Light</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>Version 1.100140; 2013</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Roboto-Light.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Maps</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Sea</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>219</xmpG:green>
                           <xmpG:blue>229</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>River</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>182</xmpG:green>
                           <xmpG:blue>198</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Land</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>244</xmpG:green>
                           <xmpG:blue>244</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Country</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>241</xmpG:green>
                           <xmpG:blue>228</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Border</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>163</xmpG:red>
                           <xmpG:green>163</xmpG:green>
                           <xmpG:blue>163</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Marker</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>81</xmpG:green>
                           <xmpG:blue>81</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Text</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -540 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 540 li
720 540 li
720 0 li
cp
clp
720 540 mo
0 540 li
0 0 li
720 0 li
720 540 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[411.999 0 0 354.582 360 270 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<<*"!<<*"!<<*"!W`<%!W`<%!s&E&!s&E&!s/N
("9JW)"9S`+"Tni,"Tni,"p>&/#6Y/0#R(A3#mCJ4#mLS6$3pe9$O@"<%1*=@%LNOC&.8mH&e,9M~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M
&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M
&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M
&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M&e,9M
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.998284 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[411.999 0 0 354.582 360 270 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3&!WiE)!WiE)!WiE*!s8W-!s
8W."9\i1"9\i2"U,&6"pP89#6tJ=#RC\A#RC\A#mgnE$47+I$O[@O%1NaU%Ls![&.fEc~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3&!WiE)!WiE)!WiE*!s8
W-!s8W-"9\i1"9\i1"U,&5"pP89#6tJ=#RC\A#mgnE$47+I$O[@O~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3&!WiE)!WiE)!WiE*!s8
W-!s8W-"9\i1"9\i1"U,&5"pP89#6tJ=#RC\A#mgnE$47.K$k*OQ~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
497.936 202.916 mo
497.796 202.829 li
497.742 202.775 li
497.72 202.714 li
497.682 202.463 li
497.682 201.974 li
497.751 201.662 li
497.737 201.506 li
497.623 201.411 li
497.652 201.566 li
497.548 201.884 li
497.516 202.064 li
497.46 202.226 li
497.324 202.426 li
497.158 202.609 li
497.003 202.72 li
497.055 202.604 li
497.058 202.498 li
497.023 202.402 li
496.946 202.321 li
497.013 202.387 li
497.061 202.407 li
497.109 202.387 li
497.172 202.321 li
497.154 202.312 li
497.284 201.974 li
497.304 201.869 li
497.279 201.672 li
497.284 201.583 li
497.321 201.527 li
497.379 201.492 li
497.433 201.437 li
497.455 201.326 li
497.455 200.927 li
497.408 200.868 li
497.175 200.757 li
497.09 200.702 li
496.985 200.511 li
496.832 199.826 li
496.832 199.876 li
496.77 199.696 li
496.791 199.52 li
496.836 199.348 li
496.832 199.197 li
496.784 199.102 li
496.729 199.022 li
496.683 198.94 li
496.65 198.745 li
496.62 198.644 li
496.545 198.463 li
496.638 198.176 li
496.635 197.798 li
496.525 196.938 li
496.442 196.592 li
496.386 196.48 li
496.326 196.425 li
496.209 196.355 li
496.152 196.3 li
496.095 196.189 li
496.08 196.118 li
496.098 195.988 li
496.08 195.827 li
495.996 195.494 li
495.979 195.309 li
495.953 195.258 li
495.889 195.234 li
495.725 195.224 li
495.65 195.182 li
495.573 194.986 li
495.501 194.941 li
495.403 195.007 li
495.3 195.128 li
495.184 195.208 li
495.047 195.143 li
495.054 195.068 li
495.262 194.867 li
495.297 194.716 li
495.527 194.891 li
495.474 193.904 li
495.443 193.864 li
495.374 193.83 li
495.371 193.753 li
495.414 193.584 li
495.424 193.317 li
495.414 193.235 li
495.366 193.161 li
495.219 193.021 li
495.188 192.984 li
495.17 192.904 li
495.092 192.793 li
495.075 192.703 li
495.088 192.416 li
495.075 192.335 li
495.053 192.314 li
494.904 192.164 li
494.873 192.063 li
494.877 191.979 li
494.904 191.852 li
494.877 191.667 li
494.814 191.561 li
494.739 191.481 li
494.68 191.37 li
494.676 190.786 li
494.591 190.695 li
494.582 190.611 li
494.423 190.032 li
494.384 189.95 li
494.446 189.9 li
494.356 189.77 li
494.264 189.598 li
494.194 189.418 li
494.125 189.08 li
493.657 188.255 li
493.406 188.024 li
493.369 187.944 li
493.349 187.763 li
493.292 187.572 li
493.222 187.396 li
493.063 187.109 li
492.951 186.958 li
492.814 186.832 li
492.663 186.781 li
492.526 186.715 li
492.215 186.39 li
492.067 186.273 li
491.75 186.148 li
491.476 186.067 li
490.834 186.006 li
489.929 185.805 li
488.695 185.57 li
488.036 185.479 li
487.881 185.509 li
487.658 185.625 li
487.356 185.686 li
487.072 185.842 li
486.926 185.882 li
485.594 185.821 li
485.594 185.882 li
485.882 185.882 li
485.882 185.932 li
485.683 185.951 li
485.526 185.922 li
485.198 185.821 li
484.514 185.755 li
483.498 185.826 li
483.208 185.755 li
483.287 185.846 li
483.594 185.922 li
483.66 185.961 li
483.615 186.102 li
483.503 186.144 li
483.364 186.107 li
483.125 185.937 li
482.984 185.882 li
482.7 185.821 li
482.361 185.851 li
482.25 185.826 li
482.247 185.71 li
482.052 185.71 li
481.747 185.639 li
481.463 185.509 li
481.338 185.337 li
481.3 185.252 li
481.213 185.152 li
481.113 185.067 li
481.026 185.025 li
480.991 184.97 li
480.713 184.663 li
480.568 184.578 li
479.872 184.509 li
479.636 184.522 li
479.421 184.583 li
479.32 184.573 li
479.046 184.462 li
478.916 184.433 li
478.775 184.443 li
478.613 184.522 li
478.215 184.353 li
477.815 183.784 li
477.457 182.959 li
477.306 182.758 li
477.039 182.581 li
476.193 182.29 li
475.688 182.034 li
475.474 181.983 li
475.378 182.052 li
475.279 182.097 li
475.056 182.028 li
474.698 181.851 li
474.352 181.61 li
474.066 181.359 li
473.842 181.086 li
473.364 180.106 li
473.176 180.097 li
472.989 180.061 li
472.813 180.01 li
472.653 179.936 li
472.116 179.428 li
471.989 179.372 li
471.202 178.793 li
470.562 178.135 li
469.887 177.264 li
469.367 176.519 li
469.266 176.434 li
468.877 176.252 li
468.791 176.198 li
468.315 175.759 li
468.223 175.639 li
468.168 175.519 li
468.108 175.262 li
468.052 175.13 li
467.835 174.839 li
467.66 174.512 li
467.584 174.406 li
467.492 174.341 li
467.353 174.538 li
467.089 174.506 li
466.52 174.286 li
465.982 174.165 li
465.89 174.104 li
465.694 173.837 li
465.591 173.778 li
465.385 173.697 li
465.126 173.521 li
464.907 173.32 li
464.759 173.104 li
464.362 172.982 li
464.235 172.882 li
464.131 172.776 li
464.017 172.716 li
463.857 172.752 li
463.639 172.253 li
463.492 172.038 li
463.288 171.851 li
463.167 171.79 li
463.035 171.755 li
462.69 171.74 li
462.498 171.695 li
462.397 171.594 li
462.325 171.464 li
462.206 171.348 li
462.122 171.313 li
461.957 171.308 li
461.867 171.292 li
461.794 171.252 li
461.559 171.036 li
461.021 170.668 li
460.997 170.634 li
460.978 170.589 li
460.948 170.538 li
460.907 170.503 li
460.862 170.488 li
460.788 170.503 li
460.51 170.301 li
460.341 170.246 li
460.286 170.186 li
460.243 170.131 li
460.196 170.105 li
460.116 170.11 li
460.055 170.125 li
459.984 170.125 li
459.878 170.105 li
459.144 169.793 li
459.045 169.673 li
458.435 169.34 li
458.126 169.084 li
458.104 169.049 li
458.071 168.938 li
458.037 168.917 li
457.881 168.922 li
457.838 168.917 li
457.52 168.758 li
457.385 168.732 li
457.266 168.808 li
457.328 168.917 li
457.266 168.912 li
457.207 168.904 li
457.156 168.883 li
457.104 168.858 li
457.151 168.777 li
457.01 168.621 li
456.809 168.475 li
456.677 168.404 li
456.572 168.385 li
456.476 168.324 li
456.032 167.896 li
455.938 167.846 li
455.686 167.782 li
454.999 167.343 li
454.873 167.319 li
454.461 167.343 li
454.328 167.309 li
454.201 167.243 li
454.084 167.198 li
453.982 167.222 li
453.879 167.177 li
453.83 167.227 li
453.785 167.303 li
453.694 167.343 li
453.6 167.303 li
453.432 167.147 li
453.324 167.113 li
452.614 167.002 li
451.542 166.991 li
450.911 166.886 li
450.875 166.875 li
450.838 166.851 li
450.797 166.835 li
450.743 166.831 li
450.684 166.925 li
450.658 166.946 li
450.513 166.971 li
450.065 167.167 li
448.645 167.283 li
448.51 167.328 li
448.103 167.534 li
448.02 167.626 li
447.961 167.626 li
447.912 167.479 li
447.85 167.434 li
447.597 167.455 li
447.527 167.47 li
447.492 167.544 li
447.426 167.56 li
447.355 167.555 li
447.194 167.52 li
447.107 167.51 li
445.915 167.626 li
445.859 167.626 li
445.745 167.56 li
445.853 167.721 li
445.898 167.812 li
445.915 167.907 li
445.859 167.907 li
445.683 167.751 li
445.458 167.65 li
445.207 167.595 li
444.955 167.56 li
444.471 167.56 li
444.334 167.595 li
444.115 167.741 li
443.987 167.791 li
444.043 167.822 li
444.09 167.832 li
444.143 167.827 li
444.22 167.791 li
444.26 167.896 li
444.41 168.002 li
444.471 168.179 li
444.584 168.364 li
444.609 168.496 li
444.573 168.716 li
444.473 168.631 li
444.331 168.425 li
444.157 168.295 li
444.157 168.404 li
444.105 168.404 li
444.07 168.34 li
444.025 168.29 li
443.978 168.269 li
443.933 168.295 li
443.886 168.269 li
443.804 168.213 li
443.766 168.179 li
443.849 168.158 li
443.884 168.103 li
443.873 168.033 li
443.818 167.957 li
443.757 167.936 li
443.102 167.841 li
442.954 167.886 li
443.021 168.068 li
442.954 168.113 li
442.916 168.124 li
442.856 168.124 li
442.864 168.089 li
442.876 168.063 li
442.892 168.042 li
442.908 168.012 li
442.822 168.018 li
442.799 168.012 li
442.881 167.901 li
442.886 167.817 li
442.831 167.746 li
442.742 167.676 li
442.543 167.796 li
442.316 167.827 li
441.615 167.777 li
441.436 167.73 li
441.297 167.645 li
441.207 167.51 li
441.1 167.584 li
441.008 167.6 li
440.916 167.57 li
440.812 167.51 li
440.812 167.455 li
440.898 167.479 li
440.98 167.51 li
440.943 167.425 li
440.923 167.394 li
440.971 167.425 li
441.101 167.484 li
441.149 167.51 li
440.919 167.188 li
440.149 166.795 li
439.899 166.489 li
439.774 166.594 li
439.705 166.634 li
439.619 166.659 li
439.745 166.449 li
439.577 166.393 li
438.204 166.438 li
438.302 166.528 li
438.558 166.685 li
438.657 166.77 li
438.707 166.77 li
438.81 166.725 li
438.839 166.846 li
438.821 167.143 li
438.779 167.253 li
438.685 167.264 li
438.572 167.222 li
438.282 167.047 li
438.184 167.037 li
438.143 167.143 li
438.076 167.153 li
437.926 167.122 li
437.755 167.108 li
437.633 167.167 li
437.622 167.116 li
437.572 167.002 li
437.598 166.981 li
437.607 166.981 li
437.615 166.976 li
437.633 166.946 li
437.093 166.971 li
436.994 167.021 li
436.857 167.042 li
436.717 167.016 li
436.609 166.946 li
436.548 166.986 li
436.474 167.047 li
436.416 167.126 li
436.384 167.222 li
436.332 167.222 li
436.377 167.031 li
436.339 166.981 li
436.102 167.063 li
436.167 166.96 li
436.212 166.806 li
436.207 166.669 li
436.128 166.603 li
435.182 166.584 li
434.941 166.534 li
434.903 166.438 li
434.852 166.378 li
434.775 166.434 li
434.621 166.507 li
434.563 166.549 li
434.387 166.428 li
434.228 166.378 li
434.111 166.296 li
434.054 166.095 li
434.189 166.156 li
434.262 166.116 li
434.289 166.01 li
434.279 165.864 li
434.04 165.965 li
433.946 165.986 li
433.85 165.986 li
433.715 165.939 li
433.631 165.925 li
433.503 165.889 li
433.094 165.643 li
432.742 165.206 li
432.664 165.135 li
432.618 165.11 li
432.573 165.055 li
432.519 164.995 li
432.436 164.969 li
431.971 164.979 li
431.896 164.969 li
431.601 164.868 li
431.53 164.854 li
431.491 164.828 li
431.166 164.542 li
430.996 164.46 li
430.591 164.199 li
430.451 164.169 li
430.085 164.149 li
429.916 164.119 li
428.949 163.812 li
428.319 163.577 li
427.871 163.521 li
427.442 163.365 li
427.221 163.329 li
427.11 163.349 li
427.048 163.395 li
426.991 163.45 li
426.909 163.49 li
426.798 163.5 li
426.671 163.5 li
426.548 163.479 li
426.509 163.439 li
426.34 163.374 li
426.165 163.389 li
426.035 163.474 li
425.999 163.611 li
426.107 163.797 li
426.486 163.992 li
426.621 164.119 li
426.503 164.129 li
426.399 164.119 li
426.321 164.079 li
426.281 164.002 li
426.226 164.002 li
426.26 164.119 li
426.327 164.24 li
426.431 164.331 li
426.565 164.346 li
426.565 164.4 li
426.284 164.341 li
426.178 164.354 li
426.322 164.597 li
426.354 164.728 li
426.344 164.843 li
426.281 164.909 li
426.235 164.762 li
426.17 164.622 li
426.126 164.711 li
426.083 164.783 li
426.021 164.833 li
425.938 164.854 li
425.999 164.738 li
425.893 164.677 li
425.82 164.405 li
425.711 164.4 li
425.747 164.185 li
425.695 163.998 li
425.583 163.947 li
425.429 164.119 li
425.543 164.199 li
425.588 164.294 li
425.566 164.4 li
425.491 164.516 li
425.491 164.346 li
425.409 164.437 li
425.369 164.551 li
425.39 164.632 li
425.491 164.622 li
425.543 164.677 li
425.411 164.728 li
425.085 164.606 li
424.919 164.677 li
424.88 164.516 li
424.768 164.46 li
424.631 164.486 li
424.519 164.572 li
424.589 164.42 li
424.633 164.35 li
424.693 164.286 li
424.496 164.335 li
424.382 164.511 li
424.392 164.717 li
424.581 164.854 li
424.429 164.849 li
424.362 164.828 li
424.291 164.798 li
424.255 164.878 li
424.242 164.913 li
424.24 164.969 li
424.18 164.969 li
424.18 164.909 li
424.123 164.909 li
424.123 164.969 li
424.061 164.969 li
424.061 164.909 li
424.165 164.798 li
424.18 164.587 li
424.131 164.381 li
424.034 164.286 li
423.902 164.365 li
423.88 164.738 li
423.783 164.854 li
423.851 164.711 li
423.799 164.672 li
423.681 164.688 li
423.556 164.738 li
423.365 164.878 li
423.275 164.899 li
423.218 164.798 li
423.192 164.843 li
423.126 164.924 li
423.101 164.969 li
423.088 164.934 li
423.043 164.854 li
422.967 164.963 li
422.748 165.061 li
422.703 165.161 li
422.726 165.286 li
422.766 165.386 li
422.79 165.487 li
422.758 165.582 li
422.647 165.301 li
422.421 164.878 li
422.384 164.858 li
422.308 164.934 li
422.193 165.084 li
422.095 165.301 li
422.101 165.396 li
422.193 165.473 li
422.193 165.532 li
421.951 165.381 li
421.912 165.392 li
421.882 165.426 li
421.631 165.582 li
421.559 165.698 li
421.455 165.925 li
421.316 166.137 li
421.25 166.267 li
421.223 166.407 li
421.229 166.756 li
421.186 166.906 li
421.063 167.002 li
421.153 166.856 li
421.181 166.77 li
421.171 166.659 li
421.15 166.69 li
421.136 166.714 li
421.115 166.77 li
421.102 166.714 li
421.091 166.69 li
421.091 166.664 li
421.115 166.603 li
421.063 166.549 li
421.012 166.608 li
420.983 166.629 li
420.883 166.659 li
420.883 166.603 li
420.937 166.523 li
420.872 166.528 li
420.772 166.594 li
420.72 166.69 li
420.701 166.831 li
420.65 166.971 li
420.578 167.113 li
420.493 167.222 li
420.474 167.192 li
420.469 167.188 li
420.46 167.188 li
420.432 167.167 li
420.37 167.258 li
420.093 167.51 li
420.089 167.455 li
420.073 167.42 li
420.053 167.383 li
420.035 167.343 li
419.979 167.369 li
419.939 167.369 li
419.937 167.338 li
419.979 167.283 li
420.035 167.237 li
420.167 167.188 li
420.234 167.143 li
420.305 167.002 li
420.189 166.765 li
420.203 166.603 li
419.939 166.679 li
419.877 166.756 li
419.928 166.886 li
419.711 166.729 li
419.635 166.659 li
419.584 166.72 li
419.552 166.785 li
419.531 166.859 li
419.527 166.971 li
419.504 167.002 li
419.454 167.002 li
419.397 166.991 li
419.357 167.002 li
419.295 167.222 li
419.183 167.113 li
419.183 167.063 li
419.219 167.026 li
419.295 166.886 li
419.163 166.77 li
419.076 166.82 li
419.031 166.976 li
419.019 167.167 li
418.863 167.026 li
418.946 166.82 li
419.156 166.629 li
419.385 166.549 li
419.43 166.518 li
419.666 166.293 li
419.763 166.242 li
419.992 166.182 li
420.093 166.095 li
420.037 166.056 li
420.009 166.01 li
419.979 165.864 li
420.113 165.995 li
420.167 166.031 li
420.263 166.04 li
420.366 166.016 li
420.498 165.955 li
420.613 165.875 li
420.83 165.476 li
420.867 165.317 li
420.72 165.251 li
420.775 165.19 li
420.837 165.169 li
420.894 165.161 li
420.945 165.135 li
421.063 164.969 li
421.207 164.894 li
421.34 164.909 li
421.439 164.738 li
421.479 164.582 li
421.466 164.42 li
421.402 164.23 li
421.34 164.23 li
421.299 164.365 li
421.288 164.426 li
421.285 164.516 li
421.252 164.431 li
421.247 164.24 li
421.223 164.169 li
421.173 164.149 li
420.945 164.119 li
420.986 164.008 li
421.158 163.963 li
421.364 163.968 li
421.511 164.002 li
421.466 163.772 li
421.311 163.646 li
421.146 163.646 li
421.063 163.781 li
420.825 163.781 li
419.928 164.23 li
419.441 164.27 li
419.326 164.315 li
419.26 164.431 li
419.257 164.542 li
419.268 164.648 li
419.243 164.738 li
419.332 164.798 li
419.362 164.894 li
419.357 165.135 li
419.25 164.868 li
419.163 164.738 li
419.046 164.677 li
418.892 164.688 li
418.83 164.711 li
418.789 164.772 li
418.702 164.878 li
418.843 165.814 li
418.785 165.814 li
418.789 165.732 li
418.78 165.664 li
418.76 165.598 li
418.73 165.532 li
418.678 165.854 li
418.385 166.77 li
418.437 166.795 li
418.459 166.825 li
418.477 166.856 li
418.504 166.886 li
418.4 166.986 li
418.369 167.163 li
418.385 167.534 li
418.362 167.7 li
418.311 167.883 li
418.237 168.052 li
418.165 168.179 li
417.868 168.48 li
417.825 168.605 li
417.76 168.652 li
417.367 168.858 li
417.004 169.425 li
416.78 169.451 li
416.666 169.517 li
416.519 169.824 li
416.414 169.989 li
416.284 170.115 li
416.121 170.191 li
415.741 170.237 li
415.598 170.301 li
415.495 170.406 li
415.442 170.552 li
415.507 170.98 li
415.442 171.112 li
415.155 171.067 li
415.442 170.946 li
415.353 170.809 li
415.28 170.663 li
415.231 170.512 li
415.213 170.361 li
415.277 170.216 li
415.43 170.16 li
415.616 170.131 li
415.779 170.049 li
415.811 169.985 li
415.854 169.788 li
415.887 169.708 li
415.965 169.642 li
416.061 169.586 li
416.144 169.512 li
416.18 169.396 li
416.268 169.274 li
416.452 169.16 li
416.596 169.013 li
416.575 168.808 li
416.452 168.748 li
416.258 168.737 li
416.081 168.697 li
416.005 168.552 li
416.015 168.465 li
416.057 168.304 li
416.066 168.213 li
416.057 167.967 li
416.066 167.907 li
416.365 167.394 li
416.405 167.198 li
416.387 166.841 li
416.396 166.679 li
416.457 166.489 li
416.559 166.277 li
416.571 166.177 li
416.519 166.095 li
416.719 165.87 li
417.141 165.019 li
417.17 164.989 li
417.235 164.889 li
417.273 164.788 li
417.226 164.738 li
417.101 164.762 li
417.051 164.823 li
417.019 164.904 li
416.944 164.995 li
416.788 165.08 li
416.41 165.241 li
416.287 165.362 li
416.317 165.241 li
416.473 165.129 li
416.673 165.05 li
416.827 165.019 li
416.879 164.984 li
416.976 164.738 li
417.069 164.648 li
417.142 164.638 li
417.218 164.648 li
417.315 164.622 li
417.43 164.471 li
417.52 164.225 li
417.6 163.812 li
417.547 163.566 li
417.416 163.545 li
417.027 163.781 li
417.086 163.691 li
417.182 163.577 li
417.293 163.479 li
417.435 163.424 li
417.481 163.395 li
417.52 163.379 li
417.537 163.41 li
417.549 163.429 li
417.576 163.455 li
417.606 163.479 li
417.628 163.49 li
417.686 163.511 li
417.772 163.622 li
417.825 163.667 li
417.994 163.711 li
418.183 163.707 li
418.474 163.667 li
418.584 163.606 li
418.657 163.465 li
418.738 163.108 li
418.747 162.911 li
418.73 162.821 li
418.695 162.765 li
418.588 162.64 li
418.565 162.625 li
418.557 162.313 li
418.521 162.151 li
418.446 161.981 li
418.211 161.694 li
417.925 161.548 li
417.631 161.572 li
417.367 161.805 li
417.332 161.845 li
417.28 161.884 li
417.253 161.921 li
417.235 162.037 li
417.253 162.032 li
417.163 162.138 li
417.094 162.183 li
417.004 162.202 li
416.906 162.252 li
416.519 162.595 li
416.421 162.751 li
416.369 162.897 li
416.348 163.058 li
416.345 163.249 li
416.365 163.31 li
416.399 163.374 li
416.415 163.439 li
416.33 163.606 li
416.313 163.711 li
416.32 163.817 li
416.345 163.892 li
416.255 163.817 li
416.243 163.68 li
416.287 163.354 li
416.251 163.293 li
416.164 163.318 li
415.939 163.5 li
415.893 163.556 li
415.859 163.622 li
415.835 163.722 li
415.779 163.667 li
415.827 163.59 li
415.862 163.389 li
415.918 163.304 li
416.017 163.223 li
416.05 163.183 li
416.118 162.998 li
416.166 162.926 li
416.221 162.866 li
416.268 162.796 li
416.287 162.686 li
416.237 162.584 li
416.123 162.609 li
416.009 162.704 li
415.949 162.821 li
415.887 162.821 li
415.803 162.54 li
415.46 162.62 li
415.088 162.755 li
414.925 162.654 li
415.113 162.704 li
415.251 162.62 li
415.374 162.495 li
415.526 162.429 li
415.676 162.444 li
416.005 162.545 li
415.974 162.418 li
415.942 162.368 li
415.887 162.313 li
416.148 162.328 li
416.32 162.257 li
416.638 161.921 li
416.827 161.789 li
416.875 161.72 li
416.795 161.638 li
416.752 161.649 li
416.643 161.669 li
416.515 161.669 li
416.405 161.638 li
416.457 161.583 li
416.716 161.619 li
416.954 161.363 li
417.161 161.075 li
417.315 161.015 li
417.604 160.803 li
417.655 160.733 li
417.639 160.648 li
417.571 160.617 li
417.43 160.622 li
417.271 160.598 li
417.101 160.598 li
416.938 160.643 li
416.795 160.733 li
416.759 160.694 li
416.724 160.683 li
416.686 160.683 li
416.638 160.678 li
416.879 160.607 li
416.989 160.551 li
417.084 160.451 li
417.201 160.487 li
417.372 160.501 li
417.53 160.482 li
417.6 160.427 li
417.615 160.387 li
417.651 160.355 li
417.69 160.316 li
417.707 160.255 li
417.69 160.175 li
417.615 160.039 li
417.6 159.974 li
417.586 159.842 li
417.555 159.697 li
417.499 159.572 li
417.43 159.49 li
417.305 159.466 li
417.019 159.536 li
416.857 159.546 li
416.96 159.424 li
417.298 159.244 li
417.43 159.099 li
417.395 159.038 li
417.359 158.988 li
417.313 158.953 li
417.253 158.922 li
417.223 159.022 li
417.163 159.072 li
417.092 159.128 li
417.027 159.209 li
416.976 159.154 li
417.036 159.072 li
417.076 158.961 li
417.071 158.861 li
417.004 158.816 li
416.906 158.856 li
416.87 158.948 li
416.848 159.043 li
416.795 159.099 li
416.759 159.078 li
416.724 159.017 li
416.678 158.953 li
416.606 158.922 li
416.509 158.943 li
416.375 159.012 li
416.287 159.038 li
416.287 158.988 li
416.41 158.967 li
416.444 158.887 li
416.441 158.776 li
416.457 158.649 li
416.507 158.509 li
416.571 158.409 li
416.663 158.329 li
416.795 158.252 li
416.345 158.033 li
416.327 158.292 li
416.261 158.591 li
416.123 158.802 li
415.887 158.816 li
415.808 158.742 li
415.763 158.641 li
415.7 158.596 li
415.582 158.676 li
415.481 158.726 li
415.163 158.771 li
415.037 158.816 li
415.037 158.755 li
415.529 158.49 li
415.781 158.292 li
415.887 158.033 li
415.745 158.078 li
415.604 158.046 li
415.325 157.917 li
415.392 158.107 li
415.34 158.223 li
414.987 158.424 li
414.942 158.374 li
414.932 158.348 li
414.925 158.313 li
415.034 158.279 li
415.06 158.284 li
415.1 158.313 li
415.166 158.239 li
415.237 158.197 li
415.346 158.086 li
415.312 158.057 li
415.16 157.972 li
415.1 157.917 li
415.245 157.755 li
415.27 157.745 li
415.223 157.665 li
415.072 157.554 li
415.037 157.494 li
415.083 157.388 li
415.158 157.308 li
415.191 157.216 li
415.1 157.071 li
415.093 157.142 li
415.037 157.297 li
415.041 157.142 li
415.007 156.991 li
414.934 156.864 li
414.817 156.785 li
414.809 156.84 li
414.791 156.875 li
414.772 156.909 li
414.755 156.951 li
414.817 156.951 li
414.746 157.071 li
414.705 157.197 li
414.732 157.303 li
414.875 157.353 li
414.73 157.403 li
414.618 157.313 li
414.517 157.166 li
414.417 157.071 li
414.292 157.147 li
414.265 157.202 li
414.271 157.266 li
414.196 157.504 li
414.146 157.534 li
414.015 157.52 li
414.169 157.454 li
414.115 157.308 li
413.97 157.152 li
413.85 157.071 li
413.932 157.041 li
414.077 157.071 li
414.195 157.071 li
414.133 156.9 li
414.134 156.759 li
414.188 156.633 li
414.32 156.473 li
414.365 156.341 li
414.417 156.276 li
414.496 156.227 li
414.654 156.15 li
414.699 156.11 li
414.713 156.044 li
414.699 155.798 li
414.674 155.724 li
414.616 155.637 li
414.559 155.592 li
414.534 155.626 li
414.477 155.758 li
414.337 155.879 li
414.166 155.984 li
414.015 156.05 li
414.015 156.11 li
414.077 156.11 li
414.077 156.166 li
413.905 156.182 li
413.848 156.255 li
413.85 156.501 li
413.803 156.644 li
413.737 156.774 li
413.701 156.896 li
413.737 157.015 li
413.502 156.915 li
413.393 156.919 li
413.337 157.071 li
413.285 157.071 li
413.298 156.885 li
413.422 156.8 li
413.592 156.744 li
413.737 156.673 li
413.737 156.623 li
413.63 156.539 li
413.507 156.533 li
413.387 156.512 li
413.285 156.391 li
413.484 156.438 li
413.496 156.311 li
413.412 156.161 li
413.311 156.136 li
413.241 156.161 li
413.148 156.14 li
413.054 156.095 li
412.997 156.05 li
412.957 155.964 li
412.947 155.652 li
412.881 155.833 li
412.872 155.994 li
412.813 156.105 li
412.601 156.11 li
412.795 156.084 li
412.795 156.004 li
412.711 155.944 li
412.658 155.969 li
412.61 156.015 li
412.509 156.055 li
412.409 156.136 li
412.375 156.276 li
412.319 156.276 li
412.236 156.089 li
412.114 156.1 li
412.011 156.24 li
411.979 156.452 li
411.777 156.446 li
411.584 156.633 li
411.418 156.891 li
411.353 157.126 li
411.4 157.266 li
411.594 157.528 li
411.634 157.665 li
411.579 157.745 li
411.297 157.851 li
411.177 157.917 li
411.221 158.062 li
411.113 158.152 li
410.787 158.252 li
410.666 158.197 li
410.568 158.133 li
410.496 158.046 li
410.447 157.917 li
410.439 157.76 li
410.475 157.624 li
410.523 157.509 li
410.624 157.157 li
410.649 156.925 li
410.56 156.734 li
410.273 156.623 li
410.277 156.699 li
410.269 156.769 li
410.222 156.9 li
410.146 156.734 li
410.215 156.633 li
410.33 156.578 li
410.392 156.533 li
410.405 156.401 li
410.444 156.271 li
410.497 156.15 li
410.562 156.05 li
410.484 156.01 li
410.409 156.015 li
410.338 156.07 li
410.273 156.166 li
410.222 156.11 li
410.437 155.959 li
410.634 155.854 li
410.798 155.718 li
410.899 155.486 li
410.933 155.512 li
411.012 155.546 li
410.922 154.888 li
410.899 154.812 li
410.766 154.701 li
410.594 154.692 li
410.481 154.761 li
410.529 154.893 li
410.523 155.004 li
410.322 155.366 li
410.273 155.518 li
410.144 155.727 li
410.132 155.769 li
410.083 155.792 li
409.958 155.903 li
409.882 155.938 li
409.935 155.883 li
409.986 155.788 li
410.004 155.698 li
409.962 155.652 li
409.89 155.692 li
409.803 155.774 li
409.73 155.858 li
409.701 155.909 li
409.754 156.282 li
409.746 156.473 li
409.649 156.623 li
409.632 156.512 li
409.646 156.372 li
409.618 156.245 li
409.479 156.166 li
409.439 156.231 li
409.397 156.266 li
409.338 156.282 li
409.249 156.276 li
409.338 156.187 li
409.358 156.081 li
409.311 155.994 li
409.198 155.938 li
409.187 156.034 li
409.142 156.11 li
409.066 156.155 li
408.972 156.166 li
409.174 155.949 li
409.198 155.938 li
409.291 155.898 li
409.479 155.938 li
409.435 155.803 li
409.454 155.663 li
409.537 155.431 li
409.546 155.351 li
409.542 155.285 li
409.549 155.214 li
409.589 155.149 li
409.632 155.129 li
409.82 155.063 li
409.855 155.034 li
410.012 155.039 li
410.047 155.008 li
410.055 154.943 li
410.094 154.801 li
410.104 154.727 li
410.083 154.571 li
410.024 154.491 li
409.92 154.485 li
409.764 154.531 li
409.989 154.531 li
409.712 154.65 li
409.649 154.697 li
409.602 154.782 li
409.587 154.872 li
409.584 154.948 li
409.563 155.008 li
409.209 155.446 li
409.081 155.546 li
409.082 155.452 li
409.133 155.3 li
409.224 155.094 li
409.227 155.039 li
409.198 154.697 li
409.137 154.697 li
409.117 154.798 li
409.029 154.898 li
409.021 154.978 li
408.94 155.013 li
408.909 155.039 li
408.904 154.903 li
408.952 154.822 li
409.021 154.748 li
409.081 154.642 li
409.032 154.661 li
408.952 154.677 li
408.909 154.697 li
408.897 154.591 li
408.917 154.51 li
408.977 154.47 li
409.081 154.47 li
408.963 154.349 li
408.831 154.455 li
408.634 154.812 li
408.596 154.761 li
408.586 154.711 li
408.596 154.65 li
408.634 154.581 li
408.596 154.576 li
408.569 154.56 li
408.547 154.545 li
408.515 154.531 li
408.623 154.505 li
408.669 154.444 li
408.637 154.385 li
408.515 154.365 li
408.412 154.394 li
408.332 154.465 li
408.308 154.56 li
408.373 154.671 li
408.412 154.756 li
408.402 154.877 li
408.362 154.994 li
408.318 155.063 li
408.229 155.149 li
408.159 155.174 li
407.715 155.14 li
407.681 155.094 li
407.659 154.978 li
407.676 154.973 li
407.701 154.938 li
407.726 154.883 li
407.722 154.812 li
407.708 154.743 li
407.694 154.706 li
407.661 154.697 li
407.582 154.697 li
407.569 154.656 li
407.639 154.47 li
407.659 154.391 li
407.641 154.304 li
407.491 154.079 li
407.446 154.158 li
407.435 154.193 li
407.383 154.193 li
407.442 153.981 li
407.701 153.449 li
407.659 153.232 li
407.489 153.238 li
407.271 153.806 li
407.151 153.856 li
407.104 154.007 li
407.053 154.299 li
406.981 154.415 li
406.893 154.33 li
406.758 154.391 li
406.681 154.565 li
406.751 154.812 li
406.668 154.722 li
406.554 154.571 li
406.505 154.425 li
406.612 154.365 li
406.671 154.288 li
406.668 154.113 li
406.614 153.922 li
406.526 153.796 li
406.522 154.052 li
406.455 154.238 li
406.323 154.375 li
406.134 154.47 li
406.166 154.41 li
406.254 154.293 li
406.304 154.243 li
406.304 154.193 li
406.272 154.134 li
406.304 154.079 li
406.304 154.028 li
406.229 154.063 li
406.017 154.243 li
406.062 154.079 li
406.174 153.931 li
406.238 153.791 li
406.134 153.635 li
406.154 153.595 li
406.187 153.464 li
406.081 153.539 li
406.029 153.629 li
405.965 153.856 li
405.954 153.75 li
405.965 153.545 li
406.012 153.504 li
406.096 153.398 li
406.134 153.283 li
406.044 153.232 li
405.928 153.333 li
405.818 153.55 li
405.76 153.78 li
405.795 153.912 li
405.763 153.928 li
405.738 153.947 li
405.714 153.957 li
405.677 153.962 li
405.726 154.037 li
405.727 154.103 li
405.69 154.153 li
405.614 154.193 li
405.548 154.103 li
405.552 153.936 li
405.507 153.856 li
405.407 153.816 li
405.295 153.806 li
405.201 153.78 li
405.163 153.711 li
405.193 153.373 li
405.51 153.328 li
405.614 153.288 li
405.56 153.253 li
405.492 153.238 li
405.417 153.253 li
405.337 153.288 li
405.376 153.107 li
405.417 153.042 li
405.507 153.007 li
405.396 152.875 li
405.337 152.835 li
405.507 152.835 li
405.507 152.78 li
405.34 152.74 li
405.288 152.851 li
405.261 152.986 li
405.163 153.007 li
405.142 152.981 li
405.124 152.955 li
405.111 152.936 li
405.111 152.896 li
405.054 152.896 li
405.045 153.058 li
404.99 153.172 li
404.925 153.267 li
404.885 153.349 li
404.897 153.489 li
404.935 153.645 li
404.917 153.775 li
404.766 153.856 li
404.818 153.761 li
404.854 153.666 li
404.848 153.57 li
404.766 153.464 li
404.656 153.685 li
404.584 153.785 li
404.484 153.856 li
404.396 153.746 li
404.404 153.59 li
404.477 153.459 li
404.57 153.404 li
404.648 153.338 li
404.617 153.198 li
404.484 152.952 li
404.452 152.875 li
404.436 152.804 li
404.407 152.749 li
404.342 152.729 li
404.293 152.754 li
404.226 152.825 li
404.168 152.91 li
404.144 152.981 li
404.134 153.328 li
404.085 153.473 li
403.975 153.574 li
403.987 153.454 li
404.056 153.162 li
404.031 153.061 li
403.967 153.066 li
403.896 153.162 li
403.804 153.349 li
403.676 153.388 li
403.562 153.354 li
403.454 153.304 li
403.354 153.288 li
403.273 153.343 li
403.014 153.635 li
403.433 152.74 li
403.354 152.608 li
403.388 152.568 li
403.43 152.489 li
403.466 152.447 li
403.438 152.412 li
403.427 152.388 li
403.418 152.362 li
403.403 152.333 li
403.517 152.277 li
403.539 152.211 li
403.479 152.182 li
403.354 152.217 li
403.398 152.106 li
403.499 151.929 li
403.609 151.789 li
403.693 151.769 li
403.743 151.769 li
403.763 151.477 li
403.527 151.366 li
403.244 151.442 li
403.126 151.708 li
403.179 151.708 li
403.211 151.674 li
403.354 151.592 li
403.396 151.674 li
403.403 151.708 li
403.333 151.728 li
403.298 151.749 li
403.288 151.794 li
403.291 151.878 li
403.179 151.769 li
403.146 151.875 li
403.095 151.944 li
402.952 152.106 li
402.998 152.166 li
403.018 152.222 li
402.997 152.262 li
402.837 152.307 li
402.837 152.367 li
402.873 152.428 li
402.896 152.447 li
402.938 152.568 li
403.079 152.764 li
403.126 152.896 li
403.063 152.759 li
402.86 152.529 li
402.781 152.388 li
402.726 152.388 li
402.719 152.598 li
402.689 152.775 li
402.619 152.916 li
402.494 153.007 li
402.497 152.926 li
402.542 152.795 li
402.557 152.729 li
402.557 152.418 li
402.512 152.291 li
402.413 152.307 li
402.317 152.407 li
402.271 152.529 li
402.261 152.695 li
402.231 152.745 li
402.191 152.68 li
402.154 152.498 li
402.144 152.338 li
402.161 152.196 li
402.206 152.081 li
402.271 151.989 li
402.09 152.071 li
402 152.207 li
401.933 152.346 li
401.815 152.447 li
401.757 152.423 li
401.663 152.362 li
401.574 152.322 li
401.537 152.357 li
401.505 152.438 li
401.431 152.483 li
401.336 152.503 li
401.249 152.498 li
401.351 152.388 li
401.318 152.317 li
401.207 152.307 li
401.081 152.388 li
400.994 152.346 li
400.916 152.357 li
400.851 152.383 li
400.798 152.388 li
400.731 152.346 li
400.711 152.307 li
400.698 152.256 li
400.652 152.186 li
400.529 152.106 li
400.464 152.177 li
400.415 152.256 li
400.341 152.217 li
400.283 152.217 li
400.245 152.288 li
400.151 152.383 li
400.113 152.447 li
400.164 152.227 li
400.41 151.895 li
400.396 151.653 li
399.994 152.05 li
399.987 151.965 li
399.957 151.944 li
399.903 151.95 li
399.826 151.934 li
399.574 151.844 li
399.543 151.825 li
399.384 151.878 li
399.216 151.995 li
399.069 152.135 li
398.978 152.277 li
398.997 152.116 li
399.075 151.995 li
399.191 151.905 li
399.532 151.688 li
399.609 151.603 li
399.656 151.487 li
399.719 151.487 li
399.748 151.622 li
399.831 151.677 li
399.945 151.664 li
400.057 151.592 li
400.121 151.502 li
400.144 151.391 li
400.121 151.336 li
400.057 151.376 li
399.994 151.376 li
400.029 151.286 li
400.227 151.034 li
400.012 150.748 li
399.883 150.643 li
399.826 150.722 li
399.862 150.817 li
399.923 150.918 li
399.943 151 li
399.857 151.034 li
399.744 151.008 li
399.719 150.939 li
399.713 150.849 li
399.656 150.752 li
399.479 150.693 li
399.406 150.838 li
399.394 151.045 li
399.405 151.145 li
399.309 151.22 li
399.109 151.558 li
398.978 151.653 li
399.231 151.262 li
399.266 151.12 li
399.224 151.014 li
399.013 150.722 li
398.926 150.637 li
398.926 150.894 li
398.891 150.984 li
398.809 151.034 li
398.809 150.862 li
398.753 150.862 li
398.671 150.994 li
398.696 151.09 li
398.735 151.185 li
398.701 151.315 li
398.677 151.256 li
398.587 151.095 li
398.563 151.014 li
398.564 150.994 li
398.577 150.979 li
398.639 150.521 li
398.587 150.521 li
398.567 150.622 li
398.521 150.688 li
398.45 150.728 li
398.354 150.752 li
398.397 150.667 li
398.41 150.596 li
398.382 150.545 li
398.299 150.521 li
398.299 150.471 li
398.389 150.445 li
398.447 150.405 li
398.458 150.355 li
398.405 150.304 li
398.405 150.239 li
398.463 150.239 li
398.587 150.188 li
398.505 150.114 li
398.468 150.043 li
398.489 149.987 li
398.587 149.963 li
398.545 149.868 li
398.482 149.796 li
398.398 149.751 li
398.299 149.736 li
398.405 149.792 li
398.405 149.847 li
398.284 149.902 li
398.072 150.199 li
397.955 150.304 li
398.032 150.325 li
398.094 150.36 li
398.146 150.411 li
398.181 150.471 li
398.104 150.487 li
398.069 150.5 li
398.049 150.532 li
398.016 150.582 li
397.955 150.582 li
397.945 150.505 li
397.913 150.445 li
397.861 150.395 li
397.789 150.36 li
397.801 150.762 li
397.789 150.862 li
397.729 150.802 li
397.724 150.953 li
397.633 150.974 li
397.445 150.918 li
397.323 150.984 li
397.304 151.069 li
397.328 151.175 li
397.338 151.315 li
397.191 151.251 li
397.163 151.135 li
397.206 151.014 li
397.275 150.918 li
397.365 150.873 li
397.479 150.833 li
397.547 150.762 li
397.497 150.637 li
397.47 150.662 li
397.456 150.672 li
397.391 150.698 li
397.416 150.646 li
397.47 150.521 li
397.497 150.471 li
397.338 150.471 li
397.375 150.4 li
397.378 150.336 li
397.347 150.285 li
397.275 150.239 li
397.221 150.36 li
397.158 150.36 li
397.257 149.947 li
397.259 149.741 li
397.158 149.62 li
397.089 149.907 li
397.029 150.063 li
396.962 150.129 li
396.831 150.129 li
396.776 150.153 li
396.764 150.235 li
396.766 150.411 li
396.685 150.376 li
396.653 150.36 li
396.603 150.411 li
396.552 150.487 li
396.506 150.566 li
396.478 150.637 li
396.452 150.944 li
396.426 151.034 li
396.383 150.939 li
396.267 150.783 li
396.253 150.698 li
396.293 150.606 li
396.452 150.5 li
396.54 150.411 li
396.405 150.395 li
396.365 150.289 li
396.355 150.148 li
396.309 150.018 li
396.253 150.129 li
396.201 150.074 li
396.243 149.953 li
396.243 149.736 li
396.309 149.681 li
396.3 149.641 li
396.291 149.635 li
396.276 149.635 li
396.253 149.62 li
396.291 149.545 li
396.296 149.455 li
396.26 149.374 li
396.17 149.344 li
396.083 149.374 li
396.048 149.45 li
396.027 149.62 li
395.99 149.681 li
395.923 149.767 li
395.913 149.823 li
395.923 149.907 li
395.944 149.958 li
395.948 150.003 li
395.913 150.074 li
395.9 150.029 li
395.868 149.968 li
395.857 149.907 li
395.746 149.998 li
395.754 150.148 li
395.785 150.32 li
395.743 150.471 li
395.716 150.365 li
395.676 150.265 li
395.611 150.183 li
395.518 150.129 li
395.463 150.183 li
395.388 150.229 li
395.32 150.235 li
395.293 150.159 li
395.32 150.119 li
395.463 150.059 li
395.518 150.018 li
395.589 149.892 li
395.624 149.767 li
395.619 149.635 li
395.569 149.505 li
395.513 149.55 li
395.477 149.59 li
395.458 149.646 li
395.461 149.736 li
395.32 149.681 li
395.177 149.651 li
395.06 149.675 li
395.003 149.792 li
394.945 149.792 li
394.838 149.681 li
394.838 149.62 li
394.925 149.595 li
394.99 149.55 li
395.035 149.49 li
395.06 149.405 li
395.115 149.405 li
395.173 149.505 li
395.246 149.469 li
395.289 149.36 li
395.262 149.259 li
394.891 149.003 li
394.934 149.127 li
394.96 149.254 li
394.925 149.369 li
394.783 149.46 li
394.835 149.334 li
394.824 149.223 li
394.766 149.172 li
394.669 149.228 li
394.612 149.228 li
394.589 149.104 li
394.606 148.952 li
394.589 148.826 li
394.468 148.775 li
394.366 148.815 li
394.278 148.897 li
394.178 148.947 li
394.04 148.892 li
394.082 149.003 li
394.145 149.072 li
394.199 149.159 li
394.211 149.289 li
394.032 149.143 li
393.923 149.087 li
393.811 149.112 li
393.746 149.209 li
393.754 149.318 li
393.804 149.414 li
393.871 149.46 li
393.871 149.505 li
393.771 149.49 li
393.704 149.435 li
393.669 149.339 li
393.646 149.228 li
393.569 149.268 li
393.527 149.329 li
393.515 149.41 li
393.527 149.505 li
393.469 149.339 li
393.503 149.066 li
393.473 148.947 li
393.51 148.916 li
393.548 148.831 li
393.59 148.775 li
393.469 148.68 li
393.338 148.67 li
393.202 148.709 li
393.077 148.775 li
393.187 148.892 li
393.057 148.906 li
393.011 149.017 li
393.021 149.907 li
393.091 149.857 li
393.137 149.792 li
393.167 149.717 li
393.187 149.62 li
393.269 149.686 li
393.473 149.963 li
393.646 150.043 li
393.654 150.119 li
393.677 150.174 li
393.712 150.209 li
393.761 150.239 li
393.701 150.315 li
393.662 150.395 li
393.646 150.487 li
393.646 150.582 li
393.535 150.492 li
393.518 150.239 li
393.389 150.188 li
392.789 150.188 li
392.865 150.033 li
392.865 149.892 li
392.813 149.757 li
392.684 149.55 li
392.599 149.46 li
392.564 149.405 li
392.532 149.309 li
392.518 149.212 li
392.473 149.143 li
392.366 149.112 li
392.221 149.106 li
392.106 149.117 li
392.03 149.177 li
391.953 149.469 li
391.843 149.606 li
391.713 149.717 li
391.496 149.852 li
390.868 150.125 li
390.803 150.129 li
390.747 150.038 li
390.813 149.947 li
390.918 149.857 li
390.973 149.762 li
390.97 149.389 li
390.893 149.198 li
390.716 149.112 li
390.521 149.138 li
390.355 149.223 li
390.255 149.369 li
390.244 149.57 li
390.1 149.49 li
389.861 149.418 li
389.725 149.344 li
389.631 149.63 li
389.065 149.987 li
388.931 150.33 li
388.871 150.31 li
388.598 150.038 li
388.538 149.932 li
388.518 149.913 li
388.441 149.862 li
388.423 149.847 li
388.423 149.781 li
388.473 149.675 li
388.473 149.62 li
388.441 149.519 li
388.407 149.46 li
388.307 149.344 li
387.692 149.857 li
387.341 150.33 li
387.301 150.45 li
387.286 150.611 li
387.314 150.656 li
387.37 150.698 li
387.433 150.752 li
387.457 150.833 li
387.451 150.928 li
387.406 151.145 li
387.411 151.19 li
387.457 151.315 li
387.433 151.352 li
387.396 151.391 li
387.356 151.416 li
387.341 151.426 li
387.307 151.603 li
387.286 151.794 li
387.259 151.82 li
387.159 151.96 li
387.145 151.989 li
387.103 152.031 li
387.09 152.111 li
387.079 152.207 li
387.065 152.277 li
386.979 152.378 li
386.856 152.428 li
386.708 152.442 li
386.319 152.452 li
386.205 152.483 li
386.169 152.584 li
386.209 152.78 li
386.319 153.016 li
386.344 153.061 li
386.57 153.026 li
386.677 153.021 li
386.771 153.061 li
386.656 153.087 li
386.563 153.137 li
386.476 153.162 li
386.376 153.121 li
386.314 153.182 li
386.376 153.232 li
386.325 153.359 li
386.386 153.454 li
386.486 153.555 li
386.545 153.685 li
386.289 153.499 li
386.095 153.674 li
385.968 154.013 li
385.913 154.425 li
385.873 154.545 li
385.847 154.706 li
385.807 154.727 li
385.225 154.616 li
385.068 154.494 li
384.987 154.47 li
384.68 154.571 li
384.559 154.817 li
384.503 155.486 li
384.463 155.673 li
384.448 155.819 li
384.503 155.924 li
384.675 155.999 li
384.847 156.02 li
385.016 155.999 li
385.159 155.954 li
385.244 155.879 li
385.324 155.924 li
385.404 155.959 li
385.49 155.984 li
385.585 155.999 li
385.852 155.984 li
385.923 155.999 li
385.807 156.136 li
385.672 156.24 li
385.505 156.327 li
385.072 156.443 li
384.905 156.452 li
384.77 156.422 li
384.619 156.337 li
384.655 156.528 li
384.946 156.814 li
385.023 156.985 li
385.048 157.121 li
385.103 157.276 li
385.127 157.433 li
385.072 157.573 li
385.023 157.473 li
384.958 157.363 li
384.871 157.271 li
384.76 157.237 li
384.559 157.221 li
384.458 157.161 li
384.277 156.9 li
384.188 156.909 li
384.111 156.779 li
384.045 156.603 li
383.966 156.478 li
383.85 156.346 li
383.593 155.879 li
383.532 155.975 li
383.474 156.084 li
383.396 156.182 li
383.286 156.221 li
383.196 156.189 li
382.859 155.938 li
382.829 156.02 li
382.789 156.065 li
382.692 156.166 li
382.667 156.176 li
382.582 156.182 li
382.548 156.195 li
382.521 156.231 li
382.521 156.266 li
382.527 156.301 li
382.516 156.337 li
381.892 157.237 li
381.882 157.271 li
381.889 157.342 li
381.868 157.377 li
381.826 157.398 li
381.747 157.398 li
381.688 157.414 li
381.651 157.408 li
381.622 157.403 li
381.605 157.438 li
381.596 157.473 li
381.551 157.573 li
381.525 157.609 li
381.459 157.654 li
381.31 157.72 li
381.239 157.776 li
381.244 157.835 li
381.319 157.996 li
381.3 158.033 li
381.224 158.078 li
381.164 158.173 li
381.083 158.269 li
380.956 158.313 li
380.636 158.972 li
380.488 159.063 li
380.318 159.109 li
380.194 159.099 li
380.075 159.154 li
379.9 159.168 li
379.538 159.154 li
379.458 159.178 li
379.302 159.295 li
379.197 159.319 li
379.011 159.334 li
378.94 159.355 li
378.879 159.379 li
378.644 159.591 li
378.411 159.929 li
377.849 161.106 li
377.813 161.215 li
377.804 161.382 li
377.739 161.678 li
377.591 162.041 li
376.803 163.379 li
376.727 163.611 li
376.717 163.767 li
376.737 164.074 li
376.727 164.23 li
376.671 164.41 li
376.585 164.537 li
376.384 164.738 li
376.364 164.793 li
376.339 164.939 li
376.304 164.969 li
376.259 164.984 li
376.099 165.08 li
376.043 165.135 li
375.996 165.301 li
375.996 165.426 li
375.967 165.527 li
375.821 165.643 li
375.2 165.875 li
374.84 165.934 li
374.629 165.864 li
374.729 165.698 li
374.864 165.558 li
375.031 165.458 li
375.222 165.421 li
375.304 165.336 li
375.814 164.606 li
375.846 164.45 li
375.812 163.998 li
375.776 163.842 li
375.767 163.756 li
375.79 163.677 li
375.936 163.49 li
375.956 163.41 li
375.971 163.244 li
375.991 163.167 li
376.036 163.103 li
376.093 163.047 li
376.145 162.987 li
376.163 162.911 li
376.168 162.484 li
376.192 162.434 li
376.228 162.389 li
376.445 162.032 li
376.51 161.971 li
376.585 161.926 li
376.647 161.871 li
376.687 161.678 li
376.771 161.519 li
376.787 161.438 li
376.813 160.773 li
376.837 160.678 li
376.917 160.583 li
377.115 160.4 li
377.18 160.286 li
377.073 160.286 li
377.073 160.22 li
377.152 160.13 li
377.226 160.004 li
377.274 159.863 li
377.295 159.742 li
377.271 159.576 li
377.194 159.501 li
376.903 159.435 li
376.737 159.369 li
376.631 159.284 li
376.57 159.173 li
376.557 159.012 li
376.603 158.912 li
376.787 158.7 li
376.837 158.535 li
376.727 158.586 li
376.585 158.71 li
376.501 158.755 li
376.539 158.535 li
376.471 158.414 li
376.319 158.414 li
376.103 158.535 li
376.008 158.676 li
375.881 159.209 li
375.669 159.003 li
375.384 159.063 li
375.101 159.269 li
374.909 159.49 li
374.954 159.602 li
374.976 159.662 li
375.081 159.612 li
375.423 160.06 li
375.539 160.311 li
375.43 160.451 li
375.412 160.26 li
375.327 160.088 li
375.208 159.948 li
374.916 159.697 li
374.734 159.602 li
374.588 159.591 li
374.519 159.718 li
374.448 159.602 li
374.361 159.567 li
374.307 159.622 li
374.342 159.773 li
374.227 159.667 li
374.147 159.572 li
374.036 159.506 li
373.839 159.49 li
373.623 159.536 li
373.548 159.631 li
373.516 159.763 li
373.441 159.943 li
373.451 159.681 li
373.422 159.581 li
373.325 159.546 li
373.325 159.612 li
373.396 159.752 li
373.386 160.396 li
373.471 160.833 li
373.607 161.247 li
373.502 161.162 li
373.396 161.025 li
373.312 160.868 li
373.267 160.733 li
373.211 160.733 li
373.039 161.075 li
372.983 161.075 li
373.028 160.905 li
373.204 160.572 li
373.267 160.396 li
373.296 160.215 li
373.29 160.049 li
373.26 159.888 li
373.211 159.718 li
373.09 159.888 li
372.929 160.054 li
373.125 159.687 li
373.155 159.581 li
373.135 159.44 li
373.084 159.366 li
372.616 159.063 li
372.444 158.982 li
372.244 158.922 li
372.048 158.903 li
371.847 158.922 li
371.138 159.112 li
370.921 159.219 li
370.77 159.39 li
370.71 159.662 li
370.538 159.567 li
370.337 159.511 li
370.136 159.496 li
369.969 159.546 li
369.583 159.874 li
369.467 160.004 li
369.382 160.16 li
369.326 160.305 li
369.255 160.427 li
369.13 160.506 li
369.009 160.522 li
368.943 160.501 li
368.884 160.498 li
368.783 160.567 li
368.707 160.652 li
368.658 160.749 li
368.606 160.959 li
368.503 160.874 li
368.439 160.729 li
368.382 160.451 li
368.292 160.3 li
368.265 160.226 li
368.3 160.139 li
368.35 160.075 li
368.382 159.999 li
368.395 159.919 li
368.382 159.829 li
368.271 159.893 li
368.16 160.109 li
368.043 160.17 li
368.08 160.085 li
368.194 159.924 li
368.22 159.858 li
368.19 159.763 li
368.108 159.747 li
367.998 159.768 li
367.872 159.773 li
367.707 159.708 li
367.521 159.591 li
367.369 159.456 li
367.153 159.063 li
366.414 158.752 li
366.096 158.469 li
366.038 158.39 li
365.946 158.197 li
366.329 158.424 li
366.469 158.419 li
366.631 158.197 li
366.554 158.046 li
366.499 157.856 li
366.424 157.303 li
366.343 157.161 li
365.815 156.708 li
365.705 156.578 li
365.604 156.227 li
365.348 155.894 li
365.268 155.718 li
365.277 155.623 li
365.316 155.531 li
365.382 155.431 li
365.348 155.335 li
365.287 155.269 li
365.232 155.224 li
365.205 155.179 li
365.186 154.692 li
365.271 154.203 li
365.261 154.031 li
365.176 153.886 li
365.036 153.756 li
364.131 153.182 li
364.391 153.177 li
364.498 153.158 li
364.581 153.121 li
364.663 153.047 li
364.864 152.78 li
364.964 152.714 li
365.066 152.669 li
365.146 152.608 li
365.205 152.498 li
365.226 152.383 li
365.205 151.989 li
365.247 151.719 li
365.247 151.592 li
365.205 151.487 li
365.102 151.407 li
364.979 151.397 li
364.755 151.426 li
364.361 151.352 li
364.245 151.376 li
364.165 151.463 li
364.155 151.563 li
364.205 151.653 li
364.3 151.708 li
364.3 151.769 li
364.123 151.714 li
363.964 151.468 li
363.793 151.487 li
363.688 151.598 li
363.718 151.738 li
363.798 151.884 li
363.843 152.021 li
363.742 152.238 li
363.496 152.438 li
362.435 152.976 li
362.219 153.127 li
362.002 153.317 li
361.88 153.464 li
361.679 153.785 li
361.549 153.936 li
361.423 154.028 li
361.242 154.134 li
361.052 154.214 li
360.89 154.243 li
360.925 154.184 li
360.954 154.137 li
360.996 154.107 li
361.062 154.079 li
361.062 154.028 li
360.653 154.103 li
360.462 154.193 li
360.375 154.335 li
360.312 154.525 li
360.146 154.697 li
359.944 154.837 li
359.763 154.923 li
359.148 155.134 li
358.992 155.234 li
358.843 155.311 li
358.223 155.431 li
356.196 156.825 li
355.83 157.006 li
355.445 157.126 li
355.355 157.137 li
355.186 157.121 li
355.106 157.126 li
355.02 157.152 li
354.888 157.221 li
354.85 157.237 li
354.461 157.221 li
354.311 157.252 li
354.139 157.353 li
353.853 157.639 li
353.837 157.67 li
353.827 157.76 li
353.797 157.806 li
353.758 157.821 li
353.646 157.816 li
353.425 157.912 li
353.335 157.846 li
353.303 157.694 li
353.345 157.52 li
353.395 157.433 li
353.524 157.271 li
353.566 157.182 li
353.576 157.086 li
353.557 157.01 li
353.529 156.94 li
353.484 156.75 li
353.414 156.588 li
353.303 156.446 li
353.179 156.391 li
353.077 156.433 li
352.78 156.628 li
352.641 156.673 li
351.982 156.785 li
350.557 156.845 li
350.034 156.996 li
349.854 157.015 li
349.767 157.036 li
349.687 157.065 li
349.621 157.065 li
349.597 156.985 li
349.597 156.87 li
349.606 156.8 li
349.642 156.739 li
349.711 156.673 li
349.838 156.607 li
350.366 156.452 li
350.724 156.433 li
350.864 156.396 li
351.552 156.11 li
351.644 156.025 li
351.694 155.898 li
351.826 155.774 li
351.99 155.668 li
352.156 155.597 li
352.726 155.48 li
352.932 155.366 li
353.123 155.335 li
353.203 155.29 li
353.425 155.039 li
353.515 154.978 li
353.713 154.923 li
353.868 154.963 li
354.004 155.063 li
354.114 155.179 li
354.235 155.26 li
354.763 155.431 li
354.942 155.457 li
355.418 155.431 li
355.527 155.391 li
355.783 155.094 li
356.031 154.917 li
356.136 154.806 li
356.181 154.671 li
356.066 153.962 li
356.069 153.59 li
356.246 153.423 li
356.86 153.232 li
356.961 153.142 li
357.138 152.886 li
357.268 152.81 li
357.545 152.579 li
357.701 152.503 li
357.772 152.447 li
357.811 152.397 li
357.842 152.352 li
357.865 152.291 li
357.883 152.217 li
357.883 151.95 li
357.772 151.12 li
357.857 150.426 li
357.967 150.148 li
357.992 150.043 li
358.334 149.62 li
358.39 149.58 li
358.506 149.511 li
358.566 149.46 li
358.974 148.871 li
359.36 148.439 li
359.24 148.387 li
359.2 148.458 li
359.124 148.493 li
359.019 148.503 li
358.902 148.493 li
358.902 148.439 li
359.059 148.423 li
359.19 148.387 li
359.19 148.329 li
359.093 148.287 li
359.044 148.273 li
358.964 148.273 li
358.964 148.217 li
359.11 148.222 li
359.325 148.302 li
359.446 148.329 li
359.576 148.273 li
359.743 148.151 li
360.016 147.9 li
360.084 147.774 li
360.089 147.644 li
360.081 147.522 li
360.101 147.422 li
360.2 147.308 li
360.449 147.104 li
360.553 146.975 li
360.698 146.718 li
360.753 146.583 li
360.814 146.284 li
360.976 146.043 li
361.097 145.667 li
361.69 144.948 li
361.565 144.942 li
361.514 144.901 li
361.489 144.827 li
361.434 144.745 li
361.338 144.686 li
361.137 144.645 li
361.062 144.599 li
361.062 144.554 li
361.211 144.53 li
361.576 144.585 li
361.79 144.494 li
361.988 144.464 li
362.026 144.404 li
362.047 144.334 li
362.103 144.303 li
362.446 144.223 li
362.962 144.208 li
363.098 144.167 li
363.198 144.057 li
363.628 143.312 li
363.938 142.904 li
364.356 142.618 li
364.979 142.467 li
365.268 142.467 li
365.414 142.507 li
365.504 142.502 li
366.303 141.542 li
367.009 140.822 li
367.41 140.213 li
367.914 139.323 li
368.194 138.579 li
368.3 138.434 li
368.466 138.312 li
369.016 138.011 li
369.125 137.92 li
369.19 137.839 li
369.467 137.175 li
369.543 137.104 li
369.887 136.741 li
369.995 136.656 li
370.638 136.354 li
370.76 136.27 li
370.881 136.149 li
371.173 135.707 li
371.252 135.641 li
371.551 135.514 li
371.665 135.233 li
371.712 134.945 li
371.791 134.794 li
371.932 135.088 li
372.229 135.077 li
372.561 134.871 li
372.813 134.574 li
372.964 134.313 li
372.983 134.231 li
372.958 134.136 li
372.844 133.966 li
372.813 133.866 li
372.787 133.347 li
372.813 133.154 li
373.014 132.617 li
373.039 132.451 li
373.034 132.12 li
372.983 131.808 li
372.735 131.313 li
372.697 131.153 li
372.683 130.982 li
372.646 130.795 li
372.531 130.454 li
372.364 130.177 li
372.148 129.967 li
371.896 129.8 li
371.082 129.382 li
370.932 129.351 li
370.648 129.2 li
370.481 129.15 li
370.402 129.155 li
370.223 129.2 li
370.202 129.216 li
370.105 129.171 li
369.916 129.02 li
369.83 128.991 li
369.644 128.985 li
369.566 128.965 li
369.492 128.904 li
369.418 128.891 li
369.317 128.94 li
369.13 129.044 li
368.794 129.105 li
368.472 129.065 li
368.19 128.959 li
367.989 128.814 li
367.908 128.724 li
367.837 128.613 li
367.787 128.486 li
367.726 128.161 li
367.636 128.015 li
367.414 127.743 li
367.168 127.3 li
367.133 127.203 li
367.153 126.756 li
367.139 126.621 li
367.021 126.534 li
366.586 126.365 li
366.43 126.333 li
366.238 126.365 li
366.083 126.455 li
365.965 126.584 li
365.89 126.732 li
365.882 126.817 li
365.882 126.912 li
365.874 127.002 li
365.829 127.068 li
365.745 127.079 li
365.694 127.018 li
365.66 126.938 li
365.594 126.857 li
365.607 126.756 li
365.67 126.55 li
365.708 126.47 li
365.718 126.42 li
365.7 126.365 li
365.648 126.338 li
365.589 126.32 li
365.544 126.274 li
365.499 126.203 li
365.488 126.163 li
365.488 126.108 li
365.544 126.108 li
365.607 126.203 li
365.708 126.259 li
365.946 126.333 li
366.006 126.288 li
366.146 126.299 li
366.228 126.274 li
366.294 126.228 li
366.43 126.026 li
366.464 125.907 li
366.459 125.714 li
366.433 125.519 li
366.398 125.383 li
366.329 125.288 li
366.232 125.202 li
366.146 125.101 li
366.076 124.844 li
365.927 124.548 li
365.89 124.418 li
365.906 124.322 li
365.981 124.161 li
365.996 124.08 li
365.972 123.984 li
365.855 123.818 li
365.829 123.768 li
365.774 123.688 li
365.499 123.365 li
365.382 123.286 li
365.323 123.305 li
365.277 123.36 li
365.232 123.406 li
365.15 123.4 li
365.102 123.346 li
365.094 123.27 li
365.12 123.204 li
365.176 123.175 li
365.247 123.09 li
365.271 122.892 li
365.277 122.239 li
365.268 122.159 li
365.221 122.078 li
365.036 121.852 li
365.015 121.504 li
364.979 121.344 li
364.9 121.146 li
364.803 120.982 li
364.755 120.921 li
364.673 120.89 li
364.557 120.876 li
364.457 120.845 li
364.406 120.781 li
364.425 120.688 li
364.507 120.524 li
364.521 120.443 li
364.512 120.327 li
364.481 120.268 li
364.446 120.212 li
364.406 120.126 li
364.297 119.612 li
364.089 119.226 li
364.068 119.194 li
364.049 119.115 li
363.999 119.049 li
363.938 118.999 li
363.898 118.938 li
363.877 118.858 li
363.864 118.687 li
363.843 118.602 li
363.784 118.506 li
363.708 118.43 li
363.642 118.35 li
363.618 118.239 li
363.618 117.53 li
363.562 117.375 li
363.375 117.113 li
363.219 116.227 li
363.195 115.131 li
363.168 114.274 li
363.198 113.24 li
363.108 111.931 li
362.979 111.629 li
362.807 111.735 li
362.641 112.052 li
362.539 112.389 li
362.479 113.124 li
362.335 113.671 li
362.314 113.862 li
362.203 113.565 li
362.372 112.45 li
362.372 111.09 li
362.282 110.754 li
362.137 110.453 li
361.399 109.45 li
360.951 109.003 li
359.929 108.26 li
359.582 108.077 li
359.426 107.953 li
359.33 107.696 li
359.27 107.72 li
359.166 107.842 li
359.129 107.911 li
359.124 108.017 li
359.24 108.858 li
359.643 110.09 li
359.929 110.699 li
360.166 111.077 li
360.22 111.307 li
360.15 111.544 li
360.036 111.207 li
359.531 110.296 li
359.305 109.728 li
359.193 109.25 li
359.134 109.114 li
359.034 109.019 li
358.974 109.053 li
358.934 109.175 li
358.833 109.657 li
358.534 110.402 li
358.375 110.568 li
358.113 110.638 li
357.484 110.939 li
357.278 111.116 li
357.158 111.373 li
357.087 111.64 li
356.984 111.855 li
356.847 112.052 li
356.313 112.635 li
356.056 112.761 li
355.989 112.828 li
355.97 112.907 li
355.995 113.084 li
355.979 113.153 li
355.905 113.225 li
355.85 113.235 li
355.783 113.225 li
355.709 113.253 li
355.577 113.394 li
355.519 113.556 li
355.456 113.909 li
355.377 114.1 li
355.029 114.613 li
354.933 114.843 li
354.868 114.944 li
354.708 115.025 li
354.701 115.086 li
354.718 115.161 li
354.713 115.237 li
353.596 117.057 li
353.512 117.142 li
353.4 117.197 li
353.335 117.197 li
353.269 117.184 li
353.168 117.203 li
353.002 117.345 li
352.835 117.737 li
352.54 117.953 li
352.484 118.115 li
352.488 118.3 li
352.569 118.657 li
352.554 118.723 li
352.031 119.678 li
351.985 119.799 li
352.02 119.9 li
352.082 119.979 li
352.092 120.051 li
351.982 120.106 li
351.89 120.136 li
351.826 120.181 li
351.764 120.237 li
351.708 120.313 li
351.064 121.757 li
351.01 122.008 li
350.984 122.072 li
350.92 122.119 li
350.748 122.178 li
350.713 122.22 li
350.744 122.31 li
350.88 122.511 li
350.909 122.606 li
350.9 122.717 li
350.858 122.783 li
350.813 122.833 li
350.769 122.908 li
350.592 123.28 li
350.351 123.622 li
350.049 123.889 li
349.875 124.226 li
349.763 124.367 li
349.621 124.482 li
348.691 125.037 li
348.335 125.182 li
348.193 125.293 li
348.092 125.489 li
348.026 125.674 li
347.971 125.75 li
347.886 125.825 li
347.835 125.846 li
347.745 125.82 li
347.704 125.825 li
347.658 125.865 li
347.584 125.962 li
347.534 125.997 li
347.357 126.013 li
347.042 125.941 li
346.694 125.907 li
346.438 125.695 li
346.261 125.635 li
346.105 125.635 li
345.104 125.82 li
344.973 125.825 li
344.882 125.75 li
344.944 125.629 li
345.093 125.508 li
345.256 125.453 li
345.259 125.373 li
344.736 124.936 li
344.524 124.648 li
344.46 124.593 li
344.349 124.558 li
344.31 124.579 li
344.288 124.624 li
344.063 124.905 li
343.967 124.976 li
343.675 125.082 li
343.368 125.307 li
343.278 125.349 li
342.961 125.362 li
342.794 125.402 li
342.664 125.362 li
342.402 125.212 li
342.268 125.182 li
341.984 125.172 li
341.85 125.146 li
341.29 124.905 li
341.05 124.899 li
340.998 124.865 li
341.004 124.81 li
341.085 124.648 li
341.089 124.563 li
340.998 124.437 li
340.863 124.402 li
340.707 124.442 li
340.566 124.523 li
340.475 124.632 li
340.396 124.775 li
340.315 124.886 li
340.215 124.916 li
340.018 124.926 li
339.913 125.045 li
339.843 125.182 li
339.736 125.262 li
339.566 125.248 li
339.47 125.217 li
339.43 125.257 li
339.425 125.463 li
339.363 125.608 li
339.213 125.714 li
338.866 125.836 li
338.821 125.871 li
338.741 125.952 li
338.687 125.966 li
338.642 125.952 li
338.56 125.891 li
338.515 125.886 li
338.343 125.886 li
338.283 125.926 li
338.219 126.042 li
338.102 126.383 li
337.99 126.494 li
337.799 126.525 li
337.689 126.494 li
337.614 126.434 li
337.351 126.113 li
337.306 126.098 li
337.176 126.108 li
337.015 126.143 li
336.873 126.188 li
336.734 126.219 li
336.314 126.163 li
336.239 126.143 li
336.14 126.087 li
335.928 125.891 li
335.818 125.82 li
335.764 125.812 li
335.701 125.82 li
335.582 125.815 li
335.507 125.796 li
335.38 125.73 li
335.319 125.714 li
334.968 125.674 li
334.838 125.605 li
334.682 125.434 li
334.394 125.228 li
334.369 125.137 li
334.555 125.111 li
334.409 124.965 li
334.237 124.844 li
334.042 124.77 li
333.82 124.754 li
333.665 124.804 li
333.503 124.835 li
333.344 124.835 li
333.18 124.81 li
333.087 124.764 li
333.065 124.698 li
333.07 124.619 li
333.061 124.529 li
332.985 124.341 li
333.035 124.186 li
333.056 124.181 li
333.101 124.181 li
333.142 124.166 li
333.156 124.116 li
333.146 124.069 li
333.11 123.979 li
333.097 123.934 li
333.09 123.768 li
333.056 123.728 li
332.94 123.667 li
332.759 123.598 li
332.622 123.603 li
332.352 123.749 li
331.943 123.868 li
331.622 123.754 li
330.812 122.968 li
330.777 122.889 li
330.802 122.778 li
330.963 122.616 li
331.019 122.505 li
330.973 122.426 li
330.823 122.439 li
330.485 122.577 li
330.319 122.682 li
330.001 122.948 li
329.699 123.093 li
329.63 123.12 li
329.564 123.109 li
329.498 123.043 li
329.529 122.889 li
329.495 122.808 li
329.207 122.833 li
328.548 123.341 li
328.352 123.325 li
328.257 123.204 li
328.125 123.159 li
327.98 123.169 li
327.834 123.23 li
327.699 123.365 li
327.654 123.517 li
327.628 123.667 li
327.557 123.794 li
327.321 123.895 li
327.022 123.889 li
326.702 123.849 li
326.4 123.844 li
325.928 123.889 li
325.767 123.863 li
325.595 123.863 li
325.289 124.01 li
324.635 124.17 li
324.468 124.135 li
324.383 124.066 li
324.287 123.889 li
324.227 123.813 li
324.147 123.773 li
323.563 123.627 li
323.422 123.562 li
322.97 123.19 li
322.787 123.09 li
322.592 123.069 li
322.491 123.104 li
322.441 123.148 li
322.377 123.296 li
322.29 123.648 li
322.279 124.01 li
322.24 124.156 li
321.999 124.513 li
321.934 124.583 li
321.837 124.624 li
321.742 124.619 li
321.666 124.574 li
321.59 124.542 li
321.489 124.563 li
321.386 124.693 li
321.259 124.931 li
321.158 125.177 li
321.133 125.328 li
321.229 125.394 li
321.59 125.413 li
321.745 125.449 li
321.901 125.595 li
321.979 125.916 li
322.089 126.092 li
322.314 126.243 li
322.386 126.309 li
322.682 126.69 li
322.964 126.933 li
323.025 127.023 li
323.055 127.129 li
323.039 127.203 li
323.01 127.28 li
322.983 127.386 li
322.994 127.748 li
323.039 128.079 li
322.994 128.377 li
322.734 128.648 li
322.189 128.809 li
321.666 128.703 li
321.147 128.492 li
320.615 128.356 li
320.213 128.381 li
320.082 128.367 li
319.926 128.301 li
319.63 128.11 li
319.468 128.044 li
319.307 128.023 li
319.065 128.084 li
318.909 128.1 li
318.789 128.074 li
318.361 127.918 li
317.974 128.065 li
317.723 128.206 li
317.585 128.216 li
317.461 128.155 li
317.347 128.06 li
317.215 127.979 li
317.053 127.959 li
316.913 128.015 li
316.802 128.1 li
316.686 128.161 li
316.521 128.155 li
316.354 128.129 li
316.238 128.155 li
315.887 128.431 li
315.786 128.478 li
315.67 128.478 li
315.083 128.381 li
314.971 128.341 li
314.84 128.235 li
314.784 128.155 li
314.715 128.116 li
314.533 128.11 li
314.26 128.14 li
314.125 128.14 li
313.975 128.11 li
313.758 127.994 li
313.602 127.864 li
313.506 127.698 li
313.451 127.46 li
313.2 127.259 li
312.803 127.42 li
312.094 127.864 li
311.927 127.833 li
311.626 127.647 li
311.424 127.626 li
311.237 127.692 li
311.116 127.809 li
311.012 127.933 li
310.88 128.055 li
310.71 128.145 li
310.594 128.185 li
310.509 128.261 li
310.302 128.804 li
310.218 128.954 li
309.668 129.649 li
309.417 129.835 li
309.036 129.93 li
308.779 129.94 li
308.078 129.811 li
307.78 129.795 li
307.516 129.866 li
306.852 130.163 li
306.57 130.333 li
306.429 130.383 li
306.288 130.374 li
306.039 130.273 li
305.91 130.258 li
305.859 130.318 li
305.87 130.444 li
305.915 130.695 li
305.892 130.841 li
305.835 130.993 li
305.693 131.253 li
305.559 131.414 li
305.211 131.48 li
304.819 131.464 li
304.553 131.396 li
304.497 131.33 li
304.437 131.149 li
304.37 131.067 li
304.235 130.997 li
304.144 131.012 li
304.069 131.063 li
303.964 131.093 li
303.808 131.088 li
303.627 131.057 li
303.45 131.007 li
303.305 130.938 li
303.249 130.872 li
303.163 130.74 li
303.128 130.721 li
303.034 130.787 li
302.979 130.891 li
302.932 131.012 li
302.871 131.113 li
302.802 131.163 li
302.611 131.25 li
302.549 131.3 li
302.54 131.385 li
302.591 131.556 li
302.586 131.636 li
302.357 131.782 li
301.654 131.903 li
301.529 132.059 li
301.584 132.224 li
301.74 132.551 li
301.796 132.723 li
301.8 132.919 li
301.745 133.064 li
301.487 133.467 li
301.419 133.472 li
301.353 133.432 li
301.287 133.412 li
301.287 133.392 li
301.258 133.361 li
301.213 133.326 li
301.173 133.306 li
301.136 133.321 li
301.029 133.403 li
300.975 133.422 li
300.131 133.347 li
300.004 133.356 li
299.909 133.427 li
299.682 133.76 li
299.546 133.9 li
299.39 134.011 li
299.188 134.091 li
299.022 134.125 li
298.877 134.141 li
298.726 134.117 li
298.562 134.046 li
298.35 133.874 li
298.273 133.704 li
298.233 133.527 li
298.104 133.332 li
297.947 133.205 li
297.781 133.115 li
297.409 132.974 li
296.026 132.729 li
295.497 132.562 li
295.346 132.482 li
295.245 132.34 li
295.069 131.948 li
294.999 131.858 li
294.848 131.771 li
294.813 131.631 li
294.793 131.475 li
294.696 131.35 li
294.621 131.34 li
294.457 131.385 li
294.355 131.358 li
294.32 131.324 li
294.264 131.194 li
294.235 131.149 li
294.189 131.128 li
294.089 131.113 li
294.047 131.097 li
293.973 131.012 li
293.812 130.721 li
293.735 130.636 li
293.475 130.433 li
293.338 130.258 li
293.108 129.88 li
292.931 129.74 li
292.754 129.684 li
292.608 129.705 li
292.463 129.745 li
292.296 129.755 li
292.203 129.729 li
292.121 129.684 li
292.04 129.628 li
291.86 129.438 li
291.85 129.367 li
291.981 129.192 li
292.156 128.854 li
292.148 128.753 li
292.127 128.743 li
292.071 128.759 li
291.971 128.734 li
291.659 128.613 li
291.563 128.607 li
291.393 128.668 li
291.291 128.663 li
291.216 128.573 li
291.177 128.407 li
291.166 128.224 li
291.169 128.095 li
291.201 127.999 li
291.301 127.838 li
291.341 127.753 li
291.347 127.677 li
291.326 127.46 li
291.341 127.391 li
291.393 127.254 li
291.397 127.189 li
291.367 127.098 li
291.277 126.928 li
291.267 126.817 li
291.291 126.732 li
291.381 126.584 li
291.412 126.505 li
291.407 126.42 li
291.333 126.172 li
291.326 125.865 li
291.371 125.55 li
291.357 125.268 li
291.181 125.066 li
291.104 125.045 li
290.944 125.042 li
290.865 125.026 li
290.764 124.976 li
290.508 124.759 li
290.181 124.587 li
290.02 124.478 li
289.933 124.322 li
289.949 124.246 li
290.032 124.106 li
290.032 124.016 li
290.014 123.929 li
290.003 123.749 li
289.987 123.662 li
289.751 123.125 li
289.721 122.968 li
289.721 122.863 li
289.712 122.802 li
289.641 122.662 li
289.606 122.631 li
289.5 122.591 li
289.46 122.561 li
289.465 122.53 li
289.505 122.429 li
289.511 122.384 li
289.249 121.881 li
289.218 121.72 li
289.271 120.377 li
289.439 119.704 li
289.465 119.528 li
289.437 119.059 li
289.475 118.848 li
289.557 118.657 li
289.776 118.295 li
289.823 118.26 li
289.873 118.239 li
289.923 118.215 li
289.949 118.16 li
289.942 118.104 li
289.877 118.018 li
289.868 117.967 li
289.895 117.943 li
289.998 117.927 li
290.02 117.897 li
290.003 117.843 li
289.933 117.761 li
289.908 117.711 li
289.908 117.602 li
289.953 117.541 li
290.014 117.485 li
290.069 117.409 li
290.181 117.038 li
290.214 116.957 li
290.432 116.605 li
290.517 116.328 li
290.542 116.319 li
290.598 116.319 li
290.653 116.303 li
290.693 116.263 li
290.701 116.208 li
290.653 116.097 li
290.639 116.042 li
290.677 115.644 li
290.532 115.7 li
290.557 115.553 li
290.698 115.211 li
290.632 115 li
290.481 114.83 li
290.353 114.653 li
290.355 114.406 li
290.563 114.18 li
291.241 113.944 li
291.559 113.656 li
291.745 113.571 li
291.82 113.516 li
291.87 113.42 li
291.873 113.349 li
291.865 113.274 li
291.87 113.179 li
291.936 112.968 li
292.04 112.867 li
292.378 112.716 li
292.542 112.59 li
292.569 112.474 li
292.534 112.333 li
292.508 112.148 li
292.563 111.981 li
292.686 111.791 li
292.836 111.635 li
292.992 111.574 li
293.073 111.558 li
293.118 111.519 li
293.132 111.458 li
293.111 111.378 li
293.057 111.307 li
292.955 111.272 li
292.695 111.232 li
292.616 111.232 li
292.563 111.201 li
292.569 110.99 li
292.534 110.939 li
292.484 110.9 li
292.368 110.688 li
292.085 110.432 li
292.005 110.302 li
292.037 110.111 li
292.127 109.969 li
292.151 109.854 li
291.977 109.717 li
291.617 109.602 li
291.482 109.506 li
291.387 109.286 li
291.367 109.199 li
291.367 109.125 li
291.387 108.979 li
291.407 108.932 li
291.482 108.832 li
291.502 108.781 li
291.482 108.728 li
291.402 108.63 li
291.387 108.596 li
291.472 108.44 li
291.754 108.149 li
291.81 107.953 li
291.815 107.816 li
291.783 107.786 li
291.69 107.776 li
291.593 107.746 li
291.517 107.68 li
291.457 107.599 li
291.387 107.53 li
290.902 107.263 li
290.793 107.117 li
290.729 107.191 li
290.656 107.208 li
290.481 107.162 li
290.442 107.157 li
290.353 107.157 li
290.315 107.146 li
290.28 107.097 li
290.307 106.99 li
290.271 106.961 li
290.164 106.961 li
290.003 107.036 li
289.928 107.046 li
289.883 107.006 li
289.763 106.85 li
289.687 106.8 li
289.606 106.784 li
289.511 106.779 li
289.43 106.805 li
289.395 106.871 li
289.345 106.926 li
289.244 106.911 li
289.048 106.845 li
288.887 106.871 li
288.757 106.905 li
288.671 106.879 li
288.625 106.729 li
288.58 106.67 li
288.49 106.623 li
288.403 106.62 li
288.358 106.684 li
288.338 106.779 li
288.293 106.815 li
288.218 106.815 li
288.117 106.794 li
287.987 106.724 li
287.897 106.604 li
287.855 106.453 li
287.88 106.297 li
288.102 106.06 li
288.172 106.051 li
288.338 106.046 li
288.413 106.02 li
288.493 105.945 li
288.52 105.869 li
288.529 105.784 li
288.549 105.694 li
288.59 105.593 li
288.826 105.25 li
288.902 105.12 li
288.95 104.975 li
288.968 104.818 li
288.932 104.461 li
289.048 104.094 li
289.069 103.596 li
289.128 103.354 li
289.188 103.203 li
289.218 103.052 li
289.225 102.729 li
289.37 102.232 li
289.36 101.996 li
289.128 101.88 li
288.761 101.674 li
288.59 101.542 li
288.464 101.396 li
288.198 100.793 li
288.127 100.698 li
287.755 100.828 li
287.641 100.722 li
287.56 100.531 li
287.453 100.497 li
287.106 100.587 li
286.95 100.663 li
286.617 100.994 li
286.462 101.105 li
286.276 101.11 li
285.913 100.984 li
285.742 100.994 li
285.679 101.05 li
285.581 101.206 li
285.502 101.267 li
285.44 101.261 li
285.38 101.221 li
285.324 101.161 li
285.266 101.121 li
285.1 101.09 li
284.631 101.15 li
284.51 101.14 li
284.42 101.095 li
284.333 101.045 li
284.231 100.999 li
284.139 100.979 li
283.645 100.944 li
283.46 100.954 li
283.092 101.034 li
283.097 101.04 li
283.328 101.071 li
283.544 101.15 li
283.716 101.301 li
284.259 102.729 li
284.313 103.123 li
284.142 103.525 li
283.584 104.21 li
283.271 104.485 li
282.896 104.727 li
282.097 105.08 li
282.024 105.089 li
281.864 105.089 li
281.799 105.115 li
281.732 105.184 li
281.507 105.699 li
281.431 106.06 li
281.365 106.226 li
281.124 106.543 li
280.838 106.684 li
280.145 106.771 li
279.687 106.9 li
279.54 106.916 li
279.394 106.879 li
279.111 106.745 li
278.966 106.704 li
278.474 106.639 li
278.323 106.665 li
278.262 106.76 li
278.483 107.091 li
278.508 107.263 li
278.383 107.384 li
278.175 107.464 li
277.955 107.503 li
277.78 107.514 li
277.302 107.485 li
277.14 107.499 li
276.778 107.646 li
276.657 107.866 li
276.607 108.506 li
276.572 108.606 li
276.516 108.701 li
276.445 108.792 li
276.36 108.858 li
276.234 108.908 li
276.159 108.897 li
276.088 108.868 li
275.974 108.863 li
275.884 108.882 li
275.731 108.953 li
275.63 108.963 li
275.561 108.953 li
275.299 108.878 li
274.982 108.858 li
274.826 108.882 li
274.67 108.929 li
274.482 109.038 li
274.051 109.501 li
273.921 109.593 li
273.755 109.662 li
273.578 109.723 li
273.411 109.752 li
273.222 109.752 li
273.064 109.702 li
272.916 109.638 li
272.734 109.587 li
272.361 109.643 li
271.733 110.095 li
271.379 110.215 li
271.058 110.18 li
269.469 109.527 li
269.105 109.445 li
268.819 109.516 li
268.79 109.567 li
268.759 109.707 li
268.719 109.773 li
268.647 109.813 li
268.388 109.863 li
268.206 109.924 li
268.125 110.019 li
268.11 110.15 li
268.105 110.321 li
268.005 110.648 li
267.777 110.709 li
267.098 110.598 li
266.627 110.643 li
266.484 110.678 li
266.304 110.789 li
266.27 110.915 li
266.294 111.066 li
266.304 111.251 li
266.249 111.453 li
266.169 111.619 li
266.117 111.791 li
266.147 112.011 li
266.192 112.103 li
266.238 112.158 li
266.272 112.214 li
266.299 112.429 li
266.446 112.746 li
266.521 113.087 li
266.525 113.431 li
266.446 113.762 li
266.27 114.063 li
266.138 114.22 li
266.058 114.28 li
265.963 114.285 li
265.842 114.266 li
265.767 114.301 li
265.601 114.446 li
265.429 114.542 li
265.289 114.582 li
265.133 114.577 li
264.941 114.557 li
264.774 114.502 li
264.573 114.396 li
264.394 114.266 li
264.282 114.134 li
264.162 113.949 li
263.286 112.923 li
262.768 112.555 li
262.289 111.896 li
262.003 111.614 li
261.454 111.302 li
261.128 111.191 li
260.847 111.222 li
260.654 111.458 li
260.601 111.78 li
260.49 112.058 li
260.141 112.158 li
259.779 111.987 li
259.21 111.495 li
258.808 111.402 li
258.648 111.423 li
258.189 111.534 li
257.983 111.548 li
257.824 111.513 li
257.486 111.378 li
257.123 111.373 li
256.777 111.544 li
256.443 111.77 li
256.118 111.941 li
255.775 111.926 li
255.559 111.69 li
255.434 111.347 li
255.292 110.759 li
255.192 110.482 li
255.05 110.231 li
254.87 110.05 li
254.658 109.945 li
254.095 109.789 li
253.063 109.707 li
251.201 109.979 li
251.053 109.913 li
250.941 109.749 li
250.81 109.381 li
250.614 109.084 li
250.292 108.781 li
249.909 108.585 li
249.532 108.611 li
249.421 108.717 li
249.357 108.873 li
249.332 109.053 li
249.35 109.225 li
249.451 109.405 li
249.596 109.497 li
249.77 109.567 li
249.939 109.662 li
250.064 109.799 li
250.126 109.945 li
250.228 110.276 li
250.598 110.985 li
250.76 111.182 li
251.153 111.489 li
251.323 111.669 li
251.686 112.167 li
252.491 112.786 li
252.817 112.973 li
253.209 113.119 li
253.399 113.235 li
253.889 113.828 li
254.246 114.124 li
254.407 114.301 li
254.467 114.507 li
254.467 114.809 li
254.447 114.959 li
254.387 115.105 li
254.166 115.401 li
254.079 115.553 li
254.055 115.75 li
254.267 116.79 li
254.296 117.134 li
254.221 117.837 li
254.24 118.179 li
254.387 118.467 li
254.648 118.773 li
254.949 119.306 li
255.213 119.639 li
255.845 120.866 li
255.986 121.313 li
256.083 121.464 li
256.108 121.55 li
256.108 121.625 li
256.052 121.841 li
256.021 122.31 li
255.986 122.466 li
255.67 123.034 li
255.608 123.235 li
255.618 123.416 li
255.69 123.556 li
255.82 123.627 li
255.997 123.582 li
256.485 123.638 li
257.486 123.91 li
258.019 123.905 li
258.538 123.833 li
259.62 123.863 li
260.141 123.939 li
261.183 123.974 li
261.35 124.035 li
261.379 124.146 li
261.294 124.432 li
261.284 124.563 li
261.297 125.121 li
261.284 125.243 li
261.051 125.756 li
261.022 125.886 li
261.038 126.032 li
260.961 126.208 li
260.694 126.309 li
260.141 126.415 li
260.057 126.415 li
259.824 126.378 li
259.713 126.399 li
259.255 126.605 li
258.054 127.557 li
257.882 127.642 li
257.727 127.667 li
256.742 127.652 li
256.434 127.677 li
256.128 127.783 li
255.785 128.039 li
255.645 128.311 li
255.589 129.025 li
255.459 129.534 li
255.489 130.036 li
255.463 130.192 li
255.417 130.337 li
255.317 130.544 li
255.182 130.745 li
255.011 130.912 li
254.618 131.133 li
254.166 131.576 li
253.592 131.994 li
253.421 132.175 li
253.265 132.506 li
253.164 132.657 li
253.023 132.718 li
252.862 132.628 li
252.817 132.44 li
252.849 132.229 li
252.897 132.078 li
253.074 131.742 li
253.068 131.576 li
252.887 131.47 li
252.701 131.49 li
252.5 131.602 li
252.153 131.858 li
251.715 132.083 li
251.521 132.215 li
251.365 132.417 li
251.191 132.789 li
251.082 132.945 li
250.035 133.633 li
249.863 133.668 li
249.698 133.638 li
249.286 133.442 li
249.135 133.442 li
249.004 133.538 li
248.818 133.734 li
248.651 133.86 li
248.511 133.9 li
248.36 133.916 li
248.168 133.966 li
248.083 134.016 li
247.811 134.252 li
247.776 134.272 li
247.696 134.302 li
247.661 134.328 li
247.641 134.373 li
247.631 134.484 li
247.621 134.519 li
247.308 134.58 li
246.972 134.548 li
246.67 134.625 li
246.479 135.006 li
246.409 135.696 li
246.323 136.038 li
246.123 136.294 li
245.956 136.375 li
245.79 136.384 li
245.446 136.331 li
245.235 136.339 li
245.096 136.405 li
244.583 137.019 li
244.491 137.18 li
244.412 137.381 li
244.401 137.447 li
244.412 137.683 li
244.375 137.793 li
244.219 137.965 li
244.069 138.216 li
243.888 138.362 li
243.681 138.479 li
243.501 138.542 li
243.311 138.553 li
243.163 138.498 li
243.047 138.381 li
242.957 138.206 li
242.937 137.814 li
243.137 137.497 li
243.39 137.18 li
243.521 136.797 li
243.512 136.601 li
243.457 136.426 li
243.365 136.26 li
243.168 136.013 li
243.079 135.927 li
242.978 135.852 li
242.867 135.802 li
242.766 135.791 li
242.594 135.817 li
241.997 135.797 li
241.83 135.817 li
241.629 135.882 li
241.296 136.088 li
240.582 136.416 li
240.415 136.526 li
240.231 136.701 li
239.913 137.084 li
239.738 137.254 li
239.571 137.355 li
239.407 137.402 li
239.042 137.421 li
238.868 137.497 li
238.601 137.793 li
238.41 137.879 li
238.228 137.864 li
238.087 137.783 li
237.958 137.683 li
237.791 137.617 li
237.629 137.622 li
237.162 137.759 li
236.654 137.648 li
236.151 137.296 li
232.271 133.839 li
231.956 133.9 li
231.417 134.051 li
230.697 134.247 li
230.527 134.223 li
230.457 134.011 li
230.427 133.583 li
230.628 131.213 li
230.552 130.689 li
230.271 129.825 li
229.948 129.182 li
229.047 127.994 li
228.846 127.647 li
228.584 127.002 li
228.42 126.695 li
228.208 126.489 li
228.077 126.428 li
227.719 126.299 li
227.598 126.288 li
227.518 126.333 li
227.378 126.479 li
227.301 126.515 li
227.01 126.555 li
226.87 126.64 li
226.647 126.837 li
226.326 126.989 li
225.691 127.658 li
224.691 128.98 li
224.44 129.216 li
224.114 129.403 li
223.839 129.499 li
223.545 129.568 li
223.247 129.579 li
222.97 129.499 li
222.694 129.271 li
222.466 128.949 li
222.301 128.592 li
222.117 128.065 li
222.035 127.914 li
221.908 127.798 li
221.724 127.722 li
221.552 127.687 li
221.485 127.658 li
221.421 127.597 li
221.406 127.536 li
221.403 127.37 li
221.366 127.314 li
221.291 127.375 li
220.797 128.607 li
220.636 128.843 li
220.687 128.875 li
220.898 128.904 li
220.979 128.999 li
220.958 129.182 li
220.979 129.327 li
221.284 129.342 li
221.351 129.382 li
221.376 129.454 li
221.366 129.558 li
221.392 129.613 li
221.461 129.663 li
221.603 129.734 li
218.06 129.734 li
216.364 129.74 li
211.754 129.74 li
211.416 129.7 li
210.786 129.438 li
210.183 129.306 li
209.866 129.327 li
209.297 129.589 li
208.956 129.613 li
208.779 129.589 li
208.633 129.589 li
208.493 129.618 li
208.135 129.8 li
207.985 129.846 li
207.583 129.846 li
207.642 130.163 li
207.638 130.731 li
207.638 131.295 li
207.631 131.858 li
207.627 132.427 li
207.627 132.99 li
207.623 133.559 li
207.623 134.122 li
207.617 134.686 li
207.612 135.178 li
207.804 135.199 li
208.151 134.977 li
208.356 134.921 li
208.463 134.921 li
208.567 134.942 li
208.643 134.987 li
208.654 135.167 li
208.744 135.188 li
209.538 135.072 li
209.729 135.077 li
210.093 135.202 li
210.178 135.212 li
210.45 135.208 li
210.71 135.167 li
210.792 135.178 li
210.866 135.212 li
210.902 135.254 li
210.928 135.289 li
210.966 135.323 li
211.123 135.419 li
211.209 135.434 li
211.601 135.152 li
211.732 135.117 li
211.868 135.143 li
212.281 135.354 li
212.401 135.434 li
212.542 135.611 li
212.683 135.707 li
212.744 135.767 li
212.769 135.842 li
212.772 135.937 li
212.799 136.022 li
212.98 136.133 li
212.936 136.431 li
213.065 136.556 li
213.256 136.632 li
213.356 136.688 li
213.413 136.757 li
213.413 136.868 li
213.352 136.908 li
213.272 136.918 li
213.22 136.948 li
213.201 137.119 li
213.282 137.487 li
213.282 137.678 li
213.227 137.764 li
213.14 137.828 li
213.081 137.899 li
213.105 138.011 li
213.172 138.076 li
213.352 138.161 li
213.413 138.216 li
213.503 138.396 li
213.532 138.548 li
213.483 138.648 li
213.327 138.699 li
213.251 138.69 li
213.1 138.634 li
213.01 138.634 li
212.949 138.674 li
212.859 138.799 li
212.799 138.841 li
212.669 138.846 li
212.36 138.799 li
212.211 138.81 li
212.246 138.584 li
212.169 138.492 li
212.019 138.498 li
211.836 138.548 li
211.672 138.624 li
211.617 138.593 li
211.033 138.005 li
210.883 137.904 li
210.71 137.87 li
210.498 137.894 li
210.339 137.965 li
210.072 138.135 li
209.916 138.156 li
209.75 138.227 li
209.665 138.407 li
209.545 138.542 li
209.277 138.487 li
209.045 138.381 li
208.921 138.392 li
208.602 138.639 li
208.317 138.791 li
208.006 138.899 li
207.667 138.971 li
207.099 139.005 li
206.938 139.051 li
206.782 139.077 li
206.585 139.042 li
206.395 139.047 li
206.218 139.126 li
206.063 139.167 li
205.943 139.056 li
205.927 139.629 li
205.921 139.841 li
205.901 140.394 li
205.88 141.174 li
205.856 142.07 li
205.832 142.965 li
205.811 143.75 li
205.797 144.298 li
205.79 144.509 li
205.78 144.922 li
205.827 145.213 li
205.921 145.385 li
206.245 145.752 li
206.667 146.134 li
206.852 146.411 li
206.938 146.482 li
207.093 146.541 li
207.426 146.617 li
207.567 146.702 li
207.617 146.784 li
207.697 146.964 li
207.757 147.051 li
207.842 147.104 li
208.035 147.196 li
208.115 147.257 li
208.366 147.522 li
208.493 147.623 li
209.152 147.871 li
209.292 147.945 li
209.438 148.066 li
209.538 148.212 li
209.604 148.378 li
209.645 148.559 li
209.649 148.805 li
209.665 148.886 li
209.709 148.966 li
209.765 149.032 li
209.81 149.104 li
209.836 149.198 li
209.781 149.395 li
209.523 149.781 li
209.469 149.932 li
209.548 150.125 li
209.866 150.476 li
209.931 150.592 li
209.906 150.802 li
209.926 150.883 li
210.003 151 li
210.058 151.05 li
210.117 151.08 li
210.172 151.125 li
210.223 151.214 li
210.232 151.312 li
210.214 151.386 li
210.207 151.471 li
210.262 151.582 li
210.329 151.637 li
210.508 151.714 li
210.59 151.764 li
210.772 152.025 li
210.821 152.066 li
210.902 152.081 li
210.948 152.095 li
210.973 152.132 li
211.003 152.19 li
210.988 152.211 li
211.033 152.523 li
211.011 152.619 li
210.958 152.785 li
210.963 152.881 li
211.274 153.383 li
211.366 153.629 li
211.185 154.087 li
211.209 154.459 li
211.073 155.219 li
211.078 155.597 li
210.928 156.161 li
210.928 156.327 li
210.81 156.744 li
210.717 157.248 li
210.474 158.575 li
210.232 159.898 li
209.986 161.226 li
209.747 162.554 li
209.503 163.881 li
209.257 165.211 li
209.014 166.539 li
208.775 167.862 li
208.528 169.189 li
208.287 170.517 li
208.043 171.845 li
207.797 173.173 li
207.556 174.506 li
207.316 175.836 li
207.07 177.164 li
206.827 178.492 li
206.681 178.783 li
206.702 179.015 li
206.623 179.23 li
206.48 179.428 li
206.199 179.629 li
206.083 179.643 li
205.966 179.613 li
205.866 179.542 li
205.765 179.442 li
205.72 179.381 li
205.68 179.175 li
205.588 179.024 li
205.422 178.965 li
205.239 178.979 li
205.086 179.06 li
204.983 179.211 li
204.845 179.523 li
204.689 179.664 li
204.594 179.547 li
204.528 179.417 li
204.473 179.336 li
204.407 179.322 li
204.337 179.327 li
204.257 179.301 li
203.849 178.979 li
203.769 178.868 li
203.753 178.722 li
203.827 178.41 li
203.814 178.246 li
203.748 178.124 li
203.653 178.013 li
203.546 177.984 li
203.396 178.219 li
203.295 178.19 li
203.089 178.008 li
202.949 177.952 li
202.827 177.938 li
202.712 177.968 li
202.581 178.024 li
202.24 178.295 li
202.118 178.335 li
202.028 178.285 li
202.004 178.164 li
201.968 178.044 li
201.837 177.993 li
201.706 178.059 li
201.65 178.199 li
201.616 178.351 li
201.539 178.436 li
201.153 178.209 li
201.148 178.084 li
201.172 177.934 li
201.162 177.813 li
201.031 177.788 li
200.901 177.841 li
200.825 177.934 li
200.73 178.185 li
200.64 178.254 li
200.494 178.249 li
199.976 178.114 li
199.889 178.124 li
199.497 178.315 li
199.392 178.41 li
199.362 178.521 li
199.432 178.717 li
199.412 178.799 li
199.282 178.838 li
199.156 178.904 li
199.09 179.024 li
199.045 179.171 li
198.963 179.307 li
198.717 179.547 li
198.613 179.679 li
198.537 179.84 li
198.365 180.01 li
198.193 179.854 li
198.063 179.698 li
198.024 179.886 li
197.862 180.016 li
197.431 179.835 li
197.23 179.915 li
197.119 180.1 li
197.043 180.147 li
196.911 180.126 li
196.847 180.066 li
196.755 179.88 li
196.7 179.825 li
196.564 179.904 li
196.442 180.097 li
196.334 180.222 li
196.106 179.97 li
195.916 179.931 li
195.72 179.976 li
195.583 180.091 li
195.564 180.187 li
195.579 180.272 li
195.579 180.357 li
195.499 180.463 li
195.469 180.458 li
195.424 180.433 li
195.368 180.423 li
195.316 180.449 li
195.242 180.549 li
195.212 180.574 li
195.101 180.619 li
195.03 180.574 li
194.979 180.483 li
194.9 180.423 li
194.79 180.407 li
194.407 180.463 li
194.155 180.468 li
194.029 180.483 li
193.914 180.534 li
193.858 180.605 li
193.808 180.785 li
193.763 180.835 li
193.697 180.83 li
193.491 180.79 li
193.375 180.8 li
192.994 180.962 li
193.028 180.785 li
192.942 180.811 li
192.777 180.976 li
192.671 181.013 li
192.594 181.021 li
192.531 180.986 li
192.445 180.907 li
192.313 180.806 li
192.229 180.83 li
192.133 180.901 li
191.977 180.92 li
191.88 180.891 li
191.695 180.806 li
191.604 180.795 li
191.539 180.83 li
191.514 180.886 li
191.504 180.941 li
191.475 180.976 li
191.419 180.997 li
190.735 181.071 li
190.594 181.113 li
190.377 181.264 li
189.991 181.636 li
189.745 181.716 li
189.608 181.832 li
189.533 181.882 li
189.462 181.896 li
189.38 181.867 li
189.306 181.832 li
189.235 181.827 li
189.176 181.893 li
189.023 182.194 li
188.928 182.314 li
188.772 182.446 li
188.314 182.697 li
187.893 183.009 li
187.746 183.094 li
187.596 183.145 li
187.484 183.149 li
187.178 183.104 li
187.077 183.129 li
187.037 183.185 li
187.012 183.245 li
186.971 183.29 li
186.624 183.386 li
186.537 183.482 li
186.479 183.93 li
186.388 184.065 li
186.253 184.161 li
186.076 184.252 li
186.031 184.261 li
185.915 184.266 li
185.879 184.281 li
185.854 184.327 li
185.85 184.377 li
185.85 184.422 li
185.844 184.453 li
185.799 184.528 li
185.775 184.599 li
185.723 184.649 li
185.604 184.654 li
185.447 184.673 li
185.296 184.739 li
185.164 184.84 li
184.964 185.062 li
184.738 185.168 li
184.627 185.273 li
184.592 185.358 li
184.587 185.438 li
184.562 185.514 li
184.481 185.585 li
184.405 185.609 li
183.958 185.609 li
183.788 185.56 li
183.632 185.539 li
183.532 185.62 li
183.42 185.755 li
183.278 185.821 li
182.942 185.887 li
182.897 185.882 li
182.791 185.846 li
182.751 185.851 li
182.726 185.892 li
182.721 186.012 li
182.71 186.048 li
182.596 186.107 li
182.529 186.123 li
182.418 186.128 li
182.223 186.178 li
182.186 186.3 li
182.249 186.445 li
182.323 186.565 li
182.368 186.696 li
182.413 187.199 li
182.397 187.331 li
182.323 187.445 li
182.238 187.556 li
182.173 187.678 li
182.117 188.03 li
182.082 188.159 li
181.84 188.667 li
181.76 188.939 li
181.8 189.212 li
181.871 189.479 li
181.871 189.709 li
181.736 190.474 li
181.649 190.716 li
181.527 190.942 li
180.668 192.084 li
180.38 192.346 li
179.908 193.392 li
179.729 193.684 li
179.597 193.996 li
179.591 194.378 li
179.673 194.573 li
180.069 195.028 li
180.114 195.168 li
180.206 195.832 li
180.251 196.023 li
180.432 196.401 li
180.491 196.592 li
180.487 196.773 li
180.453 196.954 li
180.315 197.295 li
180.12 197.633 li
179.893 197.869 li
179.606 198.02 li
179.234 198.115 li
178.649 198.125 li
178.47 198.186 li
178.179 198.448 li
177.851 198.649 li
177.293 199.127 li
176.624 199.514 li
176.206 199.842 li
175.973 199.982 li
175.87 200.073 li
175.769 200.284 li
175.687 200.39 li
175.341 200.601 li
175.249 200.702 li
175.201 200.837 li
175.184 201.294 li
174.978 202.05 li
174.863 202.281 li
174.812 202.487 li
174.888 202.683 li
175.457 203.498 li
175.542 203.852 li
175.612 204.008 li
175.637 204.162 li
175.537 204.328 li
175.401 204.41 li
175.24 204.434 li
174.913 204.418 li
174.701 204.434 li
174.555 204.479 li
174.253 204.661 li
174.068 204.73 li
173.917 204.722 li
173.582 204.59 li
173.399 204.59 li
173.428 204.741 li
173.671 205.143 li
173.719 205.354 li
173.674 205.492 li
173.609 205.616 li
173.6 205.798 li
173.495 205.979 li
173.106 206.145 li
173.177 206.291 li
173.515 206.481 li
174.597 207.613 li
174.823 207.769 li
175.084 207.88 li
175.396 207.976 li
175.642 208.172 li
175.724 208.504 li
175.634 208.821 li
175.36 208.992 li
175.084 208.891 li
174.958 208.886 li
174.947 209.037 li
175.039 209.44 li
175.089 209.55 li
175.341 209.742 li
175.692 209.882 li
176.01 210.049 li
176.146 210.316 li
176.201 210.501 li
176.473 210.869 li
176.563 211.065 li
176.567 211.226 li
176.522 211.538 li
176.542 211.694 li
176.649 211.885 li
176.89 212.202 li
176.965 212.418 li
177.007 212.761 li
177.062 212.916 li
177.182 213.032 li
177.835 213.395 li
177.925 213.47 li
178.062 213.646 li
178.144 213.721 li
178.224 213.751 li
178.4 213.776 li
178.475 213.802 li
178.591 213.921 li
178.649 214.072 li
178.657 214.244 li
178.581 214.617 li
178.586 214.773 li
178.636 214.908 li
178.988 215.366 li
179.139 215.511 li
179.315 215.603 li
179.792 215.704 li
179.954 215.789 li
180.096 215.929 li
180.189 216.085 li
180.335 216.438 li
180.975 217.368 li
181.096 217.468 li
181.403 217.674 li
181.514 217.791 li
181.739 218.132 li
181.79 218.269 li
181.881 218.968 li
181.84 219.214 li
181.773 219.375 li
181.688 219.48 li
181.313 219.778 li
181.306 220.01 li
181.258 220.11 li
181.146 220.174 li
181.011 220.211 li
180.895 220.224 li
180.793 220.291 li
180.703 220.422 li
180.567 220.687 li
180.377 220.944 li
179.94 221.383 li
179.763 221.664 li
183.088 221.679 li
184.093 221.88 li
184.134 221.901 li
184.209 221.962 li
184.255 221.975 li
184.295 221.965 li
184.36 221.92 li
184.392 221.915 li
184.551 221.946 li
184.889 222.052 li
185.23 222.222 li
185.387 222.269 li
185.759 222.308 li
186.262 222.273 li
186.434 222.308 li
186.593 222.393 li
186.82 222.594 li
186.971 222.694 li
187.051 222.706 li
187.148 222.689 li
187.233 222.694 li
187.283 222.766 li
187.293 222.846 li
187.283 223.089 li
187.303 223.264 li
187.383 223.403 li
187.605 223.671 li
187.656 223.816 li
187.629 223.978 li
187.529 224.295 li
187.626 224.612 li
188.208 224.975 li
188.385 225.306 li
188.407 225.403 li
188.476 225.572 li
188.497 225.657 li
188.476 225.763 li
188.344 225.916 li
188.298 226.006 li
188.288 226.176 li
188.306 226.323 li
188.295 226.469 li
188.205 226.644 li
190.126 226.644 li
191.604 226.649 li
193.078 226.649 li
194.557 226.654 li
194.865 226.654 li
195.014 226.614 li
195.096 226.549 li
195.133 226.488 li
195.178 226.438 li
195.292 226.427 li
195.382 226.458 li
195.442 226.509 li
195.514 226.549 li
195.625 226.544 li
195.785 226.458 li
196.077 226.231 li
196.479 226.096 li
196.59 225.935 li
196.665 225.739 li
196.772 225.557 li
196.911 225.453 li
197.466 225.21 li
197.979 225.07 li
198.13 224.954 li
198.193 224.858 li
198.291 224.646 li
198.365 224.546 li
198.461 224.472 li
198.672 224.34 li
198.77 224.261 li
199.005 223.913 li
199.14 223.761 li
199.553 223.535 li
199.72 223.403 li
200.031 223.089 li
200.201 222.962 li
200.75 222.655 li
200.905 222.5 li
201.198 222.142 li
201.37 221.997 li
201.529 221.915 li
201.695 221.88 li
202.042 221.846 li
202.053 221.957 li
202.039 221.975 li
201.952 222.126 li
201.931 222.263 li
201.894 222.369 li
201.737 222.438 li
201.75 222.465 li
201.777 222.529 li
201.792 222.555 li
201.685 222.584 li
201.616 222.666 li
201.6 222.771 li
201.716 222.967 li
201.636 222.988 li
201.526 222.967 li
201.481 222.952 li
201.264 222.962 li
201.217 222.972 li
201.299 223.124 li
201.359 223.396 li
201.415 223.552 li
201.505 223.676 li
201.75 223.867 li
201.849 223.988 li
201.904 224.159 li
201.886 224.316 li
201.822 224.462 li
201.727 224.597 li
201.695 224.652 li
201.675 224.753 li
201.636 224.798 li
201.591 224.808 li
201.505 224.753 li
201.459 224.753 li
201.373 224.803 li
201.293 224.863 li
201.228 224.935 li
201.178 225.025 li
201.103 225.355 li
201.103 225.86 li
201.098 226.922 li
201.098 227.987 li
201.093 229.049 li
201.093 230.116 li
201.087 231.183 li
201.087 232.248 li
201.082 233.31 li
201.078 234.377 li
201.078 235.055 li
201.785 234.486 li
201.968 234.447 li
202.188 234.643 li
202.563 235.081 li
202.767 235.272 li
203.15 235.462 li
203.568 235.528 li
203.994 235.509 li
204.407 235.427 li
204.745 235.312 li
206.752 234.291 li
207.099 234.306 li
207.26 234.351 li
207.419 234.362 li
207.757 234.34 li
207.979 234.357 li
208.12 234.417 li
208.432 234.618 li
208.709 234.673 li
209.735 234.563 li
209.892 234.568 li
210.508 234.592 li
210.836 234.557 li
211.396 234.422 li
211.667 234.462 li
211.944 234.542 li
212.24 234.587 li
212.714 234.573 li
213.362 234.648 li
213.669 234.718 li
213.955 234.693 li
214.082 234.713 li
214.7 234.98 li
214.735 234.986 li
214.812 234.986 li
214.846 234.98 li
215.042 234.97 li
215.436 235.081 li
215.637 235.105 li
215.841 235.055 li
216.068 234.97 li
216.29 234.92 li
216.541 234.996 li
216.682 235.066 li
216.547 235.261 li
216.451 235.462 li
216.399 235.679 li
216.436 236.022 li
216.461 236.102 li
216.531 236.146 li
216.673 236.146 li
217.855 235.912 li
218.085 235.795 li
218.515 235.483 li
218.871 235.362 li
219.007 235.343 li
219.147 235.343 li
219.294 235.367 li
219.409 235.333 li
219.67 235.086 li
219.821 235.01 li
220.213 234.97 li
220.355 234.91 li
220.525 234.79 li
220.681 234.634 li
220.823 234.452 li
220.938 234.271 li
221.154 233.777 li
221.271 233.616 li
221.739 233.119 li
222.03 232.571 li
222.146 232.434 li
222.336 232.298 li
222.593 232.178 li
222.729 232.132 li
222.869 232.113 li
223.106 232.153 li
224.092 232.108 li
224.217 232.127 li
224.333 232.158 li
224.495 232.248 li
224.821 232.505 li
224.977 232.571 li
225.259 232.5 li
225.4 232.258 li
225.476 231.952 li
225.566 231.706 li
225.656 231.611 li
225.91 231.404 li
226.013 231.278 li
226.174 231.021 li
226.271 230.905 li
226.396 230.793 li
226.558 230.744 li
226.854 230.599 li
227.196 230.482 li
227.362 230.378 li
227.508 230.241 li
227.624 230.084 li
227.66 229.99 li
227.66 229.924 li
227.684 229.86 li
227.774 229.788 li
227.851 229.764 li
228.219 229.759 li
228.312 229.743 li
228.398 229.713 li
228.465 229.659 li
228.475 229.577 li
228.43 229.397 li
228.438 229.32 li
228.558 229.26 li
228.751 229.23 li
229.092 229.22 li
229.244 229.241 li
229.565 229.331 li
229.706 229.326 li
229.813 229.271 li
229.873 229.175 li
229.922 229.079 li
229.983 229.014 li
230.063 228.984 li
230.239 228.974 li
230.326 228.958 li
230.708 228.741 li
232.046 227.373 li
233.139 226.533 li
233.298 226.453 li
233.972 226.191 li
234.054 226.141 li
234.099 226.07 li
234.119 225.98 li
234.149 225.895 li
234.199 225.829 li
234.289 225.8 li
235.266 225.628 li
235.768 225.668 li
235.939 225.644 li
236.101 225.588 li
236.442 225.393 li
236.577 225.342 li
237.389 225.216 li
237.544 225.16 li
237.801 224.994 li
237.942 224.935 li
238.399 224.885 li
238.429 224.898 li
238.46 224.935 li
238.5 224.97 li
238.54 224.975 li
238.584 224.943 li
238.641 224.848 li
238.675 224.823 li
238.801 224.798 li
238.842 224.808 li
238.949 224.843 li
239.169 224.97 li
239.28 224.994 li
239.437 224.959 li
239.809 224.733 li
239.958 224.687 li
240.105 224.678 li
240.225 224.687 li
240.563 224.768 li
240.664 224.773 li
240.758 224.718 li
240.895 224.577 li
240.915 224.637 li
240.95 224.708 li
240.995 224.773 li
241.04 224.808 li
241.126 224.798 li
241.146 224.723 li
241.146 224.633 li
241.156 224.572 li
241.221 224.406 li
241.272 224.366 li
241.328 224.477 li
241.341 224.557 li
241.367 224.622 li
241.407 224.668 li
241.484 224.691 li
241.795 224.567 li
241.925 224.557 li
241.891 224.748 li
241.865 224.853 li
241.896 224.879 li
241.965 224.868 li
242.031 224.879 li
242.052 224.874 li
242.142 224.843 li
242.183 224.838 li
242.232 224.863 li
242.308 224.948 li
242.348 224.99 li
242.594 225.149 li
242.716 225.21 li
242.867 225.241 li
242.967 225.236 li
243.007 225.199 li
243.022 225.146 li
243.068 225.086 li
243.079 225.06 li
243.082 224.975 li
243.099 224.943 li
243.144 224.919 li
243.245 224.898 li
243.273 224.885 li
243.37 224.778 li
243.449 224.657 li
243.486 224.583 li
243.521 224.451 li
243.576 224.376 li
243.954 224.064 li
244.063 223.938 li
244.139 223.922 li
244.355 223.922 li
244.507 223.978 li
244.739 224.179 li
244.853 224.44 li
244.875 224.467 li
244.989 224.838 li
245.069 224.935 li
245.181 225.03 li
245.282 225.141 li
245.327 225.271 li
245.29 225.467 li
245.11 225.805 li
245.044 225.985 li
245.015 226.323 li
245.044 226.665 li
245.121 226.987 li
245.271 227.419 li
245.308 227.596 li
245.327 227.958 li
245.345 228.048 li
245.427 228.239 li
245.446 228.325 li
245.417 228.405 li
245.276 228.622 li
245.19 229.034 li
245.089 229.226 li
244.785 229.375 li
244.663 229.537 li
244.573 229.723 li
244.538 229.878 li
244.546 229.945 li
244.562 229.969 li
244.597 230 li
244.401 230.352 li
244.281 230.468 li
244.081 230.514 li
244.081 230.569 li
244.181 230.714 li
244.195 230.77 li
244.184 230.81 li
244.149 230.891 li
244.139 230.942 li
244.144 231.011 li
244.164 231.097 li
244.195 231.171 li
244.226 231.201 li
244.25 231.293 li
244.195 231.706 li
244.195 231.831 li
244.335 231.987 li
244.486 232.077 li
244.602 232.198 li
244.646 232.434 li
244.639 232.586 li
244.576 232.902 li
244.452 233.285 li
244.491 233.391 li
244.818 233.481 li
244.969 233.582 li
245.096 233.713 li
245.161 233.838 li
245.216 234.557 li
245.235 234.603 li
245.282 234.648 li
245.322 234.713 li
245.327 234.814 li
245.297 234.89 li
245.241 234.94 li
245.171 234.986 li
245.099 235.046 li
244.969 235.243 li
244.964 235.393 li
245.015 235.534 li
245.044 235.71 li
244.979 235.86 li
244.658 236.113 li
244.538 236.253 li
244.507 236.459 li
244.613 236.589 li
244.753 236.69 li
244.824 236.8 li
244.773 236.927 li
244.668 236.999 li
244.586 237.088 li
244.597 237.295 li
244.703 237.451 li
244.875 237.571 li
245.031 237.663 li
245.099 237.716 li
245.069 237.822 li
244.924 237.994 li
244.875 238.089 li
244.864 238.175 li
244.877 238.245 li
245.155 238.964 li
245.382 239.201 li
245.668 239.121 li
245.875 239.231 li
245.959 239.308 li
246.015 239.417 li
246.015 239.499 li
245.951 239.648 li
245.956 239.76 li
245.991 239.87 li
246.026 239.895 li
246.086 239.895 li
246.186 239.935 li
246.363 240.056 li
246.417 240.131 li
246.223 240.196 li
246.203 240.273 li
246.237 240.479 li
246.216 240.564 li
246.146 240.69 li
246.126 240.771 li
246.133 241.077 li
246.178 241.193 li
246.292 241.318 li
246.442 241.429 li
246.549 241.455 li
246.614 241.379 li
246.66 240.972 li
246.694 240.865 li
246.746 240.795 li
246.866 240.76 li
246.892 240.842 li
246.866 241.032 li
246.982 241.148 li
247.133 241.208 li
247.263 241.289 li
247.339 241.561 li
247.444 241.747 li
247.484 241.842 li
247.495 241.924 li
247.479 242.093 li
247.484 242.175 li
247.524 242.355 li
247.569 242.432 li
247.655 242.471 li
247.686 242.471 li
247.766 242.511 li
247.822 242.596 li
247.832 242.701 li
247.797 242.783 li
247.681 242.949 li
247.672 243.101 li
247.726 243.23 li
247.827 243.331 li
247.942 243.397 li
248.074 243.432 li
248.424 243.447 li
248.596 243.481 li
248.768 243.543 li
248.947 243.571 li
249.13 243.508 li
249.23 243.553 li
249.387 243.583 li
249.521 243.638 li
249.583 243.765 li
249.623 243.934 li
249.723 244.09 li
249.984 244.373 li
249.926 244.489 li
249.961 244.584 li
250.056 244.624 li
250.156 244.598 li
250.175 244.529 li
250.206 244.307 li
250.236 244.257 li
250.373 244.241 li
250.402 244.292 li
250.442 244.429 li
250.442 244.497 li
250.384 244.604 li
250.384 244.658 li
250.407 244.704 li
250.477 244.775 li
250.492 244.805 li
250.578 244.886 li
250.778 245.006 li
251.172 245.183 li
251.272 245.193 li
251.489 245.198 li
251.544 245.207 li
251.68 245.317 li
251.852 245.409 li
251.86 245.384 li
251.86 245.362 li
251.871 245.354 li
251.992 245.367 li
252.032 245.379 li
252.168 245.494 li
252.203 245.565 li
252.208 245.661 li
252.198 245.847 li
252.158 246.028 li
252.008 246.364 li
252.032 246.511 li
252.082 246.545 li
252.265 246.611 li
252.339 246.65 li
252.41 246.732 li
252.506 246.907 li
252.566 246.999 li
252.683 247.113 li
252.807 247.214 li
252.968 247.29 li
253.161 247.314 li
253.497 247.255 li
253.621 247.285 li
253.708 247.552 li
253.783 247.571 li
253.864 247.552 li
253.904 247.536 li
253.958 247.497 li
254.049 247.401 li
254.131 247.37 li
254.307 247.356 li
254.452 247.396 li
254.573 247.471 li
254.8 247.718 li
254.891 247.748 li
254.971 247.668 li
255.095 247.486 li
255.222 247.637 li
255.72 247.653 li
255.896 247.894 li
256.052 247.875 li
256.314 247.777 li
256.424 247.814 li
256.499 247.884 li
256.589 247.949 li
256.742 247.949 li
256.842 247.864 li
256.898 247.788 li
256.943 247.708 li
257.218 247.361 li
257.225 247.314 li
257.366 247.295 li
257.623 247.214 li
257.732 247.195 li
258.924 247.37 li
258.943 247.391 li
259.398 247.626 li
259.744 247.914 li
259.88 247.979 li
260.062 248.004 li
260.168 248.009 li
260.263 248.025 li
260.348 248.061 li
260.424 248.121 li
260.49 248.216 li
260.504 248.301 li
260.509 248.377 li
260.538 248.462 li
260.609 248.523 li
260.681 248.543 li
260.739 248.578 li
260.765 248.673 li
260.795 248.729 li
261.113 248.964 li
261.297 249.01 li
261.395 249.051 li
261.631 249.237 li
261.736 249.277 li
262.32 249.272 li
262.416 249.252 li
262.445 249.187 li
262.526 249.116 li
262.698 248.991 li
262.736 248.981 li
262.834 248.996 li
262.874 248.991 li
262.913 248.954 li
262.948 248.859 li
262.984 248.819 li
263.215 248.718 li
263.235 248.703 li
263.336 248.724 li
263.498 248.799 li
263.749 248.864 li
263.834 248.976 li
263.889 249.277 li
263.926 249.332 li
263.981 249.377 li
264.011 249.422 li
263.944 249.523 li
263.939 249.568 li
263.944 249.618 li
263.974 249.655 li
264.157 249.816 li
264.247 249.917 li
264.286 250.006 li
264.313 250.187 li
264.376 250.354 li
264.469 250.474 li
264.573 250.549 li
264.664 250.585 li
264.74 250.591 li
264.814 250.57 li
264.886 250.525 li
264.963 250.494 li
265.001 250.549 li
265.026 250.63 li
265.466 251.194 li
265.489 251.25 li
265.528 251.29 li
265.621 251.305 li
265.706 251.31 li
265.767 251.329 li
265.807 251.369 li
265.822 251.446 li
265.86 251.581 li
265.968 251.702 li
266.113 251.797 li
266.27 251.882 li
266.283 251.718 li
266.374 251.667 li
266.511 251.673 li
266.672 251.647 li
266.777 251.581 li
266.862 251.511 li
266.963 251.501 li
267.124 251.596 li
267.205 251.667 li
267.262 251.732 li
267.291 251.808 li
267.31 252.009 li
267.336 252.048 li
268.061 252.361 li
268.573 252.345 li
268.745 252.372 li
268.856 252.451 li
269.081 252.723 li
269.103 252.763 li
269.112 252.85 li
269.143 252.864 li
269.251 252.859 li
269.282 252.864 li
269.424 252.956 li
269.488 252.974 li
269.876 253.02 li
269.986 253.009 li
270.083 252.924 li
270.247 252.996 li
270.385 252.964 li
270.505 252.899 li
270.816 252.819 li
270.901 252.808 li
270.988 252.829 li
271.214 252.985 li
271.224 252.789 li
271.311 252.813 li
271.496 253.035 li
271.581 253.07 li
271.657 253.051 li
271.702 253.065 li
271.723 253.186 li
271.723 253.754 li
271.747 253.901 li
271.834 254.016 li
272.009 254.141 li
272.376 254.545 li
272.493 254.604 li
272.496 254.64 li
272.628 254.842 li
272.673 254.871 li
272.86 254.956 li
272.998 255.053 li
273.398 255.444 li
273.482 255.511 li
273.649 255.59 li
273.71 255.65 li
273.739 255.717 li
273.911 256.285 li
274.006 256.366 li
274.191 256.395 li
274.358 256.366 li
274.524 256.305 li
274.686 256.28 li
274.847 256.344 li
275.006 256.244 li
275.199 256.175 li
275.4 256.13 li
275.987 256.074 li
276.064 256.088 li
276.289 256.299 li
276.376 256.344 li
276.768 256.431 li
277.135 256.391 li
277.492 256.259 li
278.056 255.968 li
278.182 255.979 li
278.307 256.029 li
278.605 256.085 li
278.78 256.194 li
278.876 256.23 li
278.966 256.23 li
279.152 256.169 li
279.701 256.188 li
279.781 256.138 li
279.833 255.974 li
279.952 255.892 li
280.304 255.836 li
280.339 255.807 li
280.436 255.747 li
280.547 255.722 li
280.595 255.807 li
280.595 256.148 li
280.751 256.32 li
281.119 256.386 li
281.521 256.416 li
281.788 256.471 li
281.944 256.617 li
282.005 256.662 li
282.579 256.904 li
283.811 257.875 li
284.097 258.031 li
284.288 258.071 li
284.343 258.09 li
284.375 258.132 li
284.42 258.232 li
284.454 258.272 li
284.53 258.307 li
285.154 258.458 li
285.306 258.545 li
285.366 258.704 li
285.38 258.931 li
285.433 259.163 li
285.502 259.383 li
285.588 259.565 li
285.651 259.635 li
285.834 259.786 li
285.848 259.836 li
285.809 259.923 li
285.858 259.978 li
285.938 260.013 li
285.99 260.047 li
286.01 260.118 li
286.004 260.169 li
285.935 260.33 li
285.827 260.727 li
285.742 260.913 li
285.597 261.039 li
285.396 261.095 li
285.34 261.14 li
285.295 261.256 li
285.266 261.446 li
285.25 261.637 li
285.279 261.753 li
285.391 261.943 li
285.391 262.16 li
285.358 262.393 li
285.37 262.623 li
285.456 262.779 li
285.903 263.152 li
285.979 263.292 li
286.102 263.826 li
286.371 264.43 li
286.417 264.782 li
286.159 264.866 li
286.296 265.144 li
286.697 265.425 li
286.806 265.612 li
286.823 266.125 li
286.86 266.824 li
286.89 267.524 li
286.925 268.223 li
286.961 268.916 li
286.985 269.471 li
286.94 269.571 li
285.993 269.58 li
284.396 269.601 li
284.832 269.989 li
285.405 270.672 li
286.303 271.743 li
287.062 272.649 li
287.176 272.841 li
287.246 273.047 li
287.357 274.319 li
287.504 276.045 li
287.614 277.313 li
287.668 278.233 li
287.73 279.204 li
287.886 279.572 li
288.144 279.642 li
288.716 279.662 li
290.296 279.724 li
291.873 279.778 li
293.449 279.833 li
295.029 279.893 li
296.604 279.948 li
298.184 280.004 li
299.758 280.064 li
301.338 280.119 li
301.935 280.141 li
302.123 280.119 li
302.292 280.029 li
302.354 279.948 li
302.469 279.736 li
302.529 279.696 li
302.887 279.707 li
302.972 279.783 li
303.014 280.617 li
302.979 280.733 li
302.78 280.9 li
302.771 281.045 li
302.947 281.357 li
302.837 281.669 li
302.009 282.614 li
301.87 282.876 li
301.805 283.169 li
301.835 283.54 li
302.009 284.19 li
302.032 284.521 li
302.017 284.582 li
301.942 284.738 li
301.922 284.819 li
301.922 284.92 li
302.009 285.346 li
302.146 285.608 li
302.202 285.764 li
302.247 286.362 li
302.292 286.499 li
302.379 286.65 li
302.419 286.835 li
302.43 287.605 li
302.479 287.933 li
302.625 288.189 li
302.937 288.359 li
303.198 288.396 li
303.28 288.42 li
303.365 288.47 li
303.511 288.592 li
303.592 288.646 li
303.661 288.666 li
303.797 288.692 li
303.867 288.727 li
303.959 288.853 li
304.096 289.139 li
304.226 289.235 li
304.342 289.266 li
304.432 289.281 li
304.521 289.306 li
304.628 289.377 li
304.854 289.623 li
304.944 289.692 li
305.24 289.818 li
305.343 289.875 li
305.7 290.171 li
305.937 290.271 li
306.252 290.353 li
306.563 290.372 li
306.801 290.303 li
306.991 290.271 li
307.139 290.292 li
307.319 290.367 li
307.434 290.488 li
307.516 290.679 li
307.541 290.896 li
307.523 291.097 li
307.544 291.237 li
307.541 291.569 li
307.556 291.73 li
307.626 291.887 li
307.711 292.002 li
307.812 292.104 li
307.934 292.188 li
308.068 292.243 li
307.999 292.515 li
308.028 292.611 li
308.174 292.797 li
308.293 293.009 li
308.28 293.165 li
308.019 293.188 li
308.793 294.527 li
309.216 295.584 li
309.502 296.111 li
309.833 296.3 li
309.999 296.3 li
310.136 296.323 li
310.211 296.404 li
310.2 296.596 li
309.628 296.605 li
309.477 296.641 li
309.372 296.74 li
309.237 297.169 li
308.849 298.407 li
308.46 299.645 li
308.068 300.886 li
307.68 302.123 li
307.586 302.42 li
307.917 302.451 li
308.009 302.521 li
308.044 302.697 li
308.089 303.21 li
308.14 303.588 li
307.676 303.628 li
307.531 303.718 li
307.34 304.115 li
307.084 304.655 li
306.516 305.842 li
305.949 307.029 li
305.69 307.566 li
305.69 307.572 li
305.589 307.789 li
305.367 308.262 li
305.141 308.739 li
305.039 308.956 li
304.753 309.573 li
304.813 309.814 li
305.444 310.389 li
306.113 310.998 li
306.946 311.762 li
306.862 311.873 li
306.772 312.019 li
306.65 312.15 li
306.464 312.235 li
306.252 312.185 li
306.121 312.165 li
306.061 312.21 li
306.039 312.285 li
305.984 312.352 li
305.904 312.401 li
305.81 312.422 li
305.601 312.508 li
305.343 312.88 li
305.125 312.966 li
305.069 312.994 li
304.969 313.146 li
304.924 313.2 li
304.819 313.257 li
304.466 313.383 li
304.472 313.523 li
304.521 313.553 li
304.593 313.544 li
304.648 313.563 li
304.708 313.623 li
304.788 313.725 li
304.805 313.814 li
304.497 313.921 li
304.437 314.065 li
304.492 314.232 li
304.648 314.344 li
304.698 314.327 li
304.738 314.277 li
304.788 314.227 li
304.875 314.222 li
304.93 314.259 li
304.994 314.322 li
305.034 314.409 li
304.955 314.65 li
304.976 314.872 li
305.031 315.088 li
305.096 315.239 li
305.226 315.391 li
305.407 315.53 li
305.593 315.626 li
305.748 315.665 li
305.87 315.737 li
305.85 315.894 li
305.72 316.149 li
305.7 316.324 li
305.709 316.552 li
305.745 316.764 li
305.839 316.975 li
305.846 317.075 li
305.835 317.267 li
305.859 317.387 li
305.966 317.558 li
306.006 317.654 li
306.002 317.749 li
305.939 317.919 li
305.946 318.021 li
305.994 318.12 li
306.076 318.182 li
306.147 318.17 li
306.223 317.864 li
306.333 317.8 li
306.464 317.819 li
306.579 317.9 li
306.608 317.956 li
306.66 318.086 li
306.69 318.142 li
306.74 318.191 li
306.872 318.281 li
306.941 318.354 li
306.962 318.433 li
306.901 318.503 li
306.801 318.543 li
306.626 318.583 li
306.561 318.634 li
306.464 318.734 li
306.338 318.831 li
306.277 318.911 li
306.333 318.961 li
306.544 318.982 li
306.716 319.018 li
306.856 319.112 li
306.946 319.244 li
306.966 319.403 li
306.883 319.495 li
306.539 319.687 li
306.464 319.797 li
306.489 319.897 li
306.544 319.938 li
306.605 319.958 li
306.63 319.978 li
306.671 319.978 li
306.862 320.133 li
307.053 320.339 li
307.108 320.339 li
307.143 320.184 li
307.293 320.32 li
307.31 320.511 li
307.229 320.717 li
307.007 321.059 li
307.011 321.185 li
307.143 321.456 li
307.193 321.849 li
307.158 322.262 li
307.042 322.638 li
306.856 322.916 li
306.619 323.087 li
306.579 323.156 li
306.57 323.267 li
306.615 323.333 li
306.664 323.378 li
306.69 323.429 li
306.761 323.519 li
306.892 323.559 li
306.983 323.65 li
306.917 323.881 li
306.362 324.732 li
306.237 325.034 li
306.206 325.22 li
306.213 325.415 li
306.282 325.571 li
306.434 325.637 li
306.516 325.712 li
306.452 325.889 li
306.349 326.09 li
306.288 326.241 li
306.322 326.391 li
306.414 326.553 li
306.516 326.679 li
306.605 326.729 li
306.65 326.813 li
306.288 327.407 li
306.293 327.579 li
306.322 327.739 li
306.317 327.911 li
306.206 328.103 li
306.15 328.259 li
306.228 328.383 li
306.344 328.53 li
306.404 328.736 li
306.362 328.846 li
306.172 329.209 li
306.092 329.284 li
306.076 329.369 li
305.895 329.893 li
305.88 330.015 li
305.884 330.149 li
305.901 330.239 li
306.011 330.301 li
306.105 330.38 li
306.178 330.522 li
306.282 330.634 li
306.561 330.724 li
306.65 330.724 li
306.79 330.662 li
306.852 330.657 li
306.921 330.697 li
307.036 330.823 li
307.076 330.854 li
307.178 330.834 li
307.31 330.719 li
307.396 330.724 li
307.479 330.742 li
307.544 330.733 li
307.646 330.679 li
307.626 330.667 li
307.626 330.617 li
307.642 330.567 li
307.661 330.536 li
307.69 330.532 li
307.772 330.563 li
307.802 330.563 li
307.969 330.502 li
308.078 330.512 li
308.189 330.542 li
308.356 330.552 li
308.446 330.522 li
308.512 330.485 li
308.571 330.473 li
308.647 330.507 li
308.772 330.863 li
308.872 331.045 li
308.979 331.149 li
309.126 331.187 li
309.32 331.154 li
309.396 331.131 li
309.427 331.104 li
309.472 331.091 li
309.576 331.104 li
309.639 331.131 li
309.833 331.256 li
310.152 331.182 li
310.227 331.182 li
310.398 331.252 li
310.488 331.256 li
310.603 331.303 li
310.88 331.473 li
310.932 331.478 li
310.962 331.422 li
311.033 331.438 li
311.157 331.508 li
311.253 331.508 li
311.293 331.462 li
311.308 331.403 li
311.319 331.377 li
311.449 331.388 li
311.816 331.478 li
311.977 331.453 li
312.184 331.276 li
312.295 331.252 li
312.335 331.286 li
312.36 331.422 li
312.416 331.473 li
312.496 331.478 li
312.546 331.453 li
312.591 331.422 li
312.655 331.406 li
312.792 331.428 li
313.04 331.522 li
313.115 331.56 li
313.12 331.577 li
313.13 331.617 li
313.168 331.654 li
313.315 331.679 li
313.361 331.694 li
313.411 331.699 li
313.472 331.674 li
313.572 331.649 li
313.837 331.669 li
313.975 331.659 li
314.181 331.724 li
314.268 331.729 li
314.361 331.669 li
314.352 331.811 li
314.392 331.845 li
314.461 331.834 li
314.543 331.834 li
314.688 331.91 li
314.774 331.916 li
314.864 331.684 li
314.961 331.818 li
315.046 332.04 li
315.066 332.157 li
315.257 332.187 li
315.368 332.146 li
315.559 331.94 li
315.615 331.855 li
315.625 331.8 li
315.654 331.784 li
315.771 331.824 li
315.831 331.818 li
316.102 331.733 li
316.163 331.749 li
316.173 331.784 li
316.193 331.806 li
316.277 331.749 li
316.313 331.688 li
316.384 331.527 li
316.424 331.493 li
316.565 331.563 li
316.847 331.891 li
316.979 331.92 li
317.014 331.851 li
316.927 331.688 li
316.979 331.634 li
317.072 331.609 li
317.138 331.577 li
317.416 331.371 li
317.506 331.271 li
317.647 331.02 li
317.667 330.999 li
317.728 330.97 li
317.759 330.93 li
317.804 330.789 li
317.828 330.733 li
317.953 330.547 li
318.028 330.467 li
318.115 330.391 li
318.262 330.346 li
318.854 330.239 li
318.976 330.251 li
319.061 330.346 li
319.277 330.89 li
319.474 331.182 li
319.725 331.422 li
320.188 331.699 li
320.434 331.936 li
320.573 332.025 li
320.72 332.062 li
322.145 332.131 li
322.255 332.102 li
322.359 332.04 li
322.471 332.097 li
322.592 332.191 li
322.724 332.258 li
323.236 332.308 li
323.394 332.397 li
323.411 332.338 li
323.504 332.151 li
323.916 332.721 li
324.252 332.972 li
324.337 333.067 li
324.408 333.283 li
324.433 334.032 li
324.493 334.36 li
324.635 334.646 li
324.851 334.878 li
325.127 335.034 li
325.292 335.095 li
325.403 335.159 li
325.47 335.266 li
325.493 335.447 li
325.483 335.517 li
325.438 335.664 li
325.436 335.743 li
325.448 335.82 li
325.504 335.965 li
325.509 336.04 li
325.424 336.336 li
325.282 336.599 li
325.173 336.87 li
325.192 337.203 li
325.379 337.892 li
325.379 338.047 li
325.334 338.349 li
325.349 338.5 li
325.57 338.751 li
325.657 338.894 li
325.702 339.063 li
325.66 339.391 li
325.67 339.542 li
325.757 339.658 li
325.988 339.798 li
326.018 339.878 li
326.199 340.542 li
326.194 340.693 li
326.003 341.102 li
325.978 341.253 li
326.033 341.454 li
326.284 341.724 li
326.374 341.891 li
326.364 342.168 li
326.138 342.666 li
326.159 342.978 li
326.219 343.278 li
326.208 343.602 li
326.239 343.903 li
326.4 344.139 li
326.767 344.532 li
326.943 345.091 li
327.069 346.831 li
327.149 347.062 li
327.334 347.263 li
327.591 347.379 li
328.111 347.419 li
328.371 347.479 li
328.379 347.479 li
328.67 347.591 li
328.971 347.651 li
329.262 347.626 li
329.543 347.479 li
329.55 347.479 li
329.762 347.368 li
330.283 347.374 li
330.535 347.3 li
330.677 347.233 li
330.958 347.218 li
331.1 347.198 li
331.239 347.111 li
331.421 346.87 li
331.526 346.761 li
332.063 346.454 li
333.146 346.077 li
333.288 346.001 li
333.492 345.773 li
333.619 345.715 li
333.841 345.773 li
335.243 346.574 li
335.415 346.696 li
335.873 347.334 li
336.647 347.803 li
336.883 347.932 li
336.714 348.069 li
336.422 348.285 li
336.225 348.542 li
336.145 348.817 li
336.165 348.964 li
336.276 349.251 li
336.314 349.588 li
336.381 349.698 li
336.57 349.96 li
336.642 350.166 li
336.753 350.447 li
336.744 350.709 li
336.669 350.991 li
336.563 351.188 li
336.239 351.671 li
336.145 351.962 li
336.145 352.238 li
336.259 352.857 li
336.256 353.155 li
335.843 354.407 li
335.607 354.753 li
335.541 354.901 li
335.164 356.549 li
335.087 356.861 li
335.073 357.033 li
335.077 357.189 li
335.143 357.366 li
335.354 357.713 li
335.38 357.882 li
335.309 358.044 li
335.028 358.305 li
334.928 358.467 li
334.746 359.062 li
334.539 359.387 li
334.383 359.588 li
334.147 359.805 li
333.96 360.146 li
333.866 360.464 li
333.849 360.569 li
333.841 360.765 li
333.876 360.967 li
333.957 361.133 li
334.016 361.305 li
333.997 361.524 li
333.946 361.742 li
333.946 361.762 li
334.279 361.723 li
334.398 361.762 li
334.443 361.874 li
334.455 362.003 li
334.505 362.09 li
334.682 362.048 li
334.846 362.12 li
334.997 362.23 li
335.103 362.376 li
335.129 362.571 li
335.132 362.657 li
335.158 362.754 li
335.209 362.808 li
335.296 362.772 li
335.33 362.692 li
335.288 362.501 li
335.296 362.404 li
335.344 362.331 li
335.496 362.24 li
335.563 362.175 li
335.582 362.09 li
335.57 361.993 li
335.582 361.902 li
335.642 361.822 li
335.719 361.781 li
335.788 361.787 li
335.933 361.847 li
336.02 361.832 li
336.154 361.646 li
336.251 361.58 li
336.436 361.561 li
336.563 361.596 li
336.647 361.707 li
336.737 361.902 li
336.798 361.983 li
336.849 361.934 li
336.898 361.787 li
336.97 361.781 li
337.02 361.781 li
337.176 361.832 li
337.341 361.817 li
337.303 361.656 li
337.137 361.37 li
337.202 361.334 li
337.285 361.35 li
337.44 361.404 li
337.549 361.395 li
337.639 361.339 li
337.854 361.083 li
337.905 361.048 li
337.95 361.033 li
337.99 361.043 li
338.027 361.083 li
337.99 361.26 li
337.92 361.404 li
337.871 361.556 li
337.896 361.735 li
337.94 361.817 li
338.01 361.902 li
338.097 361.969 li
338.172 361.969 li
338.207 361.907 li
338.197 361.808 li
338.182 361.702 li
338.177 361.616 li
338.231 361.535 li
338.318 361.585 li
338.458 361.728 li
338.56 361.707 li
338.609 361.672 li
338.665 361.646 li
338.779 361.672 li
338.936 361.762 li
339.043 361.897 li
339.099 362.059 li
339.112 362.244 li
339.182 362.481 li
339.345 362.456 li
339.66 362.26 li
339.761 362.354 li
339.848 362.551 li
339.938 362.889 li
339.923 362.964 li
339.888 363.029 li
339.861 363.115 li
339.883 363.23 li
339.933 363.326 li
340.094 363.481 li
340.162 363.573 li
340.239 363.744 li
340.264 363.904 li
340.229 364.443 li
340.326 364.931 li
340.318 365.026 li
340.289 365.107 li
340.273 365.192 li
340.294 365.31 li
340.355 365.404 li
340.631 365.655 li
340.631 365.66 li
340.863 365.912 li
340.958 366.189 li
341.015 366.491 li
341.125 366.812 li
341.522 367.376 li
341.679 367.663 li
341.719 368.036 li
341.622 368.337 li
341.271 368.835 li
341.199 369.107 li
341.296 369.967 li
341.296 370.247 li
341.176 370.35 li
341.114 370.414 li
341.089 370.48 li
341.106 370.57 li
341.134 370.665 li
341.164 370.722 li
341.181 370.691 li
341.154 370.854 li
341.05 371.17 li
341.043 371.345 li
341.085 371.692 li
341.074 371.863 li
341.02 372.03 li
340.953 372.085 li
340.873 372.095 li
340.808 372.12 li
340.783 372.22 li
340.823 372.337 li
340.895 372.392 li
340.963 372.421 li
341.004 372.448 li
341.009 372.543 li
340.953 372.668 li
340.963 372.764 li
340.988 372.779 li
341.089 372.789 li
341.119 372.805 li
341.215 373.146 li
341.311 373.694 li
341.296 373.977 li
341.196 374.308 li
340.832 375.083 li
340.794 375.138 li
340.738 375.173 li
340.606 375.188 li
340.566 375.22 li
340.53 375.339 li
340.547 375.605 li
340.53 375.732 li
340.49 375.792 li
340.371 375.868 li
340.336 375.918 li
340.34 375.983 li
340.416 376.074 li
340.416 376.149 li
340.326 376.31 li
340.226 376.371 li
340.17 376.314 li
340.094 376.164 li
340.003 376.023 li
339.893 375.969 li
339.821 376.035 li
339.746 376.326 li
339.667 376.416 li
339.535 376.396 li
339.425 376.296 li
339.323 376.225 li
339.213 376.286 li
339.191 376.405 li
339.236 376.532 li
339.233 376.632 li
339.067 376.667 li
339.012 376.652 li
338.978 376.617 li
338.936 376.593 li
338.871 376.603 li
338.824 376.652 li
338.766 376.823 li
338.155 377.498 li
337.854 377.532 li
337.607 377.447 li
337.623 377.246 li
337.552 377.18 li
337.448 377.11 li
337.348 377.271 li
337.109 377.91 li
337.07 377.976 li
337.028 378.037 li
336.994 378.116 li
337.015 378.302 li
336.994 378.384 li
336.936 378.413 li
336.838 378.429 li
336.753 378.458 li
336.714 378.545 li
336.692 378.624 li
336.637 378.714 li
336.582 378.791 li
336.542 378.825 li
336.376 378.831 li
336.256 378.746 li
336.149 378.619 li
336.033 378.508 li
336.05 378.812 li
336.033 378.896 li
335.978 378.992 li
335.902 379.063 li
335.838 379.067 li
335.809 378.986 li
335.776 378.774 li
335.697 378.669 li
335.565 378.635 li
335.232 378.65 li
335.098 378.68 li
335.067 378.779 li
335.209 378.986 li
335.205 379.112 li
335.032 379.219 li
334.494 379.375 li
334.415 379.375 li
334.328 379.333 li
334.299 379.288 li
334.217 379.118 li
334.188 379.082 li
334.123 379.067 li
334.082 379.047 li
334.031 379.053 li
333.957 379.112 li
333.901 379.192 li
333.866 379.294 li
333.82 379.46 li
333.729 379.637 li
333.619 379.741 li
333.523 379.731 li
333.479 379.561 li
333.453 379.521 li
333.398 379.53 li
333.336 379.587 li
333.312 379.687 li
333.312 379.812 li
333.307 379.883 li
333.271 379.923 li
333.197 379.968 li
333.122 379.983 li
332.934 379.968 li
332.854 379.968 li
332.508 380.084 li
332.452 380.068 li
332.441 380.048 li
332.386 379.983 li
332.373 379.968 li
332.341 379.947 li
332.356 379.901 li
332.386 379.852 li
332.401 379.812 li
332.352 379.706 li
332.246 379.737 li
332.135 379.827 li
332.061 379.913 li
332.008 380.1 li
331.983 380.336 li
331.915 380.53 li
331.749 380.616 li
331.547 380.61 li
331.476 380.642 li
331.492 380.988 li
331.446 381.391 li
331.405 381.603 li
331.35 381.692 li
331.189 381.759 li
330.757 382.146 li
330.556 382.177 li
330.405 382.126 li
330.265 382.05 li
330.102 382.015 li
329.963 382.08 li
330.043 382.231 li
330.299 382.463 li
330.421 382.659 li
330.389 382.756 li
330.254 382.756 li
330.073 382.649 li
329.987 382.689 li
329.807 382.689 li
329.729 382.719 li
329.71 382.774 li
329.645 383.035 li
329.474 382.996 li
329.297 382.824 li
329.162 382.779 li
328.995 382.846 li
328.874 383.001 li
328.781 383.157 li
328.479 383.394 li
328.397 383.425 li
328.306 383.408 li
328.136 383.343 li
328.03 383.354 li
327.9 383.479 li
327.874 383.649 li
327.834 383.806 li
327.662 383.871 li
327.577 383.876 li
327.518 383.896 li
327.477 383.948 li
327.466 384.027 li
327.472 384.229 li
327.456 384.279 li
327.406 384.374 li
327.03 384.808 li
326.985 384.883 li
326.784 384.942 li
326.691 384.953 li
326.637 384.923 li
326.602 384.868 li
326.551 384.838 li
326.44 384.883 li
326.409 384.933 li
326.326 385.145 li
326.284 385.179 li
326.179 385.261 li
326.128 385.306 li
326.093 385.381 li
326.078 385.456 li
326.048 385.507 li
325.951 385.527 li
325.851 385.495 li
325.837 385.421 li
325.841 385.335 li
325.816 385.281 li
325.625 385.239 li
325.525 385.355 li
325.464 385.512 li
325.394 385.592 li
325.313 385.646 li
324.967 385.979 li
324.438 386.159 li
324.231 386.315 li
324.282 386.553 li
324.383 386.628 li
324.714 386.778 li
324.821 386.811 li
324.942 386.86 li
325.022 386.971 li
325.137 387.201 li
325.022 387.644 li
324.967 387.775 li
324.881 387.892 li
324.786 387.961 li
324.71 387.931 li
324.68 387.741 li
324.549 387.569 li
324.247 387.487 li
323.906 387.448 li
323.652 387.384 li
323.281 387.543 li
323.13 387.68 li
323.175 387.871 li
323.205 387.95 li
323.205 388.389 li
323.195 388.455 li
323.16 388.5 li
323.091 388.55 li
323.019 388.574 li
322.753 388.606 li
322.522 388.721 li
322.255 388.791 li
322.175 388.923 li
322.158 389.088 li
322.18 389.259 li
322.169 389.627 li
322.013 389.848 li
321.496 390.214 li
320.819 391.116 li
320.54 391.301 li
320.15 391.378 li
319.981 391.452 li
319.904 391.604 li
319.856 392.409 li
319.675 392.735 li
319.105 393.073 li
318.944 393.439 li
318.939 393.822 li
318.904 394.008 li
318.804 394.185 li
318.667 394.259 li
318.099 394.405 li
317.807 394.563 li
317.511 394.771 li
317.239 395.039 li
317.017 395.372 li
316.963 395.497 li
316.913 395.634 li
316.907 395.769 li
316.963 395.896 li
316.879 396.081 li
316.741 396.478 li
316.646 396.634 li
316.504 396.771 li
316.403 396.84 li
316.108 396.991 li
316.032 397.041 li
315.972 397.102 li
315.927 397.173 li
315.882 397.258 li
315.866 397.353 li
315.871 397.459 li
315.861 397.544 li
315.726 397.621 li
315.66 397.721 li
315.615 397.843 li
315.599 397.933 li
315.563 398.007 li
314.919 398.586 li
314.859 398.718 li
314.795 398.798 li
314.469 399.064 li
314.352 399.199 li
314.236 399.527 li
313.993 399.788 li
313.956 399.89 li
313.894 399.984 li
313.287 400.634 li
313.134 400.771 li
312.964 400.825 li
312.596 400.835 li
312.25 400.885 li
311.893 401.021 li
311.65 401.238 li
311.509 401.554 li
311.428 402.666 li
311.372 402.813 li
310.658 403.37 li
309.875 404.367 li
309.523 404.613 li
309.356 404.674 li
308.999 404.733 li
309.205 404.935 li
309.367 405.433 li
309.628 405.608 li
309.833 405.629 li
310.197 405.563 li
310.398 405.559 li
310.509 405.618 li
310.629 405.81 li
310.759 405.846 li
310.84 405.806 li
311.033 405.634 li
311.136 405.584 li
311.298 405.589 li
311.404 405.658 li
311.49 405.74 li
311.61 405.79 li
311.676 405.765 li
311.782 405.639 li
311.827 405.613 li
311.893 405.65 li
311.996 405.76 li
312.038 405.79 li
312.305 405.729 li
312.546 405.544 li
312.711 405.272 li
312.758 404.975 li
312.817 404.728 li
312.993 404.42 li
313.221 404.146 li
313.425 404.005 li
313.512 404.009 li
313.668 404.084 li
313.755 404.084 li
313.914 403.999 li
313.975 403.979 li
314.276 403.918 li
314.442 403.913 li
314.845 404.024 li
315.152 403.974 li
315.464 403.964 li
315.765 404.169 li
315.916 404.432 li
315.998 404.526 li
316.514 404.884 li
316.771 405.005 li
316.907 405.101 li
317.034 405.222 li
317.108 405.352 li
317.138 405.544 li
317.113 405.646 li
317.117 405.703 li
317.255 405.79 li
317.336 405.81 li
317.416 405.81 li
317.495 405.82 li
317.585 405.875 li
317.633 405.925 li
317.707 406.047 li
318.016 406.399 li
318.115 406.484 li
318.255 406.61 li
318.692 406.892 li
318.834 407.033 li
319.035 407.369 li
319.15 407.531 li
319.262 407.626 li
319.645 407.843 li
320.132 408.25 li
320.404 408.385 li
320.57 408.547 li
320.831 408.859 li
320.876 408.964 li
320.896 409.065 li
320.938 409.16 li
321.028 409.237 li
321.188 409.343 li
321.259 409.406 li
321.314 409.488 li
321.59 410.025 li
321.712 410.181 li
322.255 410.62 li
322.391 410.885 li
322.441 411.173 li
322.401 411.459 li
322.255 411.716 li
322.222 411.927 li
322.214 412.557 li
322.165 412.993 li
322.165 413.205 li
322.255 413.347 li
322.471 413.315 li
323.019 413.35 li
323.276 413.297 li
323.473 413.297 li
323.553 413.275 li
323.623 413.226 li
323.66 413.175 li
323.688 413.12 li
323.739 413.054 li
324.187 412.752 li
324.309 412.636 li
324.374 412.491 li
324.464 412.159 li
324.568 412.033 li
324.731 412.012 li
324.932 412.059 li
325.117 412.067 li
325.227 411.972 li
325.237 411.787 li
325.213 411.395 li
325.252 411.223 li
325.379 411.091 li
325.556 411.052 li
325.731 411.102 li
325.961 411.369 li
326.264 411.546 li
326.4 411.655 li
326.582 411.882 li
326.969 412.224 li
327.583 412.919 li
327.702 413.099 li
327.747 413.255 li
327.773 413.602 li
327.834 413.768 li
327.924 413.854 li
328.202 414.035 li
328.297 414.186 li
328.406 414.583 li
328.479 414.76 li
328.609 414.91 li
328.749 415.001 li
329.072 415.122 li
329.228 415.218 li
329.619 415.579 li
329.786 415.681 li
329.911 415.706 li
330.018 415.646 li
330.127 415.494 li
330.283 415.183 li
330.389 415.146 li
330.535 415.328 li
330.67 415.559 li
330.881 415.842 li
331.124 416.083 li
331.461 416.238 li
331.561 416.35 li
331.657 416.476 li
331.762 416.58 li
331.878 416.656 li
332.127 416.752 li
333.5 416.952 li
333.785 416.947 li
333.911 416.989 li
334.016 417.098 li
334.161 417.399 li
334.259 417.531 li
334.695 417.884 li
334.816 418.016 li
334.912 418.19 li
334.948 418.362 li
334.963 418.754 li
335.073 419.041 li
335.299 419.257 li
335.57 419.457 li
335.821 419.689 li
336.075 419.986 li
336.642 420.51 li
337.104 420.832 li
337.515 421.213 li
337.704 421.351 li
337.799 421.34 li
337.875 421.239 li
338.027 421.098 li
338.182 421.041 li
338.348 421.058 li
338.504 421.128 li
338.645 421.234 li
338.694 421.299 li
338.771 421.446 li
338.846 421.511 li
338.925 421.541 li
339.199 421.57 li
339.338 421.61 li
339.46 421.666 li
339.694 421.827 li
339.791 421.934 li
339.826 422.033 li
339.848 422.135 li
339.897 422.234 li
339.982 422.335 li
340.094 422.431 li
340.318 422.578 li
340.808 422.683 li
340.924 422.758 li
340.975 422.894 li
340.984 423.236 li
341.226 423.805 li
341.644 424.429 li
341.744 424.7 li
341.799 425.033 li
341.823 425.525 li
341.865 425.686 li
341.939 425.816 li
342.151 426.003 li
342.236 426.12 li
342.378 426.376 li
342.548 426.607 li
342.746 426.808 li
343.268 427.18 li
343.754 427.723 li
344.223 427.884 li
344.58 428.101 li
344.722 428.146 li
344.989 428.146 li
345.264 428.317 li
345.532 428.442 li
345.658 428.534 li
346.206 429.127 li
346.282 429.272 li
346.256 429.455 li
346.15 429.595 li
345.849 429.826 li
345.513 430.254 li
344.955 430.662 li
344.722 430.908 li
344.656 431.09 li
344.635 431.451 li
344.58 431.632 li
344.486 431.737 li
343.479 432.411 li
343.196 432.658 li
342.961 432.976 li
342.749 433.68 li
342.759 434.409 li
342.94 435.888 li
342.754 437.518 li
342.729 438.403 li
342.961 438.811 li
343.132 438.811 li
343.278 438.781 li
343.415 438.786 li
343.55 438.881 li
343.63 439.043 li
343.69 439.212 li
343.791 439.329 li
344.066 439.309 li
345 438.675 li
345.592 438.112 li
346.447 437.196 li
347.86 435.97 li
348.701 435.179 li
349.325 434.454 li
350.145 433.349 li
350.335 433.005 li
351.589 430.048 li
351.815 428.921 li
352.377 427.085 li
353.39 424.977 li
353.596 424.67 li
354.43 423.951 li
354.731 423.84 li
354.731 423.724 li
354.648 423.417 li
354.651 423.262 li
354.763 422.879 li
354.638 422.999 li
354.33 423.382 li
354.193 423.417 li
354.089 423.205 li
354.266 422.985 li
354.676 422.713 li
354.813 422.591 li
354.813 422.536 li
354.708 422.48 li
354.593 422.477 li
354.461 422.512 li
354.35 422.591 li
354.305 422.713 li
354.21 422.858 li
353.979 422.994 li
353.716 423.065 li
353.515 423.015 li
353.736 422.885 li
353.736 422.779 li
353.591 422.718 li
353.345 422.747 li
353.4 422.598 li
353.43 422.411 li
353.455 422.049 li
353.521 421.898 li
353.671 421.808 li
353.853 421.742 li
353.999 421.647 li
354.079 421.61 li
354.271 421.66 li
354.336 421.647 li
354.382 421.557 li
354.36 421.476 li
354.305 421.404 li
354.25 421.351 li
354.188 421.319 li
354.009 421.279 li
353.969 421.253 li
353.942 421.203 li
353.747 420.951 li
353.535 421.058 li
353.43 420.887 li
353.455 420.681 li
353.626 420.685 li
353.631 420.555 li
353.671 420.459 li
353.723 420.374 li
353.747 420.287 li
353.726 420.228 li
353.646 420.036 li
353.626 419.921 li
353.676 419.709 li
353.803 419.578 li
354.693 419.228 li
354.85 419.126 li
354.964 418.98 li
355.079 418.774 li
355.144 418.563 li
355.106 418.422 li
354.959 418.396 li
354.832 418.441 li
354.742 418.407 li
354.708 418.13 li
354.731 418.028 li
354.798 417.949 li
354.885 417.904 li
354.964 417.934 li
355.051 417.999 li
355.106 418.019 li
355.154 418.061 li
355.215 418.166 li
355.235 418.24 li
355.271 418.497 li
355.362 418.708 li
355.422 418.794 li
355.445 418.729 li
355.477 418.582 li
355.611 418.095 li
355.582 418.016 li
355.482 417.873 li
355.445 417.762 li
355.445 417.647 li
355.487 417.446 li
355.497 417.335 li
355.472 416.695 li
355.497 416.506 li
355.543 416.395 li
355.588 416.344 li
355.89 416.104 li
355.959 416.017 li
355.924 415.981 li
355.84 415.941 li
355.788 415.852 li
355.788 415.76 li
355.868 415.72 li
355.984 415.69 li
356.051 415.625 li
356.087 415.559 li
356.126 415.514 li
356.297 415.514 li
356.504 415.554 li
356.669 415.554 li
356.815 415.277 li
356.984 415.183 li
357.178 415.133 li
357.314 415.122 li
357.681 415.151 li
357.865 415.122 li
358.021 415.021 li
358.099 414.986 li
358.186 415.001 li
358.275 415.036 li
358.365 415.056 li
358.489 415.026 li
358.489 414.972 li
358.396 414.854 li
358.379 414.538 li
358.444 414.167 li
358.605 413.859 li
358.878 413.733 li
359.055 413.707 li
360.101 413.342 li
359.87 413.069 li
359.758 412.681 li
359.748 412.244 li
359.814 411.815 li
359.889 411.615 li
359.999 411.496 li
360.15 411.444 li
360.352 411.43 li
360.698 411.469 li
360.774 411.398 li
360.78 411.163 li
360.743 410.946 li
360.633 410.584 li
360.608 410.409 li
360.594 409.287 li
360.65 409.126 li
360.806 409.06 li
361.016 409.07 li
361.101 409.126 li
361.171 409.522 li
361.357 410.062 li
361.372 410.327 li
361.171 410.382 li
361.302 410.594 li
361.438 410.604 li
361.539 410.464 li
361.576 410.213 li
361.555 410.012 li
361.402 409.388 li
361.367 408.954 li
361.394 408.547 li
361.469 408.15 li
361.695 407.404 li
361.87 407.052 li
362.108 406.806 li
362.429 406.761 li
362.501 406.796 li
362.602 406.88 li
362.65 406.896 li
362.721 406.877 li
362.822 406.817 li
362.903 406.745 li
362.938 406.666 li
362.973 406.484 li
363.019 406.348 li
362.997 406.282 li
362.822 406.303 li
362.394 406.454 li
362.213 406.429 li
362.143 406.208 li
362.153 405.941 li
362.137 405.806 li
362.081 405.714 li
362.042 405.745 li
361.88 405.92 li
361.801 405.981 li
361.721 405.83 li
361.444 405.729 li
361.347 405.584 li
361.576 405.327 li
361.428 405.101 li
361.378 405.066 li
361.298 405.076 li
361.146 405.121 li
361.062 405.131 li
361.211 404.875 li
361.232 404.774 li
361.218 404.674 li
361.183 404.568 li
361.171 404.468 li
361.201 404.381 li
361.256 404.291 li
361.287 404.206 li
361.287 403.989 li
361.298 403.944 li
361.343 403.854 li
361.347 403.793 li
361.333 403.763 li
361.293 403.743 li
361.253 403.718 li
361.232 403.661 li
361.256 403.597 li
361.402 403.3 li
361.419 403.188 li
361.409 403.113 li
361.423 403.063 li
361.52 403.037 li
361.6 403.124 li
361.594 403.31 li
361.621 403.441 li
361.801 403.37 li
361.79 403.551 li
361.695 403.862 li
361.69 404.019 li
361.75 404.105 li
361.851 404.181 li
361.946 404.291 li
361.971 404.481 li
361.937 404.563 li
361.822 404.693 li
361.801 404.738 li
361.84 404.798 li
361.892 404.805 li
361.957 404.793 li
362.026 404.81 li
362.272 404.899 li
362.349 404.984 li
362.314 405.131 li
362.605 405.352 li
362.758 405.433 li
362.822 405.357 li
362.912 405.313 li
363.115 405.256 li
363.295 405.296 li
363.335 405.523 li
363.39 405.523 li
363.486 405.447 li
363.576 405.507 li
363.646 405.65 li
363.673 405.814 li
363.655 405.901 li
363.61 405.96 li
363.552 406.021 li
363.501 406.111 li
363.451 406.223 li
363.436 406.268 li
363.446 406.404 li
363.486 406.576 li
363.591 406.65 li
363.737 406.695 li
363.898 406.761 li
364.297 407.108 li
364.472 407.153 li
364.345 406.796 li
364.325 406.621 li
364.356 406.369 li
364.406 406.171 li
364.491 406.011 li
364.618 405.952 li
364.81 406.047 li
364.956 406.016 li
365.433 406.076 li
365.483 405.875 li
365.599 405.79 li
365.75 405.77 li
366.294 405.801 li
366.488 405.75 li
366.57 405.618 li
366.625 405.489 li
366.641 405.388 li
366.599 405.296 li
366.509 405.222 li
366.454 405.201 li
366.433 405.166 li
366.454 405.066 li
366.484 405.061 li
366.681 404.81 li
366.781 404.753 li
366.871 404.738 li
366.964 404.77 li
367.054 404.838 li
367.099 404.925 li
367.184 405.156 li
367.22 405.201 li
367.535 405.388 li
367.58 405.544 li
367.606 405.795 li
367.601 406.047 li
367.456 406.605 li
367.345 406.785 li
367.31 406.896 li
367.358 407.134 li
367.376 407.29 li
367.313 407.396 li
367.021 407.621 li
366.897 407.51 li
366.771 407.354 li
366.67 407.174 li
366.631 406.991 li
366.655 406.917 li
366.7 406.852 li
366.73 406.79 li
366.71 406.73 li
366.454 406.499 li
366.339 406.359 li
366.277 406.338 li
366.173 406.369 li
366.041 406.454 li
366.038 406.523 li
366.083 406.605 li
366.146 406.886 li
366.298 407.248 li
366.343 407.42 li
366.424 409.12 li
366.318 409.935 li
365.996 410.564 li
365.89 410.676 li
365.755 410.785 li
365.594 410.866 li
365.261 410.935 li
364.637 411.459 li
364.481 411.535 li
364.271 411.56 li
364.186 411.551 li
364.075 411.499 li
363.988 411.489 li
363.949 411.535 li
364.004 411.636 li
364.131 411.815 li
364.099 412.239 li
363.959 412.646 li
363.874 412.998 li
364.02 413.271 li
364.104 413.292 li
364.195 413.28 li
364.266 413.297 li
364.3 413.406 li
364.261 413.442 li
364.16 413.477 li
364.065 413.532 li
364.02 413.633 li
364.004 413.743 li
363.967 413.817 li
363.909 413.859 li
363.818 413.869 li
363.742 413.839 li
363.722 413.755 li
363.718 413.235 li
363.652 413.165 li
363.501 413.141 li
363.375 413.175 li
363.123 413.305 li
362.962 413.342 li
362.66 413.23 li
362.501 413.205 li
362.429 413.305 li
362.42 413.451 li
362.359 413.859 li
362.314 413.995 li
362.491 414.599 li
362.459 415.317 li
362.282 416.017 li
362.026 416.571 li
361.74 417.034 li
361.646 417.113 li
361.388 417.28 li
361.263 417.399 li
361 417.566 li
360.643 417.638 li
360.347 417.553 li
360.272 417.235 li
360.166 417.347 li
360.055 417.541 li
359.97 417.759 li
359.929 417.934 li
360.036 418.302 li
360.061 418.474 li
359.984 418.497 li
359.758 418.18 li
359.638 418.105 li
359.587 418.325 li
359.526 418.502 li
359.256 418.729 li
359.129 418.999 li
358.254 419.991 li
357.937 420.213 li
357.609 420.232 li
357.259 420.208 li
356.86 420.287 li
357.031 420.561 li
356.847 420.816 li
356.482 420.979 li
356.126 420.951 li
355.472 420.494 li
355.086 420.364 li
354.763 420.555 li
354.758 420.852 li
355.271 421.446 li
355.387 421.747 li
355.28 421.909 li
355.114 421.999 li
355.02 422.11 li
355.131 422.321 li
355.188 422.496 li
355.165 422.729 li
355.099 422.948 li
355.051 423.08 li
354.85 423.432 li
354.787 423.654 li
354.85 423.855 li
354.919 423.805 li
355.215 423.287 li
356.402 421.777 li
356.619 421.561 li
359.104 420.067 li
361.086 418.381 li
362.515 417.198 li
363.486 416.203 li
364.733 414.675 li
365.191 413.929 li
366.076 412.988 li
367.088 411.419 li
367.139 411.324 li
367.188 411.128 li
369.437 407.396 li
369.969 406.071 li
370.337 404.909 li
371.675 401.233 li
372.073 400.755 li
372.601 399.521 li
373.211 398.52 li
373.623 397.711 li
375.761 394.727 li
377.496 392.806 li
379.861 390.878 li
380.53 390.471 li
380.707 390.286 li
380.826 390.19 li
381.063 390.119 li
381.294 389.984 li
381.411 389.953 li
381.777 389.902 li
381.868 389.862 li
381.934 389.768 li
382.027 389.571 li
382.281 389.233 li
382.356 389.093 li
382.405 388.933 li
382.315 388.947 li
382.246 388.992 li
382.175 389.063 li
382.083 389.027 li
382.003 388.958 li
381.924 388.868 li
381.636 388.706 li
381.561 388.63 li
381.535 388.595 li
381.54 388.556 li
381.556 388.484 li
381.588 388.399 li
381.636 388.318 li
381.678 388.238 li
381.667 388.157 li
381.605 388.132 li
381.506 388.144 li
381.421 388.138 li
381.379 388.066 li
381.4 387.977 li
381.48 387.892 li
381.495 387.806 li
381.477 387.704 li
381.39 387.503 li
381.379 387.384 li
381.456 387.146 li
381.577 387.172 li
381.702 387.308 li
381.807 387.384 li
382.035 387.614 li
382.069 387.715 li
382.038 387.82 li
381.948 387.966 li
381.927 388.188 li
381.963 388.379 li
382.045 388.55 li
382.149 388.706 li
382.235 388.751 li
382.315 388.706 li
382.35 388.616 li
382.315 388.515 li
382.302 388.418 li
382.347 388.304 li
382.466 388.098 li
382.563 387.741 li
382.617 387.619 li
382.849 387.348 li
382.859 387.286 li
382.863 387.066 li
382.889 386.834 li
382.919 386.744 li
383.22 386.458 li
383.352 386.302 li
383.191 386.135 li
383.207 385.924 li
383.311 385.527 li
383.373 385.145 li
383.466 384.868 li
383.483 384.786 li
383.508 384.736 li
383.567 384.687 li
383.63 384.625 li
383.659 384.535 li
383.643 384.414 li
383.608 384.351 li
383.567 384.309 li
383.538 384.253 li
383.513 384.063 li
383.593 383.515 li
383.654 383.374 li
383.9 383.012 li
383.934 382.846 li
383.896 382.819 li
383.819 382.816 li
383.744 382.779 li
383.715 382.685 li
383.744 382.649 li
383.805 382.629 li
383.865 382.595 li
383.879 382.522 li
383.799 382.403 li
383.498 382.08 li
383.453 382.015 li
383.408 381.98 li
383.463 381.909 li
383.548 381.844 li
383.593 381.824 li
383.563 381.734 li
383.453 381.587 li
383.429 381.537 li
383.418 381.356 li
383.387 381.165 li
383.331 380.993 li
383.255 380.863 li
383.356 380.727 li
383.532 380.536 li
383.694 380.431 li
383.765 380.547 li
383.834 380.364 li
383.823 380.204 li
383.729 380.084 li
383.567 380.038 li
383.255 379.304 li
383.281 379.127 li
383.342 379.002 li
383.432 378.906 li
383.538 378.825 li
383.633 378.791 li
383.729 378.767 li
383.799 378.72 li
383.823 378.61 li
383.834 378.508 li
383.85 378.423 li
383.886 378.349 li
383.934 378.262 li
383.961 378.312 li
384.045 378.448 li
384.021 378.031 li
383.971 377.87 li
383.879 377.749 li
383.593 377.693 li
383.567 377.688 li
383.543 377.635 li
383.483 377.271 li
383.483 377.14 li
383.498 377.065 li
383.528 377.011 li
383.593 376.929 li
383.871 376.709 li
383.905 376.667 li
383.976 376.647 li
384.132 376.548 li
384.217 376.542 li
384.328 376.607 li
384.373 376.692 li
384.344 376.768 li
384.217 376.794 li
384.272 376.91 li
384.344 376.918 li
384.434 376.884 li
384.535 376.859 li
384.593 376.809 li
384.585 376.698 li
384.503 376.481 li
384.568 376.437 li
384.61 376.396 li
384.675 376.286 li
384.503 376.241 li
384.418 376.085 li
384.344 375.979 li
384.191 376.063 li
384.143 376.154 li
384.105 376.251 li
384.051 376.32 li
383.934 376.355 li
383.819 376.326 li
383.749 376.254 li
383.588 375.828 li
383.619 375.732 li
383.678 375.656 li
383.76 375.319 li
383.841 375.164 li
383.854 375.008 li
383.715 374.826 li
383.694 374.836 li
383.633 374.836 li
383.558 374.802 li
383.483 374.701 li
383.474 374.62 li
383.483 374.284 li
383.492 374.238 li
383.532 374.157 li
383.538 374.096 li
383.522 374.046 li
383.442 373.961 li
383.429 373.905 li
383.411 373.609 li
383.429 373.493 li
383.477 373.352 li
383.573 373.191 li
383.667 373.051 li
383.786 372.966 li
383.819 372.89 li
383.831 372.794 li
383.794 372.713 li
383.715 372.678 li
383.528 372.739 li
383.429 372.744 li
383.061 372.453 li
382.995 372.376 li
382.971 372.266 li
382.96 371.742 li
383.024 371.12 li
383.115 370.762 li
383.532 369.851 li
383.585 369.665 li
383.513 369.58 li
383.411 369.56 li
383.352 369.499 li
383.321 369.409 li
383.311 369.298 li
383.286 369.188 li
383.227 369.112 li
383.154 369.058 li
382.642 368.819 li
382.577 368.729 li
382.506 368.583 li
382.347 368.513 li
382.008 368.451 li
382.063 368.366 li
382.138 368.321 li
382.239 368.312 li
382.347 368.327 li
382.175 368.07 li
382.26 368.055 li
382.326 368.016 li
382.356 367.938 li
382.315 367.854 li
382.291 367.748 li
382.356 367.522 li
382.315 367.411 li
382.294 367.372 li
382.284 367.324 li
382.291 367.225 li
382.265 367.16 li
382.215 367.118 li
382.159 367.095 li
382.125 367.065 li
382.09 366.983 li
382.063 366.894 li
382.069 366.798 li
382.125 366.692 li
382.008 366.46 li
382.023 366.279 li
382.09 366.234 li
382.146 366.486 li
382.22 366.576 li
382.239 366.655 li
382.249 366.844 li
382.291 367.004 li
382.401 367.245 li
382.447 367.386 li
382.466 367.598 li
382.541 367.713 li
382.717 367.799 li
382.929 367.834 li
383.085 367.819 li
383.191 367.719 li
383.265 367.573 li
383.363 367.437 li
383.513 367.381 li
383.709 367.341 li
383.789 367.234 li
383.794 367.095 li
383.648 366.304 li
383.567 366.153 li
383.543 366.023 li
383.614 365.867 li
383.765 365.615 li
383.823 365.304 li
383.99 364.756 li
384.011 364.653 li
383.997 364.553 li
383.95 364.424 li
383.921 364.413 li
383.886 364.453 li
383.823 364.489 li
382.466 364.489 li
382.401 364.528 li
382.336 364.59 li
382.276 364.613 li
382.239 364.553 li
382.246 364.438 li
382.302 364.367 li
382.381 364.327 li
382.466 364.297 li
383.227 364.232 li
383.789 364.322 li
383.814 364.287 li
383.765 364.172 li
383.715 364.091 li
383.654 364.031 li
383.585 363.995 li
383.483 363.981 li
383.538 363.895 li
383.619 363.839 li
383.72 363.814 li
383.823 363.794 li
383.81 363.839 li
383.765 363.981 li
383.876 364.021 li
383.997 364.195 li
384.135 364.237 li
384.188 364.183 li
384.337 363.794 li
384.333 363.548 li
385.032 362.199 li
385.398 361.953 li
385.627 361.728 li
385.415 361.479 li
385.254 361.58 li
385.106 361.576 li
384.971 361.535 li
384.847 361.546 li
384.77 361.627 li
384.715 361.747 li
384.625 361.808 li
384.448 361.735 li
384.503 361.707 li
384.559 361.667 li
384.675 361.546 li
384.619 361.611 li
384.649 361.58 li
384.729 361.479 li
384.593 361.41 li
384.434 361.294 li
384.277 361.218 li
383.99 361.329 li
383.831 361.32 li
383.685 361.334 li
383.593 361.479 li
383.522 361.354 li
383.411 361.305 li
383.297 361.278 li
383.201 361.233 li
383.241 361.144 li
383.291 361.104 li
383.352 361.108 li
383.429 361.168 li
383.447 361.138 li
383.463 361.108 li
383.483 361.043 li
383.22 361.017 li
382.96 361.066 li
382.733 361.048 li
382.577 360.792 li
382.772 360.847 li
382.915 360.837 li
382.96 360.74 li
382.859 360.54 li
382.829 360.514 li
382.738 360.469 li
382.692 360.424 li
382.667 360.374 li
382.627 360.228 li
382.485 359.871 li
382.466 359.729 li
382.563 359.8 li
382.889 360.223 li
382.953 360.283 li
383.356 360.575 li
383.453 360.62 li
383.854 360.735 li
383.955 360.71 li
383.997 360.601 li
384.08 360.646 li
384.167 360.665 li
384.254 360.655 li
384.337 360.601 li
384.493 360.797 li
384.574 360.842 li
384.704 360.857 li
384.805 360.815 li
384.841 360.71 li
384.856 360.585 li
384.905 360.479 li
384.987 360.453 li
385.082 360.464 li
385.159 360.429 li
385.188 360.263 li
385.169 360.207 li
385.058 360.071 li
385.023 359.981 li
384.881 360.038 li
384.831 359.981 li
384.876 359.882 li
385.023 359.789 li
384.926 359.688 li
384.786 359.648 li
384.503 359.608 li
384.503 359.543 li
384.649 359.543 li
384.923 359.477 li
385.072 359.477 li
384.876 358.935 li
384.847 358.789 li
384.881 358.819 li
384.905 358.834 li
384.931 358.858 li
384.958 358.914 li
385.023 358.914 li
385.023 358.729 li
385.106 358.824 li
385.188 359.014 li
385.244 359.111 li
385.438 359.242 li
385.574 359.302 li
385.637 359.263 li
385.646 359.226 li
385.692 359.23 li
385.696 359.197 li
385.682 359.162 li
385.64 359.126 li
385.605 359.106 li
385.585 359.111 li
385.529 359.041 li
385.529 359.001 li
385.61 358.979 li
385.63 358.924 li
385.712 358.808 li
385.816 358.684 li
385.923 358.607 li
385.923 358.744 li
385.873 358.984 li
385.838 359.427 li
385.852 359.528 li
385.923 359.477 li
385.977 359.477 li
385.861 359.789 li
385.977 359.784 li
386.077 359.72 li
386.154 359.633 li
386.25 359.464 li
386.27 359.402 li
386.274 359.317 li
386.265 359.165 li
386.344 359.226 li
386.471 359.382 li
386.545 359.422 li
386.611 359.397 li
386.719 359.263 li
386.802 359.226 li
386.976 359.216 li
387.177 359.171 li
387.356 359.096 li
387.457 358.979 li
387.563 359.075 li
387.48 359.162 li
387.114 359.321 li
386.948 359.422 li
386.889 359.477 li
386.802 359.574 li
386.777 359.614 li
386.777 359.648 li
386.771 359.729 li
386.57 360.268 li
386.545 360.424 li
386.616 360.608 li
386.754 360.715 li
386.889 360.695 li
386.988 360.324 li
387.18 359.996 li
387.225 359.885 li
387.859 359.488 li
387.929 359.353 li
387.983 359.197 li
388.05 359.075 li
388.452 358.588 li
388.595 358.477 li
389.018 358.361 li
389.264 357.969 li
389.555 357.049 li
389.434 357.044 li
389.318 357.068 li
389.219 357.123 li
389.132 357.205 li
389.036 357.255 li
388.926 357.234 li
388.734 357.173 li
388.563 357.155 li
388.349 357.104 li
388.192 357.009 li
388.192 356.861 li
388.251 356.943 li
388.327 356.967 li
388.394 356.938 li
388.423 356.832 li
388.418 356.731 li
388.423 356.665 li
388.478 356.626 li
388.846 356.61 li
388.94 356.646 li
388.931 356.737 li
388.841 356.777 li
388.719 356.761 li
388.604 356.782 li
388.538 356.927 li
388.946 356.978 li
389.167 356.832 li
389.505 356.173 li
389.56 356.097 li
389.615 356.062 li
389.665 356.033 li
389.725 355.986 li
389.926 355.71 li
390.063 355.564 li
391.652 354.307 li
392.06 354.089 li
392.266 353.92 li
392.422 353.833 li
392.502 353.698 li
392.609 353.692 li
392.789 353.743 li
393.015 353.632 li
393.137 353.592 li
393.241 353.626 li
395.4 352.293 li
395.771 351.892 li
395.886 351.842 li
396.099 351.624 li
396.227 351.574 li
396.306 351.523 li
396.478 351.143 li
396.488 351.338 li
396.611 351.367 li
396.773 351.293 li
396.905 351.178 li
396.905 351.092 li
396.818 350.875 li
396.849 350.835 li
396.901 350.785 li
396.993 350.463 li
397.179 350.178 li
397.426 349.939 li
398.103 349.537 li
399.03 349.069 li
400.268 348.28 li
401.301 347.837 li
401.815 347.556 li
401.891 347.586 li
401.939 347.62 li
401.97 347.672 li
401.984 347.746 li
402.07 347.696 li
402.102 347.616 li
402.104 347.405 li
402.064 347.34 li
401.968 347.328 li
401.855 347.334 li
401.764 347.31 li
401.73 347.26 li
401.658 347.088 li
401.646 347.032 li
401.613 347.007 li
401.537 346.977 li
401.46 346.922 li
401.426 346.811 li
401.6 346.86 li
401.79 346.877 li
401.806 346.851 li
401.786 346.78 li
401.793 346.716 li
401.897 346.69 li
401.978 346.609 li
401.96 346.447 li
401.992 346.333 li
402.216 346.379 li
402.216 346.447 li
402.171 346.524 li
402.22 346.579 li
402.317 346.619 li
402.544 346.654 li
402.643 346.71 li
402.703 346.8 li
402.726 346.911 li
402.759 346.987 li
402.826 347.077 li
402.889 347.184 li
402.896 347.31 li
402.825 347.41 li
402.619 347.489 li
402.557 347.62 li
402.803 347.666 li
402.967 347.569 li
403.089 347.439 li
403.246 347.35 li
403.354 347.31 li
403.465 347.295 li
403.517 347.34 li
403.555 347.419 li
403.637 347.435 li
403.735 347.39 li
403.804 347.31 li
403.78 347.223 li
403.79 347.066 li
403.821 346.892 li
403.861 346.755 li
403.942 346.625 li
404.259 346.258 li
404.092 346.258 li
403.98 346.313 li
403.669 346.641 li
403.55 346.716 li
403.416 346.746 li
403.235 346.755 li
403.235 346.69 li
403.485 346.614 li
403.696 346.489 li
403.863 346.308 li
403.975 346.071 li
404.031 346.071 li
404.044 346.116 li
404.056 346.136 li
404.365 346.007 li
404.525 345.927 li
404.682 345.89 li
404.875 345.935 li
404.962 345.93 li
405.035 345.766 li
405.121 345.679 li
405.273 345.583 li
405.552 345.467 li
406.308 345.281 li
406.644 345.266 li
406.711 345.292 li
406.89 345.367 li
406.981 345.393 li
407.524 345.413 li
408.062 345.583 li
408.072 345.572 li
408.231 345.583 li
408.273 345.604 li
408.308 345.673 li
408.345 345.699 li
408.431 345.699 li
408.711 345.644 li
408.895 345.693 li
409.086 345.94 li
409.249 346.012 li
409.336 346.001 li
409.504 345.91 li
409.618 345.89 li
409.691 345.905 li
409.758 345.935 li
409.832 345.956 li
409.935 345.95 li
410.101 345.855 li
410.198 345.699 li
410.211 345.522 li
410.132 345.362 li
410.104 345.281 li
410.168 345.081 li
410.159 344.959 li
410.106 344.914 li
410.031 344.904 li
409.962 344.869 li
409.935 344.748 li
409.92 344.646 li
409.877 344.457 li
409.882 344.346 li
409.918 344.25 li
410.014 344.134 li
410.047 344.033 li
410.251 344.094 li
410.42 344.024 li
410.582 343.914 li
410.759 343.858 li
410.808 343.818 li
410.88 343.727 li
410.967 343.642 li
411.069 343.606 li
411.158 343.637 li
411.278 343.763 li
411.38 343.787 li
411.622 343.687 li
411.723 343.668 li
411.806 343.621 li
411.783 343.525 li
411.696 343.36 li
411.808 343.188 li
411.95 343.208 li
412.108 343.273 li
412.263 343.239 li
412.219 343.118 li
412.206 342.967 li
412.243 342.862 li
412.348 342.901 li
412.436 342.982 li
412.527 343.044 li
412.623 343.094 li
412.72 343.113 li
412.659 342.957 li
412.708 342.901 li
412.803 342.952 li
412.885 343.113 li
413.051 342.736 li
413.179 342.636 li
413.397 342.626 li
413.288 342.494 li
413.138 342.425 li
413.047 342.33 li
413.109 342.129 li
413.166 342.219 li
413.232 342.224 li
413.397 342.129 li
413.455 342.112 li
413.566 342.097 li
413.624 342.072 li
413.668 342.027 li
413.722 341.912 li
413.763 341.891 li
413.859 341.79 li
414.136 341.619 li
414.361 341.549 li
414.308 341.761 li
414.424 341.716 li
414.482 341.705 li
414.559 341.7 li
414.639 341.735 li
414.677 341.806 li
414.706 341.891 li
414.755 341.946 li
414.9 341.946 li
415.014 341.872 li
415.126 341.821 li
415.27 341.891 li
415.402 341.835 li
415.556 341.815 li
415.679 341.771 li
415.728 341.639 li
415.917 341.564 li
416.164 341.523 li
416.392 341.528 li
416.519 341.584 li
416.644 341.564 li
416.771 341.629 li
416.915 341.66 li
417.084 341.515 li
417.268 341.208 li
417.41 341.097 li
417.6 341.146 li
417.521 340.945 li
417.335 340.885 li
417.124 340.849 li
416.976 340.719 li
417.041 340.684 li
417.079 340.639 li
417.141 340.534 li
416.917 340.547 li
416.774 340.592 li
416.666 340.679 li
416.546 340.804 li
416.392 341.026 li
416.354 341.047 li
416.345 340.93 li
416.375 340.84 li
416.449 340.734 li
416.575 340.597 li
416.449 340.534 li
416.317 340.558 li
416.198 340.634 li
416.118 340.719 li
416.175 340.547 li
416.56 340.24 li
416.405 340.166 li
416.235 340.24 li
416.041 340.383 li
415.887 340.417 li
415.835 340.166 li
415.853 340.06 li
415.932 339.788 li
416.009 339.632 li
415.994 339.576 li
415.965 339.517 li
415.949 339.457 li
416.175 339.023 li
416.323 338.878 li
416.528 338.807 li
416.795 338.813 li
416.774 338.862 li
416.759 338.944 li
416.745 338.994 li
417.325 338.722 li
417.719 338.656 li
417.96 338.576 li
418.141 338.465 li
418.107 338.33 li
418.245 338.026 li
418.342 337.932 li
418.446 338.018 li
418.479 337.987 li
418.504 337.977 li
418.565 337.952 li
418.584 338.013 li
418.644 338.092 li
418.673 338.148 li
418.733 338.058 li
418.805 337.997 li
418.837 337.917 li
418.785 337.775 li
418.879 337.767 li
418.967 337.771 li
419.052 337.796 li
419.125 337.836 li
419.024 337.912 li
419.036 337.957 li
419.091 337.992 li
419.125 338.018 li
419.168 338.144 li
419.166 338.229 li
419.101 338.264 li
418.92 338.293 li
418.813 338.37 li
418.83 338.489 li
419.019 338.632 li
419.068 338.566 li
419.123 338.521 li
419.243 338.45 li
419.274 338.611 li
419.351 338.59 li
419.499 338.45 li
419.676 338.46 li
419.745 338.495 li
419.76 338.576 li
419.737 338.873 li
419.784 338.912 li
419.928 338.938 li
420.041 338.833 li
420.118 338.793 li
420.153 338.843 li
420.168 338.928 li
420.207 338.933 li
420.258 338.898 li
420.317 338.873 li
420.446 338.777 li
420.493 338.751 li
420.69 338.751 li
420.797 338.696 li
421.012 338.439 li
421.089 338.38 li
421.232 338.032 li
421.285 337.952 li
421.399 337.923 li
421.427 337.992 li
421.396 338.129 li
421.34 338.264 li
421.496 338.238 li
421.586 338.129 li
421.646 338.008 li
421.711 337.952 li
421.784 337.926 li
422.026 337.812 li
422.133 337.775 li
422.561 337.706 li
422.638 337.686 li
422.873 337.564 li
422.991 337.529 li
422.991 337.595 li
422.873 337.65 li
423.041 337.696 li
423.205 337.664 li
423.332 337.686 li
423.383 337.867 li
423.459 337.851 li
423.83 337.907 li
423.953 337.952 li
423.996 338.008 li
424.101 338.188 li
424.18 338.264 li
424.242 338.283 li
424.338 338.304 li
424.429 338.314 li
424.469 338.299 li
424.53 338.39 li
424.683 338.48 li
424.869 338.545 li
425.033 338.56 li
424.853 338.706 li
424.488 338.828 li
423.813 338.938 li
423.142 338.918 li
422.835 338.846 li
422.647 338.687 li
422.575 338.944 li
422.533 338.994 li
422.443 338.999 li
422.247 338.902 li
422.162 338.873 li
421.857 338.867 li
421.739 338.933 li
421.681 339.119 li
421.718 339.31 li
421.843 339.365 li
422.006 339.325 li
422.162 339.209 li
422.29 339.145 li
422.462 339.119 li
422.811 339.119 li
424.892 338.873 li
425.228 338.938 li
425.252 338.952 li
425.342 339.089 li
425.392 339.1 li
425.441 339.05 li
425.491 338.984 li
425.543 338.938 li
425.924 338.772 li
426.326 338.656 li
428.208 338.45 li
428.403 338.37 li
428.618 338.224 li
428.772 338.058 li
428.78 337.897 li
428.688 337.957 li
428.683 337.846 li
428.701 337.675 li
428.69 337.56 li
428.598 337.484 li
428.266 337.283 li
428.299 337.257 li
428.316 337.238 li
428.341 337.222 li
428.379 337.212 li
428.303 337.177 li
428.247 337.127 li
428.216 337.057 li
428.208 336.971 li
428.181 336.997 li
428.151 337.021 li
428.122 337.05 li
428.098 337.097 li
428.039 337.097 li
427.787 336.608 li
427.752 336.423 li
427.795 336.23 li
427.916 336.141 li
428.077 336.116 li
428.238 336.116 li
428.576 335.884 li
428.775 335.773 li
428.862 335.754 li
428.961 335.769 li
429.021 335.788 li
429.081 335.794 li
429.176 335.754 li
429.249 335.698 li
429.341 335.562 li
429.408 335.508 li
429.488 335.558 li
429.692 335.537 li
429.799 335.566 li
429.824 335.627 li
429.857 335.85 li
429.856 335.935 li
429.824 336.13 li
429.799 336.181 li
429.742 336.227 li
429.568 336.308 li
429.523 336.402 li
429.526 336.473 li
429.594 336.508 li
429.747 336.487 li
429.359 336.83 li
429.19 337.032 li
429.12 337.248 li
428.985 337.444 li
428.961 337.55 li
429.091 337.595 li
429.211 337.614 li
429.277 337.669 li
429.271 337.751 li
429.176 337.836 li
429.117 337.806 li
429.068 337.791 li
428.951 337.775 li
429.026 337.867 li
429.192 337.981 li
429.29 338.082 li
429.421 338.002 li
429.564 338.077 li
429.772 338.264 li
430.594 338.243 li
431.17 338.288 li
431.943 338.214 li
432.553 338.198 li
432.626 338.169 li
432.728 338.047 li
432.779 338.018 li
432.881 338.013 li
433.146 337.952 li
433.912 337.907 li
435.2 337.932 li
436.873 338.053 li
437.834 338.082 li
437.934 338.119 li
438.09 338.283 li
438.204 338.33 li
438.284 338.129 li
438.291 338.026 li
438.255 337.897 li
438.204 337.897 li
438.128 337.997 li
438.063 337.902 li
438.041 337.711 li
438.087 337.529 li
438.119 337.468 li
438.15 337.435 li
438.197 337.41 li
438.286 337.404 li
438.342 337.378 li
438.356 337.317 li
438.356 337.238 li
438.389 337.087 li
438.389 337.005 li
438.401 336.941 li
438.456 336.915 li
438.521 336.9 li
438.77 336.794 li
438.96 336.559 li
439.064 336.497 li
439.22 336.548 li
439.265 336.442 li
439.338 336.368 li
439.394 336.278 li
439.392 336.116 li
439.311 336.161 li
439.13 336.201 li
439.053 336.23 li
438.938 336.368 li
438.858 336.428 li
438.821 336.393 li
438.755 336.291 li
438.458 335.955 li
438.374 335.815 li
438.332 335.438 li
438.347 335.003 li
438.432 334.606 li
438.595 334.345 li
438.894 334.204 li
439.043 334.099 li
439.109 333.947 li
439.137 333.902 li
439.204 333.853 li
439.289 333.813 li
439.362 333.797 li
439.403 333.746 li
439.561 333.43 li
439.685 333.313 li
439.951 333.157 li
440.101 333.037 li
440.146 332.961 li
440.172 332.806 li
440.214 332.73 li
440.458 332.504 li
441.078 332.086 li
442.001 331.644 li
442.741 331.383 li
443.734 331.109 li
444.56 330.809 li
445.428 330.436 li
446.637 329.707 li
446.825 329.46 li
446.868 329.112 li
446.543 328.013 li
446.463 327.242 li
446.487 326.487 li
446.445 326.104 li
446.123 325.497 li
446.085 325.154 li
446.125 325.003 li
446.189 324.878 li
446.373 324.61 li
446.604 324.122 li
446.823 323.841 li
446.886 323.689 li
446.919 323.555 li
446.936 323.408 li
446.929 323.267 li
446.886 323.156 li
446.921 322.78 li
447.077 322.463 li
447.871 321.562 li
447.908 321.426 li
447.928 321.331 li
448.002 321.165 li
448.027 321.024 li
448.066 320.938 li
448.075 320.888 li
448.109 320.104 li
448.162 320.003 li
448.249 319.963 li
448.321 319.866 li
448.388 319.757 li
448.51 319.596 li
448.582 319.464 li
448.645 319.403 li
448.798 319.313 li
449.212 319.138 li
449.354 319.102 li
449.393 319.077 li
449.48 319.038 li
449.567 319.038 li
449.607 319.133 li
449.632 319.229 li
449.686 319.207 li
449.777 319.102 li
449.876 319.032 li
449.958 318.94 li
450.201 318.554 li
450.276 318.469 li
450.455 318.323 li
450.537 318.222 li
450.876 317.628 li
450.944 317.538 li
451.144 317.351 li
451.293 317.456 li
451.418 317.342 li
451.597 316.936 li
451.992 316.324 li
452.094 315.938 li
452.291 315.597 li
452.376 315.189 li
452.475 315.013 li
452.603 314.866 li
452.731 314.756 li
452.54 314.695 li
452.391 314.74 li
452.254 314.827 li
452.166 314.821 li
452.224 314.756 li
452.038 314.756 li
451.883 314.695 li
451.813 314.578 li
451.884 314.403 li
451.826 314.369 li
451.802 314.354 li
451.766 314.344 li
451.766 314.277 li
451.929 314.272 li
451.976 314.188 li
451.931 314.07 li
451.823 313.976 li
452.097 313.931 li
452.26 313.936 li
452.394 313.976 li
452.452 314.087 li
452.412 314.339 li
452.506 314.403 li
452.562 314.369 li
452.615 314.282 li
452.676 314.222 li
452.761 314.253 li
452.833 314.339 li
452.855 314.373 li
452.881 314.354 li
452.953 314.277 li
453.037 314.143 li
453.203 313.759 li
453.267 313.68 li
453.301 313.603 li
453.428 313.036 li
453.508 312.864 li
453.525 312.779 li
453.507 312.692 li
453.428 312.526 li
453.41 312.451 li
453.4 312.319 li
453.473 312.235 li
453.534 312.195 li
453.608 312.18 li
453.667 312.14 li
453.789 311.692 li
453.769 311.576 li
453.58 311.576 li
453.709 311.461 li
454.074 311.33 li
454.151 311.189 li
454.188 311.023 li
454.659 309.876 li
454.803 309.72 li
455.286 309.357 li
456.249 308.935 li
456.479 308.755 li
456.652 308.453 li
457.285 306.832 li
457.355 306.48 li
457.383 305.292 li
457.207 303.991 li
457.027 302.351 li
456.995 300.434 li
457.162 299.021 li
457.703 296.892 li
457.987 296.188 li
459.031 294.566 li
459.437 294.069 li
459.703 293.839 li
459.997 293.683 li
460.562 293.571 li
460.768 293.432 li
460.833 293.405 li
460.886 293.37 li
460.907 293.295 li
460.917 293.188 li
460.942 293.104 li
461.021 292.969 li
461.925 292.022 li
462.029 291.75 li
461.947 291.554 li
461.783 291.358 li
461.642 291.072 li
461.604 290.875 li
461.621 289.785 li
461.59 289.597 li
461.435 289.181 li
461.364 288.43 li
461.438 287.288 li
461.491 287.132 li
461.642 286.88 li
461.767 286.544 li
461.925 285.462 li
462.141 285.01 li
462.158 284.96 li
462.154 284.844 li
462.057 284.648 li
462.037 284.552 li
462.037 284.169 li
462.4 282.947 li
462.664 281.402 li
462.744 281.223 li
462.754 281.136 li
462.716 281.045 li
463.012 280.588 li
463.108 280.382 li
463.119 280.104 li
463.102 279.868 li
463.121 279.662 li
463.181 279.472 li
463.518 278.872 li
463.555 278.736 li
463.597 278.002 li
463.624 277.876 li
463.748 277.631 li
463.791 277.504 li
463.795 277.348 li
464.002 276.79 li
464.027 276.609 li
464.072 276.482 li
464.266 276.187 li
464.311 276.055 li
464.287 275.965 li
464.176 275.784 li
464.134 275.703 li
464.086 275.446 li
464.055 275.377 li
463.95 275.229 li
463.795 274.873 li
463.636 273.585 li
463.386 272.251 li
463.333 271.522 li
463.149 270.738 li
463.091 268.514 li
462.975 267.916 li
462.949 267.543 li
462.977 267.191 li
462.918 267.182 li
462.84 267.207 li
462.766 267.217 li
462.716 267.162 li
462.726 267.07 li
462.786 267.025 li
462.887 266.995 li
462.858 266.884 li
462.743 266.769 li
462.716 266.667 li
462.609 265.993 li
462.621 265.824 li
462.699 265.546 li
462.737 265.289 li
462.887 264.837 li
462.949 264.192 li
463.119 263.785 li
463.119 263.64 li
463.102 263.515 li
463.106 263.403 li
463.174 263.319 li
463.122 263.202 li
463.158 263.112 li
463.23 263.015 li
463.288 262.914 li
463.296 262.8 li
463.23 262.533 li
463.23 262.182 li
463.254 262.06 li
463.404 261.804 li
463.428 261.703 li
463.438 261.496 li
463.457 261.396 li
463.502 261.296 li
463.606 261.129 li
463.795 260.294 li
463.751 260.118 li
463.744 259.394 li
463.698 259.317 li
463.587 259.328 li
463.464 259.389 li
463.375 259.449 li
463.299 259.55 li
463.246 259.671 li
463.268 259.751 li
463.404 259.716 li
463.365 259.801 li
463.345 259.832 li
463.44 259.852 li
463.512 259.886 li
463.555 259.941 li
463.569 260.037 li
463.554 260.063 li
463.47 260.078 li
463.431 260.092 li
463.401 260.143 li
463.42 260.169 li
463.452 260.192 li
463.457 260.234 li
463.407 260.386 li
463.393 260.486 li
463.431 260.531 li
463.498 260.565 li
463.51 260.652 li
463.504 260.747 li
463.518 260.822 li
463.142 261.018 li
462.963 261.084 li
462.807 261.105 li
462.641 261.195 li
462.691 261.391 li
462.887 261.748 li
462.835 261.748 li
462.786 261.627 li
462.703 261.576 li
462.612 261.531 li
462.547 261.451 li
462.532 261.341 li
462.56 261.234 li
462.611 261.155 li
462.664 261.105 li
462.56 260.988 li
462.574 260.907 li
462.716 260.762 li
462.835 260.898 li
462.933 260.923 li
463.259 260.878 li
463.323 260.849 li
463.333 260.777 li
463.308 260.692 li
463.2 260.505 li
463.201 260.42 li
463.223 260.341 li
463.23 260.234 li
463.191 260.137 li
463.104 260.002 li
462.985 259.883 li
462.822 259.812 li
462.688 259.73 li
462.637 259.716 li
462.574 259.438 li
462.547 259.364 li
462.609 259.137 li
462.758 259.208 li
462.876 259.237 li
463.092 259.249 li
463.164 259.203 li
463.209 259.103 li
463.184 259.002 li
462.897 258.906 li
462.807 258.785 li
462.664 258.494 li
462.571 258.394 li
462.206 258.207 li
462.251 258.132 li
462.268 258.056 li
462.251 257.984 li
462.206 257.916 li
461.972 258.09 li
461.933 258.031 li
461.995 257.881 li
462.066 257.794 li
462.245 257.784 li
462.338 257.794 li
462.404 257.825 li
462.442 258.065 li
462.469 258.071 li
462.505 258.065 li
462.547 258.087 li
462.609 258.146 li
462.664 258.187 li
462.721 258.232 li
462.778 258.322 li
462.811 258.413 li
462.827 258.513 li
462.855 258.608 li
462.918 258.695 li
463.069 258.841 li
463.149 258.886 li
463.259 258.901 li
463.33 258.871 li
463.314 258.801 li
463.23 258.669 li
463.212 258.518 li
463.23 257.995 li
463.275 257.804 li
463.365 257.653 li
463.431 257.498 li
463.404 257.275 li
463.32 257.09 li
463.224 256.934 li
463.148 256.767 li
463.119 256.545 li
463.142 256.476 li
463.189 256.421 li
463.223 256.371 li
463.201 256.314 li
463.138 256.214 li
463.104 256.063 li
463.066 255.998 li
462.853 255.892 li
462.669 255.979 li
462.544 256.169 li
462.494 256.371 li
462.524 256.783 li
462.445 256.904 li
462.206 256.923 li
462.206 256.863 li
462.405 256.817 li
462.467 256.693 li
462.435 256.314 li
462.453 256.143 li
462.502 255.982 li
462.574 255.852 li
462.664 255.772 li
462.599 255.519 li
462.646 255.172 li
462.835 254.604 li
462.853 254.685 li
462.858 254.755 li
462.853 254.821 li
462.835 254.896 li
463.084 254.842 li
463.174 254.842 li
463.25 254.871 li
463.457 255.006 li
463.54 254.941 li
463.521 254.81 li
463.404 254.548 li
463.465 254.379 li
463.516 254.036 li
463.597 253.879 li
463.729 253.765 li
464.196 253.443 li
464.391 253.22 li
464.475 253.157 li
464.564 253.13 li
464.658 253.12 li
464.732 253.091 li
464.763 253.009 li
464.196 252.864 li
464.124 252.829 li
464.077 252.799 li
464.047 252.752 li
464.027 252.697 li
464.019 252.596 li
464.034 252.481 li
464.082 252.387 li
464.166 252.345 li
464.348 252.31 li
464.529 252.22 li
464.693 252.104 li
464.813 251.999 li
464.928 251.864 li
465.092 251.623 li
465.187 251.501 li
465.216 251.436 li
465.224 251.345 li
465.216 251.163 li
465.229 251.058 li
465.261 250.988 li
465.3 250.927 li
465.348 250.806 li
465.37 250.782 li
465.447 250.727 li
465.335 250.681 li
465.216 250.65 li
465.105 250.65 li
465.02 250.7 li
464.957 250.721 li
464.915 250.67 li
464.88 250.585 li
464.846 250.525 li
464.79 250.521 li
464.721 250.56 li
464.592 250.67 li
464.537 250.621 li
464.373 250.541 li
464.311 250.494 li
464.266 250.399 li
464.249 250.284 li
464.249 250.183 li
464.253 250.147 li
464.196 250.063 li
464.145 250.036 li
464.094 250.028 li
464.027 249.977 li
463.962 249.876 li
463.871 249.673 li
463.795 249.573 li
463.905 249.523 li
463.944 249.449 li
463.967 249.342 li
464.027 249.222 li
464.139 249.126 li
464.241 249.076 li
464.296 249.01 li
464.253 248.875 li
464.311 248.875 li
464.424 249.051 li
464.241 249.197 li
464.148 249.308 li
464.134 249.449 li
464.29 250.068 li
464.357 250.248 li
464.45 250.329 li
464.526 250.349 li
464.618 250.429 li
464.706 250.435 li
464.766 250.404 li
464.859 250.287 li
464.904 250.263 li
465.008 250.173 li
465.335 249.573 li
465.23 249.468 li
465.227 249.372 li
465.335 249.157 li
465.358 249.131 li
465.396 249.116 li
465.432 249.086 li
465.447 249.021 li
465.447 248.79 li
465.465 248.608 li
465.518 248.462 li
465.672 248.181 li
465.724 248.181 li
465.718 248.332 li
465.688 248.441 li
465.694 248.539 li
465.785 248.645 li
465.92 248.708 li
466.012 248.703 li
466.076 248.745 li
466.166 249.103 li
466.26 249.282 li
466.428 249.377 li
466.689 249.277 li
466.828 249.394 li
466.955 249.443 li
467.081 249.459 li
467.232 249.459 li
467.313 250.031 li
467.308 250.078 li
467.286 250.113 li
467.272 250.142 li
467.286 250.178 li
467.354 250.258 li
467.369 250.297 li
467.375 250.354 li
467.407 250.399 li
467.47 250.464 li
467.508 250.544 li
467.378 250.797 li
467.414 250.943 li
467.479 251.083 li
467.492 251.25 li
467.422 251.083 li
467.324 251.107 li
467.241 251.218 li
467.154 251.516 li
466.987 251.827 li
467.036 251.933 li
467.224 251.979 li
467.418 251.914 li
467.594 251.819 li
467.827 251.732 li
468 251.57 li
468.084 251.531 li
468.181 251.531 li
468.365 251.501 li
468.454 251.476 li
468.631 251.375 li
468.793 251.25 li
469.033 250.906 li
469.682 250.274 li
470.242 249.559 li
470.835 248.875 li
470.922 248.819 li
471.024 248.77 li
471.46 248.1 li
471.914 247.14 li
472.39 246.471 li
473.176 245.516 li
473.787 244.513 li
474.307 243.783 li
474.497 243.325 li
474.726 242.944 li
475.208 241.72 li
475.399 241.484 li
475.479 241.354 li
475.514 241.043 li
476.129 239.745 li
476.68 238.945 li
476.74 238.783 li
476.608 238.829 li
476.501 238.949 li
476.401 239.086 li
476.288 239.191 li
476.144 239.255 li
475.972 239.311 li
475.798 239.332 li
475.655 239.302 li
475.895 239.226 li
476.156 239.104 li
476.366 238.914 li
476.453 238.638 li
476.401 238.567 li
476.058 238.435 li
475.972 238.355 li
475.915 238.255 li
475.835 237.978 li
475.915 238.064 li
475.988 238.074 li
476.039 238.024 li
476.058 237.914 li
476.116 238.229 li
476.173 238.367 li
476.288 238.377 li
476.35 238.285 li
476.453 237.863 li
476.584 237.626 li
476.652 237.536 li
476.74 237.456 li
476.813 237.43 li
476.888 237.425 li
476.944 237.4 li
476.969 237.319 li
476.944 237.255 li
476.904 237.213 li
476.862 237.158 li
476.854 237.057 li
477.031 237.173 li
477.086 237.229 li
477.078 237.062 li
476.848 236.681 li
476.879 236.515 li
476.939 236.564 li
477.046 236.716 li
477.198 237.001 li
477.25 237.001 li
477.22 236.907 li
477.218 236.811 li
477.25 236.599 li
477.34 236.716 li
477.361 236.952 li
477.476 237.057 li
477.322 237.102 li
477.287 237.133 li
477.198 237.229 li
476.854 237.512 li
476.762 237.616 li
476.73 237.691 li
476.68 237.914 li
476.63 238.009 li
476.397 238.32 li
476.547 238.34 li
476.544 238.4 li
476.501 238.482 li
476.516 238.551 li
476.625 238.572 li
476.996 238.496 li
477.111 238.377 li
477.362 237.626 li
477.496 237.355 li
477.538 237.295 li
477.604 237.25 li
477.697 237.208 li
477.78 237.153 li
477.815 237.088 li
477.892 236.893 li
478.079 236.771 li
478.301 236.676 li
478.494 236.539 li
478.443 236.485 li
478.443 236.539 li
478.37 236.393 li
478.377 236.107 li
478.325 236.022 li
478.372 235.941 li
478.356 235.88 li
478.301 235.83 li
478.218 235.795 li
478.175 235.8 li
478.151 235.845 li
478.118 235.896 li
478.041 235.912 li
477.934 235.855 li
477.902 235.78 li
477.956 235.735 li
478.104 235.795 li
478.104 235.735 li
477.979 235.689 li
477.912 235.649 li
477.847 235.594 li
477.768 235.554 li
477.705 235.559 li
477.646 235.579 li
477.591 235.563 li
477.541 235.509 li
477.486 235.412 li
477.442 235.317 li
477.424 235.248 li
477.451 235.156 li
477.507 235.105 li
477.563 235.097 li
477.591 235.131 li
477.671 235.146 li
478.017 235.298 li
478.071 235.333 li
478.195 235.589 li
478.275 235.684 li
478.325 235.563 li
478.388 235.563 li
478.426 235.644 li
478.469 235.668 li
478.516 235.684 li
478.556 235.735 li
478.547 235.811 li
478.512 235.907 li
478.506 235.986 li
478.586 236.022 li
478.703 235.935 li
479.312 234.965 li
479.353 234.843 li
479.362 234.668 li
479.401 234.542 li
479.486 234.427 li
479.906 234.015 li
480.034 233.838 li
480.121 233.597 li
480.533 233.063 li
481.648 232.224 li
482.954 231.408 li
483.07 231.373 li
483.111 231.348 li
483.192 231.228 li
483.237 231.201 li
483.554 231.148 li
483.705 231.061 li
483.831 231.011 li
483.986 230.977 li
484.22 230.95 li
484.528 230.85 li
484.632 230.793 li
485.594 229.542 li
485.62 229.477 li
485.618 229.432 li
485.603 229.375 li
485.594 229.275 li
485.62 229.079 li
485.689 228.939 li
485.934 228.672 li
486.844 227.932 li
487.263 227.379 li
487.598 227.253 li
487.712 227.133 li
487.995 226.559 li
488.078 226.438 li
488.175 226.382 li
488.234 226.313 li
488.432 225.87 li
488.808 225.577 li
488.984 225.393 li
489.156 224.879 li
489.583 224.467 li
489.682 224.266 li
489.625 224.351 li
489.506 224.39 li
489.229 224.435 li
489.197 224.485 li
489.194 224.552 li
489.165 224.591 li
489.059 224.557 li
489.014 224.501 li
488.824 223.853 li
488.771 223.753 li
488.65 223.642 li
488.414 223.49 li
488.319 223.348 li
488.494 223.253 li
488.678 223.324 li
488.796 223.465 li
488.771 223.581 li
489.028 223.978 li
489.031 224.067 li
489.103 224.245 li
489.188 224.38 li
489.229 224.355 li
489.595 223.982 li
489.652 223.964 li
489.712 223.917 li
489.737 223.833 li
489.737 223.61 li
489.707 223.501 li
489.586 223.295 li
489.568 223.239 li
489.67 223.128 li
489.784 223.164 li
489.89 223.258 li
489.959 223.348 li
490.113 223.607 li
490.091 223.758 li
489.974 223.888 li
489.85 224.094 li
489.991 223.982 li
490.064 223.948 li
490.14 223.922 li
490.339 223.908 li
490.421 223.883 li
490.528 223.867 li
490.704 223.33 li
490.849 223.067 li
491.073 222.952 li
491.471 222.694 li
491.545 222.615 li
492.21 221.624 li
492.236 221.499 li
492.302 221.322 li
492.468 221.142 li
492.668 220.995 li
492.859 220.894 li
492.859 220.95 li
493.046 220.804 li
493.768 219.863 li
493.898 219.537 li
494.138 219.204 li
494.372 218.651 li
494.731 218.177 li
495.075 217.519 li
495.15 217.182 li
495.188 216.809 li
495.241 216.638 li
495.498 216.267 li
495.585 216.095 li
495.598 215.763 li
495.63 215.598 li
495.725 215.527 li
495.72 215.442 li
496.078 214.722 li
496.648 213.112 li
496.662 213.045 li
496.688 212.966 li
496.742 212.9 li
496.794 212.851 li
496.805 212.821 li
496.773 212.739 li
496.77 212.515 li
496.801 212.197 li
496.856 211.951 li
496.951 211.719 li
497.09 211.507 li
497.12 211.427 li
497.172 211.11 li
497.279 210.809 li
497.284 210.677 li
497.261 210.743 li
497.228 210.798 li
497.158 210.713 li
497.145 210.637 li
497.143 210.557 li
497.115 210.457 li
497.065 210.37 li
497.013 210.311 li
496.884 210.224 li
497.02 210.229 li
497.117 210.29 li
497.284 210.457 li
497.426 210.522 li
497.529 210.506 li
497.572 210.425 li
497.574 210.279 li
497.775 209.536 li
497.855 209.375 li
497.812 209.309 li
497.796 209.264 li
497.81 209.213 li
497.855 209.152 li
497.805 209.052 li
497.734 208.846 li
497.682 208.75 li
497.572 208.978 li
497.64 208.666 li
497.623 208.574 li
497.563 208.529 li
497.284 208.409 li
497.202 208.248 li
497.268 207.906 li
497.228 207.724 li
497.339 207.764 li
497.424 207.734 li
497.455 207.668 li
497.403 207.608 li
497.318 207.608 li
497.225 207.64 li
497.064 207.724 li
497.136 207.645 li
497.254 207.553 li
497.381 207.478 li
497.485 207.443 li
497.474 207.356 li
497.321 206.92 li
497.342 206.759 li
497.391 206.88 li
497.572 207.211 li
497.575 207.086 li
497.59 207.031 li
497.623 206.976 li
497.623 207.076 li
497.643 207.171 li
497.682 207.251 li
497.742 207.327 li
497.818 207.086 li
497.876 206.976 li
497.973 206.87 li
497.879 206.727 li
497.805 206.558 li
497.717 206.441 li
497.572 206.467 li
497.572 206.417 li
497.666 206.27 li
497.409 206.225 li
496.884 206.246 li
497.02 206.18 li
497.146 206.14 li
497.284 206.129 li
497.607 206.129 li
497.672 206.14 li
497.751 206.185 li
497.792 206.185 li
497.824 206.135 li
497.913 205.898 li
497.831 205.647 li
497.833 205.32 li
497.913 204.711 li
497.913 203.489 li
497.936 203.368 li
497.98 203.238 li
498.005 203.095 li
497.973 202.95 li
497.936 202.916 li
cp
376.983 145.536 mo
376.951 145.686 li
377.038 145.842 li
377.134 145.969 li
377.128 146.019 li
377.033 145.983 li
376.872 145.827 li
376.813 145.792 li
376.615 145.747 li
376.53 145.737 li
376.349 145.757 li
376.033 145.837 li
374.926 145.882 li
373.754 145.53 li
371.986 145.158 li
371.737 145.168 li
371.259 144.988 li
369.805 144.832 li
369.342 144.731 li
369.154 144.716 li
369.006 144.766 li
368.924 144.893 li
368.869 145.043 li
368.783 145.168 li
368.641 145.25 li
368.521 145.244 li
368.376 145.199 li
368.19 145.168 li
367.982 145.205 li
367.848 145.289 li
367.732 145.38 li
367.586 145.451 li
367.496 145.456 li
367.395 145.446 li
367.295 145.446 li
367.22 145.48 li
367.093 145.702 li
367.054 145.737 li
366.972 145.782 li
366.7 146.003 li
366.631 146.069 li
366.52 146.355 li
366.475 146.522 li
366.454 146.662 li
366.433 146.702 li
366.324 146.813 li
366.284 146.858 li
366.258 146.954 li
366.228 147.257 li
366.083 147.723 li
366.062 147.845 li
366.076 148.041 li
366.117 148.191 li
366.332 148.726 li
366.377 148.897 li
366.398 149.032 li
366.475 149.087 li
366.967 149.172 li
367.41 149.324 li
367.479 149.374 li
367.496 149.439 li
367.511 149.474 li
367.479 149.49 li
367.268 149.511 li
367.184 149.505 li
367.021 149.46 li
366.388 149.162 li
366.284 149.087 li
366.247 148.932 li
366.162 148.72 li
366.051 148.534 li
365.946 148.439 li
365.594 149.334 li
365.544 149.681 li
365.563 149.717 li
365.639 149.747 li
365.66 149.792 li
365.639 149.826 li
365.563 149.892 li
365.544 149.932 li
365.533 150.18 li
365.544 150.239 li
365.67 150.36 li
365.811 150.416 li
365.92 150.495 li
365.946 150.698 li
365.874 150.596 li
365.78 150.537 li
365.681 150.542 li
365.607 150.637 li
365.639 150.728 li
365.604 150.833 li
365.538 150.953 li
365.488 151.095 li
365.442 151.397 li
365.442 151.995 li
365.488 152.277 li
365.544 152.397 li
365.689 152.629 li
365.718 152.698 li
365.795 152.801 li
365.965 152.86 li
366.554 152.905 li
366.631 152.896 li
366.707 152.86 li
366.866 152.749 li
366.937 152.729 li
367.112 152.704 li
367.273 152.645 li
367.424 152.548 li
367.559 152.418 li
367.678 152.333 li
367.808 152.322 li
367.953 152.367 li
368.104 152.447 li
367.924 152.447 li
367.782 152.428 li
367.66 152.442 li
367.535 152.558 li
367.546 152.553 li
367.479 152.729 li
367.633 152.77 li
367.726 152.835 li
367.726 152.92 li
367.586 153.007 li
367.559 152.997 li
367.334 152.952 li
367.279 152.971 li
367.168 153.042 li
366.946 153.111 li
367.32 153.428 li
367.414 153.635 li
366.967 153.404 li
366.842 153.359 li
366.454 153.288 li
365.946 153.061 li
365.594 152.851 li
365.488 152.835 li
365.377 152.965 li
365.433 153.167 li
365.544 153.378 li
365.607 153.545 li
365.594 153.722 li
365.337 154.716 li
365.316 154.893 li
365.332 155.004 li
365.433 155.26 li
365.451 155.275 li
365.488 155.295 li
365.528 155.32 li
365.544 155.375 li
365.528 155.37 li
365.448 155.431 li
365.433 155.431 li
365.393 155.623 li
365.403 155.708 li
365.459 155.798 li
365.684 156.065 li
365.718 156.136 li
365.774 156.311 li
365.906 156.497 li
367.184 157.76 li
367.358 158.137 li
367.199 158.173 li
367.083 158.292 li
367.028 158.419 li
367.054 158.48 li
367.112 158.509 li
367.303 158.655 li
367.414 158.705 li
368.697 158.961 li
368.935 158.972 li
369.165 158.948 li
369.407 158.867 li
369.593 158.742 li
369.467 158.66 li
369.21 158.586 li
369.016 158.48 li
369.206 158.52 li
369.432 158.53 li
369.618 158.485 li
369.693 158.339 li
369.675 158.142 li
369.512 157.52 li
369.578 157.52 li
369.778 158.086 li
369.805 158.252 li
369.859 158.252 li
369.899 158.092 li
369.939 157.684 li
370.001 157.549 li
370.046 157.403 li
369.904 157.287 li
369.723 157.171 li
369.633 157.041 li
369.648 156.959 li
369.688 156.906 li
369.744 156.854 li
369.805 156.785 li
369.83 156.764 li
369.859 156.774 li
369.89 156.774 li
369.916 156.734 li
369.916 156.694 li
369.899 156.673 li
369.876 156.658 li
369.76 156.361 li
369.768 156.216 li
369.916 156.11 li
369.904 156.187 li
369.865 156.332 li
369.859 156.391 li
369.879 156.462 li
369.949 156.597 li
369.979 156.729 li
369.986 156.759 li
369.916 156.9 li
369.869 156.94 li
369.813 156.945 li
369.765 156.97 li
369.744 157.041 li
369.789 157.152 li
369.887 157.182 li
369.995 157.187 li
370.088 157.237 li
370.111 157.342 li
370.088 157.93 li
370.116 158.086 li
370.19 158.208 li
370.503 158.289 li
370.579 158.374 li
370.646 158.464 li
370.77 158.535 li
371.283 158.284 li
371.334 158.208 li
371.556 158.033 li
371.62 157.917 li
371.62 157.715 li
371.601 157.594 li
371.635 157.534 li
371.82 157.52 li
371.838 157.564 li
371.786 157.967 li
371.786 158.017 li
371.817 158.057 li
371.994 158.229 li
372.031 158.258 li
372.22 158.252 li
372.319 158.273 li
372.481 158.348 li
372.672 158.393 li
372.753 158.454 li
372.832 158.53 li
372.929 158.596 li
373.01 158.615 li
373.185 158.621 li
373.267 158.649 li
373.367 158.721 li
373.437 158.792 li
373.516 158.847 li
373.634 158.867 li
373.708 158.853 li
373.904 158.771 li
374.175 158.546 li
374.23 158.48 li
374.267 158.403 li
374.292 158.318 li
374.303 158.229 li
374.292 158.137 li
374.045 157.634 li
374.005 157.438 li
374.028 157.308 li
374.14 157.046 li
374.171 156.9 li
374.205 157.025 li
374.121 157.266 li
374.115 157.408 li
374.16 157.499 li
374.312 157.7 li
374.383 158.078 li
374.486 158.303 li
374.635 158.454 li
374.795 158.48 li
374.916 158.379 li
375.173 158.092 li
375.338 158.033 li
375.71 158.086 li
375.767 158.057 li
375.824 157.871 li
375.814 157.776 li
375.705 157.745 li
375.705 157.689 li
375.821 157.689 li
375.75 157.564 li
375.725 157.438 li
375.77 157.337 li
375.911 157.297 li
376.013 157.248 li
376.078 157.131 li
376.078 157.001 li
375.991 156.9 li
376.036 156.909 li
376.078 156.909 li
376.118 156.919 li
376.163 156.951 li
376.163 156.533 li
376.133 156.427 li
376.063 156.351 li
375.988 156.287 li
375.936 156.221 li
376.013 156.25 li
376.081 156.261 li
376.152 156.25 li
376.225 156.221 li
376.274 156.703 li
376.324 156.8 li
376.431 156.744 li
376.615 156.557 li
376.695 156.552 li
376.792 156.563 li
376.869 156.543 li
376.903 156.422 li
376.934 156.361 li
377.078 156.21 li
377.128 156.11 li
377.16 156.189 li
377.134 156.271 li
377.094 156.361 li
377.073 156.478 li
377.115 156.557 li
377.409 156.845 li
377.501 156.633 li
377.732 156.658 li
377.979 156.825 li
378.09 157.041 li
378.215 157.227 li
378.491 157.237 li
378.779 157.126 li
378.945 156.951 li
378.819 156.98 li
378.769 157.01 li
378.718 157.071 li
378.668 156.956 li
378.583 156.936 li
378.498 156.925 li
378.432 156.845 li
378.513 156.83 li
378.567 156.809 li
378.612 156.779 li
378.654 156.734 li
378.699 156.785 li
378.71 156.804 li
378.718 156.845 li
378.747 156.83 li
378.829 156.785 li
378.668 156.679 li
378.644 156.478 li
378.81 155.858 li
378.81 155.658 li
378.747 155.486 li
378.603 155.375 li
378.699 155.32 li
378.747 155.346 li
378.784 155.396 li
378.829 155.431 li
379.08 155.431 li
379.096 155.491 li
379.281 155.854 li
379.302 155.938 li
379.403 156.2 li
379.453 156.276 li
379.493 156.306 li
379.535 156.321 li
379.583 156.332 li
379.654 156.337 li
379.729 156.356 li
379.736 156.407 li
379.739 156.462 li
379.791 156.501 li
379.937 156.512 li
380.03 156.473 li
380.131 156.417 li
380.554 156.356 li
380.699 156.311 li
380.762 156.25 li
380.797 156.166 li
380.871 156.187 li
381.012 156.276 li
381.078 156.245 li
381.109 156.182 li
381.128 156.105 li
381.154 156.05 li
381.269 155.964 li
381.396 155.903 li
381.535 155.858 li
381.667 155.828 li
381.667 155.769 li
381.379 155.576 li
381.3 155.546 li
381.269 155.521 li
381.229 155.401 li
381.183 155.375 li
381.175 155.366 li
380.987 155.314 li
380.946 155.229 li
380.918 155.119 li
380.871 155.018 li
380.792 154.978 li
380.726 155.008 li
380.525 155.164 li
380.419 155.205 li
380.495 155.134 li
380.53 155.055 li
380.525 154.983 li
380.474 154.923 li
380.474 154.862 li
380.71 154.792 li
380.781 154.666 li
380.689 154.555 li
380.419 154.531 li
380.636 154.455 li
380.817 154.56 li
381.511 155.412 li
381.667 155.546 li
381.715 155.546 li
381.974 154.923 li
382.048 154.425 li
382.023 154.335 li
381.892 154.243 li
381.789 154.224 li
381.546 154.219 li
381.435 154.193 li
381.435 154.134 li
381.622 154.179 li
381.688 154.052 li
381.646 153.881 li
381.525 153.796 li
381.369 153.746 li
381.209 153.616 li
381.074 153.454 li
380.987 153.288 li
381.043 153.232 li
381.183 153.423 li
381.366 153.616 li
381.58 153.756 li
381.837 153.796 li
382.023 153.706 li
382.336 153.364 li
382.492 153.288 li
382.672 153.227 li
383.051 152.955 li
383.175 152.896 li
383.291 152.815 li
383.411 152.645 li
383.418 152.518 li
383.201 152.558 li
383.201 152.498 li
383.396 152.362 li
383.429 152.333 li
383.411 152.207 li
383.352 152.196 li
383.272 152.222 li
383.201 152.217 li
383.109 152.151 li
383.109 152.135 li
383.172 152.121 li
383.255 152.05 li
383.392 151.87 li
383.418 151.783 li
383.373 151.708 li
383.543 151.571 li
383.979 151.421 li
384.167 151.256 li
384.246 151.074 li
384.281 150.857 li
384.262 150.646 li
384.167 150.471 li
384.281 150.259 li
384.162 150.024 li
383.976 149.772 li
383.879 149.505 li
384.167 149.813 li
384.333 149.942 li
384.503 150.018 li
384.523 149.847 li
384.574 149.67 li
384.593 149.529 li
384.503 149.46 li
384.585 149.369 li
384.61 149.273 li
384.619 149.062 li
384.767 148.754 li
384.791 148.64 li
384.794 148.136 li
384.85 147.89 li
385.048 147.578 li
385.132 147.311 li
385.217 147.257 li
385.307 147.226 li
385.398 147.151 li
385.48 147.059 li
385.529 146.975 li
385.556 146.864 li
385.585 146.491 li
385.564 146.35 li
385.511 146.271 li
385.436 146.215 li
385.359 146.13 li
385.299 146.13 li
385.082 146.038 li
384.111 145.903 li
383.64 145.757 li
383.453 145.737 li
383.265 145.757 li
382.95 145.842 li
382.804 145.848 li
381.852 145.606 li
381.495 145.62 li
381.229 145.671 li
381.123 145.681 li
381.048 145.651 li
380.927 145.536 li
380.699 145.456 li
380.53 145.34 li
380.379 145.205 li
380.309 145.113 li
380.122 145.213 li
379.58 145.163 li
379.337 145.229 li
379.247 145.149 li
379.136 145.144 li
379.03 145.168 li
378.945 145.168 li
378.829 145.128 li
378.724 145.063 li
378.628 145.052 li
378.554 145.057 li
378.377 145.113 li
378.17 145.123 li
378.06 145.168 li
377.985 145.173 li
377.863 145.168 li
377.792 145.194 li
377.742 145.213 li
377.702 145.213 li
377.632 145.168 li
377.134 145.419 li
376.983 145.536 li
cp
542.8 136.747 mo
542.745 136.757 li
542.712 136.788 li
542.707 136.813 li
542.717 136.842 li
542.739 136.863 li
542.781 136.868 li
542.826 136.863 li
542.849 136.847 li
542.868 136.828 li
542.875 136.797 li
542.852 136.762 li
542.8 136.747 li
cp
517.803 175.498 mo
517.714 175.538 li
517.611 175.564 li
517.524 175.599 li
517.489 175.669 li
517.444 175.709 li
517.357 175.77 li
517.311 175.831 li
517.382 175.87 li
517.485 175.85 li
517.711 175.725 li
517.832 175.693 li
517.926 175.619 li
517.943 175.524 li
517.895 175.468 li
517.803 175.498 li
cp
357.82 153.193 mo
357.545 153.349 li
357.378 153.368 li
357.293 153.394 li
357.263 153.434 li
357.248 153.459 li
357.183 153.64 li
357.173 153.685 li
357.096 153.722 li
356.544 154.128 li
356.447 154.234 li
356.402 154.335 li
356.372 154.642 li
356.337 154.801 li
356.292 154.923 li
355.97 155.346 li
355.868 155.602 li
355.95 155.879 li
356.066 155.999 li
356.211 156.084 li
356.378 156.105 li
356.715 155.944 li
357.087 155.888 li
357.263 155.828 li
357.636 155.581 li
357.967 155.29 li
358.012 155.26 li
358.129 155.229 li
358.174 155.205 li
358.188 155.174 li
358.209 155.068 li
358.223 155.039 li
358.278 155.004 li
358.511 154.923 li
358.579 154.867 li
358.646 154.788 li
358.716 154.722 li
358.822 154.697 li
359.166 154.5 li
360.171 153.661 li
360.372 153.388 li
361.026 152.207 li
361.201 152.14 li
361.402 152.388 li
361.489 152.333 li
361.523 152.272 li
361.679 151.809 li
361.859 150.802 li
361.967 150.495 li
362.479 149.505 li
362.529 149.318 li
362.515 149.138 li
362.42 149.003 li
362.228 148.947 li
362.089 148.871 li
361.922 148.489 li
361.801 148.329 li
361.669 148.273 li
361.218 148.167 li
361.116 148.186 li
361.101 148.247 li
361.066 148.278 li
361.041 148.329 li
361.062 148.439 li
361.107 148.524 li
361.287 148.775 li
361.208 148.754 li
361.137 148.72 li
361.071 148.675 li
361.011 148.609 li
361.011 148.775 li
360.951 148.775 li
360.951 148.609 li
360.84 148.67 li
360.844 148.746 li
360.89 148.841 li
360.89 148.947 li
360.833 149.053 li
360.674 149.204 li
360.608 149.289 li
360.553 149.289 li
360.584 149.204 li
360.679 149.077 li
360.725 149.003 li
360.743 148.921 li
360.743 148.881 li
360.729 148.847 li
360.725 148.805 li
360.732 148.686 li
360.765 148.524 li
360.814 148.374 li
360.89 148.273 li
360.83 148.273 li
360.705 148.292 li
360.251 148.453 li
360.126 148.524 li
360.005 148.625 li
359.587 148.892 li
359.346 149.117 li
359.134 149.369 li
358.947 149.646 li
358.605 150.4 li
358.174 150.862 li
358.088 151.175 li
358.054 152.277 li
358.233 152.598 li
358.104 152.926 li
357.82 153.193 li
cp
362.705 145.113 mo
362.737 145.104 li
362.761 145.104 li
362.771 145.094 li
362.771 145.052 li
362.399 145.052 li
362.394 145.088 li
362.248 145.239 li
362.198 145.284 li
362.134 145.305 li
361.892 145.34 li
361.84 145.374 li
361.756 145.53 li
361.579 145.702 li
361.031 146.909 li
360.981 146.99 li
360.859 147.075 li
360.83 147.115 li
360.78 147.252 li
360.658 147.326 li
360.528 147.392 li
360.441 147.482 li
360.417 147.678 li
360.507 147.733 li
360.658 147.688 li
360.937 147.467 li
361.464 147.196 li
362.103 146.723 li
362.39 146.411 li
362.539 146.069 li
362.539 145.792 li
362.576 145.636 li
362.681 145.57 li
362.65 145.512 li
362.646 145.374 li
362.66 145.218 li
362.705 145.113 li
cp
437.291 166.182 mo
437.463 166.156 li
437.414 166.251 li
437.443 166.322 li
437.523 166.357 li
437.633 166.378 li
437.633 166.438 li
437.578 166.444 li
437.463 166.489 li
437.528 166.558 li
437.609 166.603 li
437.702 166.619 li
437.882 166.589 li
437.955 166.563 li
438.023 166.528 li
438.087 166.489 li
438.05 166.413 li
438.027 166.333 li
438.018 166.246 li
438.023 166.156 li
437.973 166.156 li
437.955 166.177 li
437.948 166.188 li
437.916 166.206 li
437.824 166.082 li
437.707 165.995 li
437.56 165.939 li
436.9 165.894 li
436.774 165.925 li
437.123 166.126 li
437.291 166.182 li
cp
417.544 167.016 mo
417.628 167.002 li
417.742 166.624 li
417.77 166.156 li
417.388 166.347 li
417.215 166.483 li
416.976 166.946 li
416.913 167.188 li
416.899 167.323 li
416.915 167.455 li
417.065 167.791 li
417.084 167.933 li
417.066 168.033 li
416.993 168.24 li
416.959 168.435 li
416.913 168.51 li
416.855 168.586 li
416.752 168.772 li
416.747 168.808 li
416.745 168.888 li
416.753 168.917 li
416.774 168.964 li
416.792 169.018 li
416.795 169.084 li
416.857 169.084 li
416.864 169.049 li
416.875 169.023 li
416.915 168.973 li
416.902 168.883 li
417.136 168.616 li
417.291 168.345 li
417.483 168.259 li
417.631 168.174 li
417.562 167.891 li
417.604 167.796 li
417.673 167.69 li
417.707 167.534 li
417.77 166.886 li
417.549 167.126 li
417.484 167.222 li
417.477 167.137 li
417.496 167.066 li
417.544 167.016 li
cp
424.123 163.218 mo
424.277 163.122 li
424.483 162.76 li
424.771 162.614 li
424.875 162.535 li
424.924 162.464 li
424.837 162.429 li
424.742 162.439 li
424.6 162.479 li
424.492 162.484 li
424.364 162.524 li
424.222 162.62 li
424.107 162.736 li
424.011 162.977 li
423.931 163.108 li
423.932 163.204 li
424.123 163.218 li
cp
363.39 149.505 mo
363.285 149.455 li
363.219 149.46 li
363.205 149.49 li
363.163 149.601 li
363.134 149.62 li
363.094 149.667 li
362.938 149.907 li
362.877 150.119 li
362.848 150.336 li
362.862 150.537 li
362.938 150.698 li
362.988 150.698 li
363.123 150.582 li
363.324 150.45 li
363.552 150.344 li
363.763 150.304 li
363.967 150.229 li
364.316 149.918 li
364.554 149.847 li
364.829 149.836 li
365.07 149.786 li
365.242 149.656 li
365.316 149.405 li
365.323 149.289 li
365.268 149.003 li
365.186 148.699 li
365.15 148.609 li
365.136 148.543 li
365.12 148.519 li
365.086 148.493 li
364.81 148.947 li
364.755 148.947 li
364.774 148.836 li
364.925 148.548 li
364.521 148.696 li
364.131 148.892 li
363.933 149.053 li
363.631 149.395 li
363.446 149.505 li
363.39 149.505 li
cp
377.849 158.334 mo
377.767 158.252 li
377.718 158.142 li
377.692 158.033 li
377.536 157.991 li
377.419 158.072 li
377.239 158.313 li
377.008 158.44 li
376.928 158.509 li
376.894 158.575 li
376.869 158.747 li
376.837 158.816 li
376.626 159.017 li
376.585 159.123 li
376.671 159.264 li
376.807 159.35 li
377.145 159.43 li
377.295 159.49 li
377.356 159.4 li
377.583 159.154 li
377.767 158.861 li
377.839 158.816 li
377.909 158.747 li
377.999 158.596 li
378.04 158.44 li
377.948 158.369 li
377.849 158.334 li
cp
413.452 155.335 mo
413.63 155.386 li
413.768 155.341 li
413.79 155.149 li
413.865 155.185 li
413.938 155.179 li
414.007 155.145 li
414.077 155.094 li
414.119 155.028 li
414.174 154.963 li
414.238 154.907 li
414.308 154.862 li
414.233 154.822 li
414.179 154.771 li
414.146 154.716 li
414.133 154.642 li
414.207 154.671 li
414.272 154.711 li
414.325 154.756 li
414.359 154.812 li
414.417 154.812 li
414.489 154.56 li
414.472 154.47 li
414.359 154.365 li
414.233 154.285 li
414.166 154.259 li
414.104 154.243 li
414.036 154.274 li
413.972 154.335 li
413.904 154.37 li
413.681 154.269 li
413.596 154.344 li
413.55 154.47 li
413.534 154.531 li
413.65 154.6 li
413.63 154.761 li
413.507 155.039 li
413.519 154.912 li
413.498 154.812 li
413.439 154.737 li
413.337 154.697 li
413.285 154.788 li
413.245 154.933 li
413.245 155.094 li
413.311 155.234 li
413.452 155.335 li
cp
385.262 152.695 mo
385.127 152.78 li
385.072 153.092 li
385.042 153.142 li
384.847 153.288 li
384.767 153.423 li
384.791 153.479 li
384.892 153.51 li
385.023 153.574 li
385.188 153.756 li
385.283 153.796 li
385.359 153.685 li
385.354 153.746 li
385.369 153.812 li
385.404 153.867 li
385.471 153.912 li
385.605 153.851 li
385.729 153.841 li
385.852 153.812 li
385.977 153.685 li
385.983 153.616 li
385.973 153.438 li
386.008 153.404 li
386.154 153.182 li
386.05 153.052 li
385.932 152.749 li
385.812 152.674 li
385.444 152.664 li
385.262 152.695 li
cp
391.114 149.606 mo
391.089 149.736 li
391.219 149.717 li
391.445 149.722 li
391.542 149.681 li
391.572 149.601 li
391.587 149.455 li
391.575 149.313 li
391.542 149.228 li
391.607 149.062 li
391.593 148.9 li
391.527 148.765 li
391.431 148.665 li
391.295 148.635 li
391.145 148.796 li
390.924 149.112 li
391.069 149.45 li
391.114 149.606 li
cp
386.073 152.296 mo
386.233 152.333 li
386.652 152.352 li
386.771 152.333 li
386.902 152.272 li
386.948 152.222 li
387.003 151.989 li
387.276 151.471 li
387.321 151.201 li
387.114 151.095 li
387.114 151.034 li
387.325 151.024 li
387.27 150.894 li
387.003 150.637 li
386.601 150.823 li
386.545 150.894 li
386.511 151 li
386.351 151.265 li
386.265 151.477 li
386.028 151.743 li
385.977 151.91 li
385.977 152.071 li
385.998 152.207 li
386.073 152.296 li
cp
388.916 149.781 mo
388.931 149.907 li
389.312 149.726 li
389.485 149.585 li
389.555 149.405 li
389.485 149.273 li
389.329 149.177 li
389.156 149.132 li
389.047 149.172 li
389.027 149.127 li
388.991 149.106 li
388.936 149.104 li
388.875 149.112 li
388.851 149.143 li
388.816 149.204 li
388.799 149.259 li
388.896 149.313 li
388.861 149.374 li
388.796 149.435 li
388.761 149.46 li
388.806 149.59 li
388.916 149.781 li
cp
372.777 141.359 mo
372.652 141.431 li
372.416 141.616 li
372.26 141.677 li
371.791 141.782 li
371.353 142.02 li
371.162 142.07 li
370.991 142.075 li
370.454 142.004 li
370.235 141.949 li
370.101 141.898 li
369.71 141.979 li
369.396 142.094 li
369.016 142.134 li
368.924 142.185 li
368.897 142.295 li
368.874 142.829 li
368.904 142.986 li
369.016 143.142 li
369.096 142.941 li
369.15 142.854 li
369.235 142.798 li
369.22 142.949 li
369.13 143.258 li
369.141 143.412 li
369.195 143.509 li
369.382 143.674 li
369.588 143.8 li
369.794 143.774 li
369.99 143.695 li
370.178 143.65 li
370.212 143.618 li
370.344 143.573 li
370.479 143.559 li
370.544 143.618 li
370.604 143.66 li
370.996 143.594 li
371.249 143.644 li
371.479 143.761 li
371.683 143.921 li
371.847 144.097 li
371.947 144.273 li
372.019 144.334 li
372.104 144.298 li
372.168 144.247 li
372.26 144.202 li
372.359 144.167 li
372.601 144.131 li
373.155 143.986 li
373.461 143.806 li
373.658 143.499 li
373.814 143.136 li
374.005 142.798 li
374.598 142.211 li
374.623 142.084 li
374.549 141.928 li
374.417 141.772 li
374.292 141.677 li
374.15 141.637 li
373.634 141.616 li
373.437 141.586 li
372.929 141.34 li
372.777 141.359 li
cp
367.379 125.82 mo
367.535 125.876 li
367.591 125.881 li
367.646 125.865 li
367.702 125.856 li
367.768 125.876 li
367.787 125.912 li
367.822 126.037 li
367.848 126.082 li
368.073 126.163 li
368.366 126.122 li
368.638 125.981 li
368.783 125.77 li
368.738 125.608 li
368.566 125.468 li
368.35 125.362 li
368.16 125.323 li
367.948 125.343 li
367.667 125.434 li
367.414 125.555 li
367.31 125.69 li
367.329 125.775 li
367.379 125.82 li
cp
367.576 142.386 mo
367.456 142.316 li
367.358 142.24 li
367.229 142.271 li
366.998 142.386 li
366.775 142.538 li
366.681 142.658 li
366.696 142.753 li
366.771 142.93 li
366.8 143.025 li
366.797 143.105 li
366.781 143.171 li
366.771 143.237 li
366.8 143.312 li
366.887 143.393 li
366.956 143.412 li
367.001 143.458 li
367.021 143.618 li
367.066 143.7 li
367.184 143.8 li
367.313 143.885 li
367.414 143.93 li
367.723 143.93 li
367.768 143.956 li
367.797 143.986 li
367.862 144.017 li
367.948 144.036 li
368.014 144.042 li
368.347 144.022 li
368.503 143.986 li
368.606 143.93 li
368.668 143.774 li
368.604 143.624 li
368.496 143.458 li
368.447 143.282 li
368.456 142.92 li
368.437 142.748 li
368.382 142.634 li
368.284 142.583 li
367.959 142.488 li
367.707 142.446 li
367.576 142.386 li
cp
368.583 126.118 mo
368.059 126.32 li
367.964 126.415 li
367.816 126.782 li
367.667 127.053 li
367.646 127.153 li
367.667 127.245 li
367.813 127.521 li
368.104 127.914 li
368.255 128.417 li
368.354 128.567 li
368.53 128.648 li
368.723 128.618 li
368.904 128.528 li
369.498 128.074 li
369.604 128.023 li
369.713 127.923 li
369.675 127.708 li
369.512 127.351 li
369.492 127.164 li
369.492 126.978 li
369.467 126.806 li
369.281 126.484 li
369.136 126.108 li
369.016 125.941 li
368.89 125.871 li
368.834 125.941 li
368.787 126.052 li
368.697 126.108 li
368.583 126.118 li
cp
363.451 145.546 mo
363.454 145.837 li
363.663 146.149 li
363.988 146.295 li
364.015 146.326 li
364.03 146.406 li
364.06 146.482 li
364.255 146.546 li
364.332 146.597 li
364.406 146.617 li
364.644 146.416 li
364.964 146.221 li
365.12 146.099 li
365.583 145.626 li
365.771 145.506 li
366.294 145.274 li
366.454 145.168 li
366.76 144.893 li
366.845 144.755 li
366.856 144.599 li
366.837 144.57 li
366.734 144.435 li
366.73 144.394 li
366.745 144.303 li
366.734 144.268 li
366.689 144.178 li
366.625 144.091 li
366.551 144.027 li
366.454 143.986 li
366.238 143.917 li
366.041 144.007 li
365.861 144.142 li
365.689 144.208 li
365.462 144.223 li
364.271 144.488 li
364.044 144.494 li
363.912 144.599 li
363.501 145.284 li
363.666 145.38 li
363.732 145.4 li
363.732 145.451 li
363.451 145.546 li
cp
373.703 144.273 mo
373.516 144.475 li
373.441 144.745 li
374.403 145.113 li
374.649 145.012 li
376.259 144.988 li
376.501 144.951 li
376.702 144.887 li
376.787 144.806 li
376.858 144.681 li
377.14 144.47 li
377.18 144.329 li
377.219 144.343 li
377.316 144.364 li
377.356 144.379 li
377.361 144.268 li
377.401 144.202 li
377.446 144.152 li
377.465 144.073 li
377.456 143.976 li
377.419 143.967 li
377.361 143.967 li
377.264 143.901 li
377.254 143.84 li
377.274 143.766 li
377.271 143.665 li
377.18 143.533 li
377.094 143.478 li
376.787 143.312 li
376.676 143.277 li
376.561 143.282 li
376.445 143.322 li
376.334 143.372 li
376.314 143.327 li
376.244 143.242 li
376.225 143.192 li
375.991 143.292 li
375.132 143.422 li
374.734 143.668 li
374.2 143.901 li
373.703 144.273 li
cp
368.638 140.43 mo
368.551 140.45 li
368.477 140.481 li
368.472 140.489 li
368.416 140.626 li
368.16 141.642 li
368.16 141.677 li
368.104 141.713 li
368.073 141.708 li
368.034 141.687 li
367.959 141.677 li
367.862 141.708 li
367.808 141.788 li
367.777 141.894 li
367.761 142.129 li
367.771 142.18 li
367.897 142.322 li
367.969 142.372 li
368.054 142.396 li
368.245 142.406 li
368.325 142.427 li
368.521 142.512 li
368.606 142.517 li
368.697 142.491 li
368.713 142.462 li
368.703 142.406 li
368.728 142.291 li
368.817 142.084 li
368.908 142.01 li
369.21 142.015 li
369.362 141.954 li
369.557 141.819 li
369.729 141.667 li
369.805 141.565 li
369.733 141.415 li
369.377 141.094 li
369.272 140.867 li
369.165 140.687 li
369.13 140.605 li
369.109 140.505 li
369.186 139.555 li
369.175 139.198 li
369.063 138.91 li
369.051 138.88 li
369.029 138.859 li
369.016 138.835 li
369.016 138.794 li
368.908 138.865 li
368.557 139.253 li
368.485 139.389 li
368.472 139.5 li
368.496 139.73 li
368.492 139.962 li
368.506 140.068 li
368.557 140.208 li
368.604 140.259 li
368.652 140.304 li
368.683 140.354 li
368.673 140.434 li
368.638 140.43 li
cp
369.543 139.529 mo
369.441 139.807 li
369.429 140.127 li
369.467 140.489 li
369.563 140.807 li
369.738 141.063 li
370.006 141.185 li
370.372 141.108 li
370.489 141.023 li
370.686 140.767 li
371.7 139.7 li
371.752 139.569 li
371.831 139.495 li
371.847 139.444 li
371.842 139.394 li
371.802 139.317 li
371.791 139.277 li
371.791 139.087 li
371.775 139.011 li
371.737 138.91 li
371.509 138.573 li
371.374 138.568 li
371.203 138.634 li
371.043 138.74 li
370.941 138.854 li
370.937 138.981 li
371.096 139.071 li
371.058 139.198 li
370.805 138.986 li
370.665 138.915 li
370.604 139 li
370.503 139.026 li
370.046 139.021 li
369.916 139.082 li
369.969 139.161 li
369.932 139.211 li
369.744 139.303 li
369.543 139.529 li
cp
370.252 136.995 mo
370.006 137.146 li
369.839 137.375 li
369.805 137.667 li
369.865 137.87 li
369.977 137.955 li
370.133 137.955 li
370.317 137.894 li
370.856 137.804 li
371.043 137.717 li
371.128 137.708 li
371.198 137.678 li
371.243 137.507 li
371.317 137.336 li
371.334 137.246 li
371.404 137.125 li
371.717 136.868 li
371.791 136.712 li
371.791 136.606 li
371.525 136.878 li
371.379 136.953 li
371.162 136.989 li
370.514 136.944 li
370.252 136.995 li
cp
372.014 136.119 mo
372.073 136.063 li
372.352 135.887 li
372.416 135.781 li
372.444 135.696 li
372.516 135.601 li
372.576 135.474 li
372.581 135.302 li
372.5 135.202 li
372.421 135.238 li
372.325 135.313 li
372.063 135.389 li
371.917 135.458 li
371.791 135.545 li
371.737 135.614 li
371.646 135.786 li
370.996 136.431 li
371.128 136.5 li
371.288 136.521 li
371.464 136.495 li
371.62 136.431 li
371.791 136.209 li
371.842 136.188 li
371.983 136.154 li
372.014 136.119 li
cp
371.665 140.817 mo
371.551 140.817 li
371.426 140.742 li
371.299 140.682 li
371.207 140.762 li
371.106 141.002 li
370.906 141.208 li
370.402 141.521 li
370.257 141.732 li
371.088 141.603 li
371.334 141.502 li
371.408 141.431 li
371.545 141.235 li
371.62 141.164 li
371.887 141.079 li
371.963 140.994 li
371.907 140.827 li
371.786 140.802 li
371.665 140.817 li
cp
546.983 316.421 mo
546.976 316.436 li
546.971 316.461 li
546.959 316.491 li
546.977 316.476 li
546.991 316.467 li
547.004 316.451 li
547.011 316.431 li
546.983 316.421 li
cp
543.141 316.773 mo
543.107 316.863 li
543.19 317.065 li
543.235 317.025 li
543.27 316.99 li
543.308 316.954 li
543.367 316.929 li
543.242 316.792 li
543.141 316.773 li
cp
420.914 339.828 mo
420.834 339.748 li
420.771 339.669 li
420.782 339.627 li
420.815 339.571 li
420.814 339.521 li
420.72 339.486 li
420.701 339.512 li
420.671 339.576 li
420.63 339.642 li
420.574 339.669 li
420.465 339.621 li
420.404 339.531 li
420.335 339.481 li
420.203 339.547 li
420.035 339.431 li
420.078 339.41 li
420.113 339.391 li
420.15 339.37 li
420.203 339.365 li
420.203 339.306 li
420.12 339.259 li
420.026 339.214 li
419.935 339.189 li
419.867 339.179 li
419.864 339.164 li
419.842 339.134 li
419.803 339.108 li
419.753 339.119 li
419.721 339.264 li
419.697 339.306 li
419.507 339.526 li
419.396 339.597 li
419.295 339.547 li
419.073 339.798 li
418.768 339.96 li
418.723 339.965 li
418.709 339.975 li
418.73 340.039 li
418.761 340.089 li
418.813 340.11 li
418.955 340.104 li
418.92 340.19 li
418.92 340.271 li
418.949 340.341 li
419.019 340.407 li
419.024 340.438 li
419.024 340.462 li
419.034 340.473 li
419.073 340.468 li
419.108 340.351 li
419.174 340.206 li
419.252 340.089 li
419.326 340.039 li
419.462 340.06 li
419.549 340.116 li
419.629 340.176 li
419.753 340.227 li
419.838 340.227 li
420.179 340.166 li
420.285 340.116 li
420.356 340.029 li
420.432 339.979 li
420.543 340.039 li
420.581 339.994 li
420.63 339.975 li
420.688 339.97 li
420.771 339.975 li
420.772 339.994 li
420.787 340.039 li
420.817 340.079 li
420.859 340.104 li
420.89 340.095 li
420.939 340.05 li
421.068 340.01 li
421.043 339.944 li
420.914 339.828 li
cp
383.854 369.107 mo
384.08 368.886 li
384.111 368.79 li
384.152 368.578 li
384.344 368.237 li
384.413 368.01 li
384.535 367.889 li
384.568 367.819 li
384.559 367.742 li
384.535 367.663 li
384.344 367.341 li
384.217 367.216 li
384.08 367.185 li
383.934 367.316 li
383.997 367.536 li
383.834 367.658 li
383.588 367.737 li
383.401 367.854 li
383.347 367.964 li
383.321 368.055 li
383.265 368.115 li
383.115 368.142 li
383.024 368.165 li
382.953 368.237 li
382.814 368.473 li
382.794 368.518 li
382.823 368.563 li
383.175 368.819 li
383.291 368.951 li
383.418 369.218 li
383.553 369.443 li
383.715 369.454 li
383.765 369.504 li
383.789 369.521 li
383.823 369.521 li
383.814 369.304 li
383.823 369.192 li
383.854 369.107 li
cp
385.389 378.756 mo
385.232 378.56 li
385.087 378.463 li
385.023 378.61 li
384.926 378.68 li
384.483 378.812 li
384.337 378.825 li
384.378 378.98 li
384.317 379.072 li
384.222 379.152 li
384.167 379.269 li
384.188 379.344 li
384.307 379.455 li
384.337 379.561 li
384.323 379.61 li
384.299 379.661 li
384.277 379.711 li
384.277 379.776 li
384.363 379.821 li
384.424 379.861 li
384.448 379.913 li
384.443 380.018 li
384.409 380.095 li
384.347 380.145 li
384.246 380.159 li
384.087 380.209 li
384.146 380.346 li
384.262 380.53 li
384.277 380.737 li
384.061 380.965 li
383.986 381.115 li
384.111 381.18 li
384 381.428 li
383.95 381.724 li
383.934 382.412 li
383.95 382.443 li
383.979 382.458 li
384.045 382.463 li
384.127 382.438 li
384.191 382.356 li
384.307 382.177 li
384.373 382.137 li
384.529 382.092 li
384.593 382.046 li
384.625 381.903 li
384.5 381.578 li
384.503 381.377 li
384.876 380.737 li
384.961 380.682 li
385.077 380.542 li
385.183 380.375 li
385.244 380.229 li
385.249 380.129 li
385.204 379.923 li
385.188 379.812 li
385.207 379.711 li
385.244 379.65 li
385.279 379.605 li
385.339 379.434 li
385.429 379.283 li
385.495 379.103 li
385.471 378.896 li
385.389 378.756 li
cp
392.98 353.782 mo
392.9 353.814 li
392.702 353.803 li
392.619 353.814 li
392.467 353.894 li
392.252 354.131 li
391.823 354.296 li
391.319 354.814 li
390.958 354.986 li
390.013 355.74 li
389.677 356.152 li
389.615 356.208 li
389.579 356.364 li
389.448 356.671 li
389.443 356.861 li
389.545 356.903 li
389.635 356.771 li
389.787 356.425 li
389.962 356.147 li
390.089 355.996 li
390.394 355.835 li
392.346 354.187 li
392.508 354.101 li
392.799 354.021 li
393.187 353.743 li
393.187 353.683 li
393.102 353.718 li
392.98 353.782 li
cp
402.768 347.288 mo
402.677 347.104 li
402.557 346.942 li
402.535 346.892 li
402.546 346.851 li
402.539 346.82 li
402.47 346.811 li
402.299 346.811 li
402.025 346.755 li
401.923 346.755 li
401.96 346.842 li
401.967 346.897 li
401.953 346.942 li
401.923 347.002 li
401.855 346.962 li
401.813 346.952 li
401.703 347.002 li
401.831 347.209 li
401.873 347.249 li
401.94 347.268 li
402.081 347.273 li
402.154 347.31 li
402.24 347.209 li
402.356 347.204 li
402.768 347.39 li
402.768 347.288 li
cp
411.696 346.631 mo
411.686 346.591 li
411.674 346.564 li
411.634 346.504 li
411.355 346.559 li
411.222 346.292 li
411.266 346.026 li
411.521 346.071 li
411.577 345.427 li
411.508 345.332 li
411.089 345.024 li
411.007 344.995 li
410.912 344.964 li
410.843 344.959 li
410.778 345.001 li
410.758 345.051 li
410.745 345.109 li
410.701 345.181 li
410.669 345.241 li
410.611 345.514 li
410.523 345.673 li
409.989 346.196 li
409.865 346.278 li
409.763 346.368 li
409.716 346.493 li
409.764 346.69 li
409.972 346.892 li
410.272 346.917 li
410.602 346.825 li
410.899 346.69 li
410.949 346.755 li
411.061 346.681 li
411.144 346.8 li
411.217 346.992 li
411.297 347.123 li
411.347 347.133 li
411.388 347.133 li
411.425 347.144 li
411.465 347.188 li
411.57 347.123 li
411.606 347.094 li
411.661 347.017 li
411.664 346.977 li
411.634 346.942 li
411.622 346.82 li
411.588 346.726 li
411.591 346.654 li
411.696 346.631 li
cp
466.357 251.163 mo
466.293 250.999 li
466.139 250.892 li
465.785 250.727 li
465.672 250.787 li
465.736 250.917 li
465.823 251.038 li
465.893 251.163 li
465.904 251.305 li
465.87 251.29 li
465.86 251.279 li
465.86 251.269 li
465.842 251.25 li
465.792 251.324 li
465.786 251.375 li
465.825 251.401 li
465.904 251.416 li
465.904 251.476 li
465.386 251.943 li
465.157 252.11 li
464.945 252.215 li
464.894 252.29 li
464.877 252.432 li
464.936 252.799 li
464.932 252.924 li
464.994 252.924 li
465.02 252.864 li
465.064 252.819 li
465.129 252.784 li
465.216 252.75 li
465.34 252.556 li
465.497 252.411 li
465.842 252.17 li
466.124 251.914 li
466.271 251.808 li
466.437 251.768 li
466.582 251.687 li
466.537 251.496 li
466.357 251.163 li
cp
464.023 255.63 mo
463.94 255.083 li
463.864 255.038 li
463.624 255.133 li
463.447 255.158 li
463.303 255.133 li
463.167 255.093 li
463.035 255.067 li
462.893 255.112 li
462.817 255.228 li
462.812 255.379 li
462.887 255.535 li
462.783 255.672 li
462.942 255.787 li
463.345 255.937 li
463.431 256.008 li
463.431 256.053 li
463.386 256.093 li
463.345 256.169 li
463.326 256.421 li
463.288 256.516 li
463.597 256.538 li
463.708 256.5 li
463.744 256.344 li
463.795 256.22 li
463.873 256.093 li
463.912 255.982 li
463.857 255.887 li
463.997 255.781 li
464.023 255.63 li
cp
level3{
gsave
clp
[5.22074e-11 504.254 -504.254 5.22074e-11 360.059 16.3333 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~mFVC=mFVC=mFVC=mFVC=mFVC=mFVC=mFM=<mFM=<mFM=<mFD7;m+).:m+).:m*u(9m*u(9m*l"8ldGh6
ld>b5ld5\4lHoS3l-KD1l-B>0kfj)-kfa#,kK3c)kK!W'kJmQ&k/@<#jhh&ujh^utjM(Zpj1PEmijo*i
iOAjfhmEFahQd+]h6-eYgoLJUgSk/QfqeZKfV/?Get)jAeX6C;e<L"6dZ=G/d>S&*c\DK#c%5oqb^BHk
b'3mda`.:\a(t_U`F])M_I*?D^f^X;^/G"3]1`2)\O?Ju[m'im[5\-dZSDL\YU]\RXX!lHWuV0?V\B+2
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.22074e-11 504.254 -504.254 5.22074e-11 360.059 16.3333 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~VPgAlWiN2%XKAY/YHY:;ZEpmE['d<M[^W`U\@K/]]">Vf]tV4q^VIY$_8=(,`5T^8`lH-@aN;QGai_cL
bKJ,Rbfn>VcHab^d*U1fdF$Cje'lgreC<%!e^`7%f@S[-f\"m1g=k<9gY:N=gt^`Ah;-rEhVR/Ii8ESQ
iSibTio8tXj5]1\jQ,C_jQ,C`jlPUdk2tggk2tggk2tghkND$kkND$lkih6okih6pl07HtlK[["lK[["
lK[["lg*m&lg*m&lg*m&lg*m&lg*m&m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**
~>
<~',DE'*$-4H,:+]c.P*2*0f(XE2`Wo]5!M>"6q'U;92&)W;H$Rr=BSj6?=72OA7fIgC2@a)DfKf>G'J:Y
H[L9lJ:W?+KnbD?MMmFQNfT9bPE_>uQ^F20S=Q7DTV8*TUSO``Vl6SoWiN5&Xfek2Yd(L>Za@-J[^WcV
\@K/]]=bei]tV4q^qmk(_SX1-_o0L4`Q#p<a2c6AaN;QHb0.uPbfn;Uc-FV\cd0qad*U.dd*U.edF$@i
daHRle'ldpeC<!teC<!te^`4#e^`4#e^`4#f%/F'f%/F'f%/F'f@SX+f@SX+f@SX+f@SX+f@SX+f@SX+
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: Roboto-Light Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Roboto-Light def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 46 /period putdup 67 /C putdup 70 /F putdup 77 /M putdup 86 /V putdup 97 /a putdup 99 /c putdup 101 /e putdup 103 /g putdup 104 /h putdup 105 /i putdup 109 /m putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 121 /y putdup 169 /copyright putdef/FontBBox {-744 -271 1146 1048} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings21 dict dup begin/.notdef <1C60D8A8C9B879BEDE> |-/space <1C60D8A8C9B879BEDE> |-/period <1C60D8A8C9B87DE052DAF2DBC128D720E2595608> |-/C <1C60D8A8C9B6747BB44878B23F86049CA257D46D48A1261C071844184873F7BA183ED0152D1D59A4ADDF6DE9D9DFB4EF8A18A1ED175E71E069D0EAA9FD842C798B44265C59E3C86183D506201A1F237BD0C8BC7F53538657CC18604B18157F7985DA2E347DDB6D500C686C53D4C51C131AE75D3F41B9DCF5BDA8378A172CBC4283CC7B961501DDC25D42B54111> |-/F <1C60D8A8C9B7FA137890F7F72C2AB1E2E52E8A73E44884901462C628970059482119B179DDADD1E1> |-/M <1C60D8A8C9B696EC04C08D17F96757A0750617AD912DAFAE38E30548A0467FB1B909B330834E35AC6DA3E862083FD4D7486CF6817357CD8D056F9A39932BC6021F7C238D3A> |-/V <1C60D8A8C9B7D2D01C90D387D361A2C35E8BCEA1D62F9C5E84DB3B209CD4B543787B3B8626FF1F78E852C3> |-/a <1C60D8A8C9B78181CF89FCCF642CFE9EA6860C048952730488D11972FFEF731BCAC8FFD7BD35754285A42F58217D37D3B5A5ADB70B00EB023D07E1621B4629DB39742A4BAF69B15C9A346F05A04C84874D31A2A6539DB37599170F61B3FA185D890E2CDC08F431CFDF3F9AB01C8CBB885E4E5678122366CDEEB66FC91C67F6A3A27EA9053126B807BC84791456CF37218760BF68E4DEEDACDF30140D613B9644A092713497283E70308303F32D20BF612686475E925A32DFBB4496F07B80580721198B9F5474F5372586E0A1A032> |-/c <1C60D8A8C9B7B577732738133CE9E5199706BFAF63B73D6D4D7F3719EEBB2794748FA303A3F18BE7DF65FD1FB9975A373A90990DCE0CD231BE178190FEF1D28ECE726723597E0E7EEB20DA677A3E87C53E008FEB0C9B62D537FBED4564E1B5AC7984271A65138F613D4F4AD7DA50A9A4A1C4D7D12C79A396682524361105ABE92A6984D9D989EC657FB2C3EE> |-/e <1C60D8A8C9B7B8EB25DECEDDB0EFF3948CD468921B6A30334F55EF106F35574F0FDE794219DDED2DA14EE9C51394D51873DDF8BCA064C45CF6A746C6C33986DFA6509FCBBF5B22B6C30F77255AED798DEC9143FB40D845056EFB7F355BCF768F1B59CCE415894890F4B50C82378998835AAF1B2361CFBD3E5D082308CC975D2E6566694B6A2DCB76AC8DDF3E8C1D65A1BFBB5B0DAA75F0> |-/g <1C60D8A8C9B7EE7C2F429DA4C282EF8AE244E3D23E25ED0A846D576A442E0FC75E8C646691153BD5D22818A1D6265B0370C36D905F70FA2F6F897933C24342FEB2DEDD20596B89FBB4C60608AEBB8B8A8DD892E5B706951F2AB6D35B267912219F3726B91D50739096F9D9AAAAC79C4FBDE14433110B66A47419C8ADEB595A2A843E14F14BEDFFD9CF6EF388A65E1950326BC85822229F5A393537F43D48159A388BEFEDAEE26A0898C64C6D9497C1E19BA41B0FFA521230778001C7113A4B620ED7063530131DC35A> |-/h <1C60D8A8C9B7EE7C19EBED65F02B761F1813C71640691DFA56D5D13D983CC70AD7F215039E1E190ADE282470089A084FE2297D5D2968BD7A532C5A03AFC6B18C8001194440D42077EAAE292E55EBFECAAE796B35396161B423> |-/i <1C60D8A8C9B88997F3B61BAB998BFD8FBD37E68D323462A94E3AF87651213078> |-/m <1C60D8A8C9B598EE5412DCE7BFF159EC67BFACAC413284E83E9CE6274754CC58E6CF3DA7C2D656EC74232675D4AD6AF7CC3F93C7302BCA64E337A5467C03413EC27A21D2ECEEC967FCDEA45BDA78B9A1424DE7A1FBA8D310A8A6113D38465F9C65E4597A53EFD492C85FE64CFB5EF84EB54139A9BCD96386DFACDAFBA1D54C71848E9612C9F415D47B81CE9ADAE71CF6C8A4B22F75D857FC81B0941E46F410B15FC55803875074> |-/o <1C60D8A8C9B7EE7C596447C564123A2E2BD67D1934DBBF29AFAEAAE04814BEF077BE3496F670F616A330629EA9C4677BBCA1C86B76B01830B2BDB3932F3A916103FE53FAF170DEC8E0DAFE3DBC54A604A64A4ACBB42989FE66B5FB794440662F252A670E5BF88802F0E8695AAA731B5AAFC10B3F2E73AF39DD63EAF3EB67D9AA95521F9ACF> |-/p <1C60D8A8C9B7EE7C16066AEB31BC1D50A6012C82270105001EFEF0953BF70FA5E6D6C7EA4CF9DEF7FFA56DFA2F419E2E4A770A84446E4BAD69EAB18044838F7ACC57A3677CC0D79AA3124B1C2389B869E561C5CCF35BCE41E3665EC5A9068073B9DD60DF7923346E5C5D5DAF17429AF75723C69FCC1B1758497AB2266C1403B830B9C8A0DC0495F7F1AAA745C6475187E59D> |-/r <1C60D8A8C9B816D2CD9E7E1576FC93ED2118319328882C00DD23034A7E3AD375EDE713635D86A03EE009D8725F2F46F79500FB77AFFBCB6A8328001773C9D52FF2B8FBDA351A94D866CF9B> |-/s <1C60D8A8C9B7BEB141370159723DAF4160B0EA53204AB4E1E50594107700AD6EF42AFEBC9AD448D66C53908F15A937AEC1FFFFC98C0567D9A356E6C355E54E05BBCEDB1DF03B48D4E730C25DE21DC37A1ACC3654BDDCD111B07A2E960E88F5C333CA44C870FC29C2EB2D3A50F540CDE4A47F53F1139D38B2903C30FA208EF9B4338054D6004AFFBE26898264263DB03CEDB6B68DDEC845C1E438A69222A3529384BC7F96133112B4C5CD7BFEC98EC85AAC13B2A92395F518973C7D0892453B5E> |-/t <1C60D8A8C9B81E5FA4B9BD6D27CEA1E2E3678A2B317013ED54F9E29FCD2F0531AD2610B6D6490B002F6DA07A5475C112424CA993CE2952471901CE529684D59B1EDF2E3477936F25D39E621A41D7BFE540FB933B03DB12F8BBB98D264D475A4703A4D0CE> |-/y <1C60D8A8C9B752AB6199BEE42C14215B0ABE7188848D65C43051962701F9A6317C00A5A63FE4868A0782B6276A2426FAB3497952B634FCEB04F921C29095186E785286D65A8251D2AB05D94AB47AB8E08223CC14469A9BEFDD795505ABFD9AFBD907851F> |-/copyright <1C60D8A8C9B6D24F7C03A9BBA01D6C0EA5E7D58BA86BBA2C5FC29CDC6271A8FFEBE42E796BCF3C17C7E9466EABD0FDBEEC0A2936B3CF4F23EC92CD48ACE06E864C396CCF84D70E27C21F425A4C66E4D8EB7965173FB9692064B0A0F8764238ED413A0C006457C7EF80A435820B31E0EB6ED41F912BC1468603D33F0F0160393498915C69397D8F038DDD4934BE34D72F66C94294E9C687DA88408AE45A41AA2D62F402154458AD8322E63740FB992D9E0908BA9095DB441A709BD5784A7900ABE5CBAF0DF98B39B287BD0CED19FBFE27B03763C6C5FDC7C86DBB6406A7C649BB7CA1025159A408262B1A4883DD61514C75BB2500D04D96E227D0448D588AB9F9CDCF8E836E76> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/DPHOKU+Roboto-Light /Roboto-Light findfont ct_VMDictPut/DPHOKU+Roboto-Light*1 [32{/.notdef}rp /space 13{/.notdef}rp /period 20{/.notdef}rp /C 2{/.notdef}rp /F 6{/.notdef}rp /M 8{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c /.notdef /e /.notdef /g /h /i 3{/.notdef}rp /m /.notdef /o /p /.notdef /r /s /t 4{/.notdef}rp /y 47{/.notdef}rp /copyright 86{/.notdef}rp]DPHOKU+Roboto-Light nfDPHOKU+Roboto-Light*1 [8 0 0 -8 0 0 ]msf583.709 527.832 mo(Copyright \251 Free Vector Maps.com)[5.20898 4.5332 4.49023 3.99365 2.80273 1.89648 4.53711 4.5332 2.73633 2.0249 6.47461 2.02539 4.5918 2.72852 4.20117 4.20068 2.02539 4.8418 4.20117 4.22461 2.6582 4.53271 2.80273 2.02539 7.01367 4.38086 4.5332 4.1543 1.98975 4.22461 4.5332 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
/DPHOKU+Roboto-Light*1 uf/DPHOKU+Roboto-Light uf/Roboto-Light ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 21.0.2%%For: (Ted Grajeda) ()%%Title: (BR-EPS-02-4001.eps)%%CreationDate: 3/22/17 4:36 PM%%Canvassize: 16383%AI9_DataStream%Gb!R&pO;DKdPcCTg]Q3K#%Kp',rq-ZNGWWp";,I5#rApMO)s]dWk)C?N:"%HIXg8Nc>2g\7Qd\GeQ(."eL_&^1]9nKhX36WrI6_X%$=&mo"AM5iKYn&^96^$Qo3B$gl+4Ruq644I8#'n8diXT.K@sUs?LY>MKI<&CS_NE$rsiX%Q.ijR8>4o["6jC3g)p(L-gbM]m!Dp)%$jN92>Q6i9k[]/uKH=q6#LJZs3tA.RrMobCEW:&@g.V:h%&sUcLg?%cOc4c!qTWG[d/#'0Pb:'1[X\.Z5HNAhclbJX<""]`YR<gQ%=r<@c$crl?S]PP-XGm$DdFr'@g8G0+e"AFB_:)8^K(B"#fWmk@fh8$pE=;_R[k\G^$,Uf@YH&9-$YBS2&[l#EV^6OLL2)6QfS/\V%h6DGJ!DQ[N@qdFJ0[!<6K5MC=i5SVn_mG#XLJ,,0VBNAE]r*8X"QS[iQJ=c[j3Z4d:k^EObfRDTb+piUr<Z5ui-$(LdWgZP"@c@H%J]+O0.H9?Z<8.N9'j'pT;mO_nGcq;DTL$hmTBEEbNB_&JcnOFX-Kru5lAo=#Oh#&446TY`/h)P#PQ[4_%fGY)(R-U26tI95K>rM%%dJs$kW><$o[GASVK*Q:jmLK&oVMF20qd5^S:[8S*S93QF<NhD)6+&\BkGS9igY"t$(1dlE$I,en7.`,[-s)-tGDth9R39O/K=2sF%SP?[CQ!Z/DZd'L<%btC$In`(bX,\)TR0E-d;X>fTd':85@6m9T9pDRfMdp0uX(>Ef$0NFe`F6C3mVRhf=eKX!qG]F+/SOa*W8e3=%pO>^4TD&m$4!)!s0n*,Lae&?^>Y1HOTZ);^T'^`ah]qo\!V,Q.girThrli!P-W#1G#Wr63-i#L]O51DteT$3O97kF`b71J?SP4ZM%(rDJ61-L<2a_]5([l^-Q11."T`bt?`h!W\JA5SKnP#ktH$7DfLD95DP4TnVqFPMA/Ppm.q?_PVXZ>u:(#*LSllM?CL?I:[7^<LBG%5+8oMe"c11aZcWiF5"?h[dVW;Gul>_FM^Ts;pmpOimH=-c)*QretI`!S#cY*PG>BEm,09]D@OQ:=e0XqmPp%=J8B0;8ouSsHF3i[%)NnZ_g?Qd`J+.60`]jcqVXAUX_tPGFK@aA&f,rW#7P^N1(.Xq<W"nfp!>sX1]/Q,jaoD?\Hcb\d*Y*RlPQ1"\lO=Z1CA1uGmoDoc%8I%INJdUG1ooFqk_ElcMJ+o,o5IF7_9=H$Lm96=g"h[_Bd+ig5F#TO$Qtj+b+*ZM[Gl!8<!g_C1!(T3k<,-;+bpO_fKMD@lTBr>3%o]jf"Ut_aGO<=X`WD`PCf1DU33!\d:^Y1(Y*n*6Chg'F*@>3$@IPU7g:J"KtIa][E/s'nV@DG2lT]P57g?I3d5\R<uH<./,>d&eP%!D(85raZ-U&kJmJ,+A8^Vn$@!^!>_"CCW@RkSMi<O6DZ='ff.==.^IVO],M)MCX06=8Yo9B508<-[hie7!'re+j)lKGTs3<80PK8%F,^YT>E`C"17WGJQ,sm8YhsNZPI1a^$^C6n6d;Bmnd(P=c/9I%jGO82WI1o#8!dU>pu6L_B)ST^jNPO&$mf7'b4iPHY_07(@!O_O%bJ+7!i'CqS;!4Kdkt,9@q_>'lhucW\HOWf0nLpN?+Y/?KCo(@Pai+bkeQ,Q15j-2T8uLN`1m0Pi0"CsRE-1B/)H_YNe2TqP#1_I'%ZIj;hQ!ck"bTsc/21uu#=W'JUImbq04.1.Oi,NM3+bUVqm9d?SFG$$U+E7Y)pndV`>O?W@P5N'N,<%VE?\#iQ0K6L^"O75H`-s`8%9]4=tYWj!Fp)<lpKUf=*24-/GhLF@-YZQ=+&(+d<gacbPf^iD_5'o,C8p_-J[Q7O-L2N);KTbt)rqGU(i*([63%`G'Hk3mJrkMSe%Vu+$=o1l,`)$UEAW]Oq4_KT;ep.Qu)6?dhS)`>Ld5="Q7QgE"&mGAKM*rXm@$(0iM$4$aEqn#(?pDW]"j9ZB[mqXMg]Am(1^0ZBi%=#HUO`[qIZ^f6B-$M_XjQ]^kZqg&+m$EOcFW4$KXb]#=P"j?jna/aR'F0?Va1O=^#Ir;Pk6hbB+W3t;K?:+en^T<E9.aT^>pmc_L%8J'+T"R\0$o7(IY?C=7L^r-2e[)!2qHdnT]]am-DKr*@?9>A8fr#H_((_$BF.-_U<l!'V)h\AufPBQV'[DYAJ)@:t#YV^'Th5Map%])ta3"A>l>^nhW6b*#i"M/0DH?&HZ)=tnFsX]dJOYo/L*om2lUX@Q&=Ddc*;$W2e:1N`tC[KF[%qkq<-_5/Z:@Obsirim/AEKmhn%;=a3U$gdjgZm4='W@^7U)J%>9[[$_SfT$"b(&mPQn%3U^A`:eIPqG$"]3kjN<l$=("hgQEP^GZec)58Ds1?u>K&N'?&4@$2HeX.%%i%p&M0Abm9.%hh"ju=,GqnRO62X*[e*1dUY_"fgg"ZKW3<.^-oYVk0sp&:$%"b"PS4I).'pR?JB4,`_B;!<G-LM88UVk%o6Y,o-R%E95Q&%*2[CKhKVQ)+.XU>RW4m/fQEu/hE$4fh=;cahpR=O]A]%<YLgk2<Zg%$n_o?RkBIKhK"?'r6*Ik;jT'=ZA"em/lc-p>rl3p%?)G-!G?Nq2iH!kn6"Tg+i0EL#?f&C%o#`KB;X)Wnd_3hk^B4$Lds&'bbF6!.\]aejV$$P#n&g$'AUjF]bQ59Sp'US4;28-Ri\aq7%X'(g]!gmOn1Gkt3R\Q]fp2aC<9U_gt3n$gZdVV.LB7ZBQ6T$\&s%L<c*"]>*Yu1mqWi;JbBu+A5b[lX3$I]jA^eA>p#Hfo-2"F_Q%1s<+F+N?Xd!gs5nbM-DaD:OBlCboIg2RDp,9lc#j0/tFd3a;m?k1FY3?Np[g-3EOO)?u:Xm\UH'TLI3C3t6Z?:M"L&'MhkR:K^Lo%/@qX7E$`Vf'M8hNM_l[Z.\_9)i`DADZIi&DZh&[qaY!!4VZ],)RD$,i9J=;-RGV7#i6s?oNqmhbO04$%(=tHLh*>G`]'TIX$@i]e%G8Ha^!qX2L?fp\iQj<WFl_b)L5J7,J?KD-u$HX??dP4Q_"-cXbV,YkH:t$C4:'O\L!=cJ&P>0D;e8-_=VA6!/)P;Yi.,t:.=970]%^a>FV)[o4IJGeBO"8WgZ&D&J9I:*@$1+=!+(,/[q!L<q$::1fES.MpuW#&Sl!bnl35R@&iN0e)[^f[;PdQt`L\A69t"^3NT[Bd<\%U9PjtB4D7&IjSD)>\F7;PecL7;,g6YG65/BTV@&"0Zj*W0L?FB?rH1/Q;S/=rY]hBFJ2[4FJ1(a(^7PR@WdmCJX[tM#c,H$Ls$R#%,qe=cVRutbs%iApZZE*p\s,XM?3obKDm0)2?3/q88eF%D\AY(D`T7je4Y@,PGi22SdtM$s2IRJF'@:.ff7=nJ^-:Nu\f9^UODdPt%$!KK02K?aIKge1HRuHbE\(9L2#a<QY4*P$+?R>d@&ml.hEUd%\Y8N9OOp>o*iG4Bob#EBNAOsoW!dn;E>R]jQA\Cb9V7k(B0&(U?%Q-TfaJ!f[[B.d]VdcW7Me"m7^Q2Q(Z?XKK(hct^m+TL>*!T1"4mJmK!F$P.n2pniDQ1%m+#nV&pr8C+$FB-@HJCtiS,nC,X7@=>o%s(MWNfmr(_2AQM##V:ue%.PX;Q5>;>pkN)&B$f0'IocKfpgmn-S*uP=:4oITAbq)CF&"7!9%+dbMo3+fN.1dXphbU<$3*b8XTacL%d9qQM#.J=F?25[/nt-EVX41i+nl=<"OW%1VqObVPfQ[:Tp=nP%n6!L$=2u<bP/k98h`^fIgk6jCqRrQ%Z=kq;##SuO,EOIa]7Z+o%.?n3P7F*]1SW7l$%"N]g9N)Z8`Po4#c,W>Cp]&u?@!WmRp(r*9Jt"]LrXKj_e)8--'!)1]HV&=gog"[Y&8VN%adh+9s"<`:jm-NI%1Ad4Y.FVa[FpG@b:aXqK3eNrQUJ^;Q;NP]G.T@<fC@?XUkVl\f<(?8D^R8O1h>Od<7e`J5:s_NT\MiiD<eeA@S%sjZpsQ;;5u$W$%D+#`G&c@glW\Qd>$;CN*4W"GoI.]n$hQ7nX92gJRdKP8s4biE\s)$)]r+sE]T0#7(n[/31*WDr)fm^+gBog$m\%gl$`3eQXro]4A%_@.9I@,u(`k5TIK`HiO09OdSMcb!9%s2%q=5<Fh]i;Of-,EU.Lj4<G4e^kT-6(F-cqVIC]S;AIP%AN>2-hkQXd_BYOeLq=mX\#aQ%9in,4QaQEW`uU4HlMPr#&%XiPglM_hqetEA0uWZ%e-aK`Kk]V$@VM^5;R.*j*oA\-e$_,ShAfbI*FrNQjAnZg8qUQ0=LB\`.`&Gh%(j.-5U2-TgP6Knh&m63j.P>-I)i@6%o`'#L)TG2lj:.-oKKrFBE.bQg<-i[iM97B@XO\OE`Pl##'ZM,!M<p+0R#48KEkqX\WKJeL%\FK'TW(4=>Mk!dQ<GZ1qgjlk)2(P,5P<7]9Gi\GE%G$j0Eu0ide$(XXS>)G$.J-+f)CtI$6j."6e"h/?0.LkD[aWCgh5fq(rK0Y(%rF\fXcSM028\t6:&*a;Y`ij6O"I]V1Q>'3e4N*YgN%<hW-fo!f;uG^_39[sZPDAWUP!2jqTLVS/%>-A'bmBs`3U[JtHZ9/O0gT>s%AK3gH;!h>=ojEd)ct^Cj>Q7Di4MK;)[*1@Lo4qNP>3h66e]u,39i>='<4Vu?+3oZ0a;t9A#'"6hX0kiBGM;(aJs_,aH50)MALkI/%.O.&!bGc1_PtJ9s%toPbmn^rJ:bOdPB5#5?kGKVo*Y'^uFpn3p[rY@`6UQWR1@6bSU8OaH@`jm`XjTLFmAKUjPUk:EMllP?&PYuM%4G/=m-OgSj7GcLKKh80eLNi+q7sKQ14T%<(jr7V1">X*DZn%p/A&B.KLC9%M[$P[,1NU87O5RaB\;bM-+"6n?kp7Apo@)!k(7=#o%#X!YAE6o\eOW3Q4a;p>%h-Zdc_Vas9P`@pEf)]XEFJr*(r:Il6SfNgj77XP5eOlafX8O.c[8)&K@Z!hF5=%D[g@'kV,&r>a'*%IN%1Ys%Ym@1Q4p&7U-fH4Z#s4lIf10t941ImL]TmcR^LPr6#_<WDHaZ,)Sjpd)A$EDj[$dn5cNP59D5?:!3hS"HR3#N5Riu^lE0OL?$%+E=0eBc@NXj#K#A/#.:u).Kba('oKBRI&1k;A[p(dKE^$cq\gHPWfMQ-f_qmeHM/9#4%Ffn%F2;*Ma_"9j_($+/onn<!L.^;7epS%<2Lo=d<n[uS`V.!a.kR3</,:op'Y&?f:c[,61rFd^)]HXVP#\fTg>%%^(E\C3[RI_@p+_dn%_@d'Z@GR/f$T9I+,6Z>EZfoT+a=G%jmt\,T.aTe=^;YnI+YSs`pP8NeupF#m;]UeR_MsTrT&TCpH8Q$EpNZn,>miha8N/COhN*]F6'*AEcjZTAh0L4>SqJc5E<H1;]F:$%UKXcY)Lp4O,XR.7W=0DK-Hn..)Y?Pe)'1?sj[_i^^X;%JUA)fsPTs;V>Y2E'9dCXd4.^tOh<(pj8,+[\n+NaR"!;8#ikI&t@it*t%lA!%Jihr)>\#YeQkQa.`?-ji>LA7d8Fglp;p>8e[rNaQHW*R$ek^Q=Xk`$8Kc=#;gIp,,#a[VJoP[/]7K;/R_?ME2J`g6_?l2N0Z%F.3p:."5B;]kR?Qg>UO6r^L7CeA"lTFC^:<!G?\e?['7d,FIRYX$?N+G'TLLl6c""Hs8X7OfLl!&\N+a_/(4EML+bH;S"<K5=U9T%q0gDr.L*e>UYYaC1GBQo2O`oLqMWmCLTE^X\O1<-T34%Q%n?rjA;s(McH[fc9!9U*Li95,PL6iT)`ft?Gi[i5Xg]Z`T4@Kb"b6Lh%,^Opcl;P[O]%]Tu[Jk%7P!?ABYP7K5IT.8.C>U]aqU?V:^/8Vh(k'kI,,e;OQ7O-q9a983dGM)"f_s):nd1lZC0qJnWiPf>Yf_oM%]_+E6aSe%+l3n=jkRLG1f"h+Z<l34_pjR[-^kDpeF5KbsIu)ik^@_J5WW4h\%p"/`F$iP#/a`^!0^XLqHnf'IH+-:$^S#BqE0.f%%P%j:W"W[f2'MEbQ]!]U.!Qt5BC69rr?j3t<-f#l(4$onOKDJAs5_:c=RBl?%>)X3PiKVi4["ThIVPWDGSejsKelV$k,-R=@LCJD)%A>/pDnLf:"3^JI:I&gq((&a0>>9(Bq0;k=[QIR(5Ip,?6Ip0'+Nng8Kgu#)If(&QnBWf=.iC)KB[@9=Oc7\b^Tf+VY5I/5Z[=rDR%J?O?!g".%P[AYE(I-98_c=mE:9?$Nkja/one9p'?IBSl;%3#,9^"JgMmL+Y:?8%04e?Se''W,?p*d?c+kkW=EV5WAXh05/%Cql;J%Wo@)RHnPLgpOiA'd8`Xurfg02DaS-1CXqlqpj:97gru(NgVcgMZm6,V;h4mVA;lLJ`o$>*a^i6hf!FKL6cN2+LEi.`pqP;gU`@(W%#JfZ^qtFWkLRl^dIDhetf>!rXP=$6?ip]g[MJq8EpoCHMbW=]a!_edmkM-LV:34It9Nt7Z\s,??[*9Ra73-U/_P'dS5B4u01,#?5%h-E11/06cTKh?U"P:8@aQV[7UZVY=[UP)[-K?MbV0f=..L""(lmGcrt<ES'A)>sC#^S+Kr2&?V%Y:YGpOe\a<fJZOr`IFe8cq6i%%%5/2k\60^/a)]m[C3JM^Hia6ug&%2%]2/B.D;fOlFoCqEKq#J-qNuc7*?O1[/c(j^mB&PL=QIE^qq<BGXO5(qIA%20-F/;IDl<!o%[g(VVGOT*&&DgbeUc74\*Jp(7pVZH43o"SB@Hi0J4XqiL,B_M[,qe4&\;@9Y[#fEc+8G@55K<;u],qWtWPC`YRF,3g+ap/k37'Hn%G,NXofuDLd^[.O$>5;o9=Xn7N-L$24ZF?uLP4A-cq-t*kj>6*?n2g-)YHD\*j;Me=iS<rkIjUHn1\F##QlesSLK[mL:d<KN.hA,l%la;'7n%YoUQ!oQTUNVidj*16$4qu<g>M\,&S<#oPs.q0aah);Da]j80kFh;.aq.[]]S(Zm]atIG!Bu*DXrT_/r8*aH9:In&`><c>%GWG/n7FI@0..,^aj&n_)ceR>`VD%7^X-n?UftdST'$ZL#=Dmk]-bnBM?/NsjZId=tApkosES&M26toh?&`aAdoaS[MqYlWFp7%8_%G2][HfQ$:>gYOsCN9*i2eC;NFc&1UY$>3%>RFM672u.oE*/a-DLR-jpmq=L_g.:nBm:Lbd#[?-*h*fO/m908^7NmuL4F;EN*]IP_%eU:8tk'D*[FZ;E1k,ZYE,^k'Lgjkf?Me1nn`C''tI^g.!B0*#PT';X$Wb!JH%6ZkU*NHAgk6][Kl/DtP53\t<P>Ecqa_Qn7ZoX/d%;VAHmg5[PHEfKjhT$*Xqm`nTWT?D^ULAq]78(Dit)</$M;Z5N*'[#5K+LAt%.("1T`dTOs\VdOS/VTp3[i_=:9kU#-SE:P7KZ6KQ%nC)D$d^PKkfhK*m99#Z?)^!$r[R7*hV:DKgd.0Zo/@;.jWhHX#Wk5i@1dUie2O45;A?YS9MWRS1d/*95+r%Xkb(M[UT<CWPa8B-i%;2n(5a_#lIUiap96L)X46i-@u-)=>>=NFb'4pnQSjl_`%^'mAPl;S9S"lg`4GnkW8D:S-G=_MI@`X;,$*Yh%hf/q5RWi*j'REbD0%./U7H'$@Bf=$hW4O&Y<c4Eq8T('i$Vj7jl?3iRd>6>(YMB]si/*JQ2Hl#s"IG\Vo7PhW7cp#Ks=FPG]oL[JMm>0tFPm?JE4^?@\6%?H_J#W-Wkp$Is&"/"oF\pE\8R=2ps.<TP@Qh7WUjoo"\*cq!Kc,;e9(%[KG:Q-%JF+EP-$RTWs&MR79)Q=AN1ALTeM^Fgt5Q)u?<%4m`Hj9BP!kd?8pd(0TAFlocugY#Vos;T$,-V/5J'ZrD962O4iF%Qd<2NsEY#@f=eY]'N\oQEJ6ZjeY$Bl?Q'IQBkiLTpMTj(Kt]m%*GS77/#],Q4Et$JSD/hGb'<<2/MEBD/'G!5?>DRTY21_M9C-%heaMj9F&e8QgYL"cH2D`bZ(/CQ]3ijS*>OnO8kNOfjQ:l'q>Bd"%=>%AU`0]qYUMJ%Kc<t@sEaBV9]?O5tq+Wr"$\XjnQeBs\BJnUN=Xrhs<n917c'?rQIVVC*3dt9f6W`(YkOIYDAbUE\>05pV[?UhW%*FCgdh3]^Z)l&shS&FIgb%(#=I&4-Zr34U/4`7C7^Q'WkKCOC7*86kJ"N'-JgU!)_CpNaO<mN8/0H6p"iU*u%h/GhtPf!="McTWF%GUFC^=c$,QDJ=J;IdXjuK^3Pn(4LUU4V&&A[I.e.?85L4hWkuYM:M$%eZb@J<]A@TLXf?c*=7C#pY#60lKR\_Dmd6hZ*Sb+Z!Ue=%-uEJ%l'`-`^"c=kFV9blXK@M#ibNNmH+RZn5:+mh0")hQ1<4fQmBB]mYFRoGm]G<P,D3De8aCK#_<tcJh35aC[IJTY&+&3-mS50n%BK3I5k-3+OcC6tWj9o2$O]/KAO`IY4)L6_3e0=R\_+CGd;-7A!3F7TGA_^HGR>mb-Xcnt)khbnZ&`*K.NM>TmpNlK*.!lVUm>$^s%mG0P)')h%Hk'B#]&R/&44tNnDVqf>hhLY42I\<mSlPHW#b5,E$I9m.;k]-R7rUd<Xm_:m&U=&+%9XFULZ)rYTC+T+Z1h():\PDMR%oQD(P/<.NO[o5@#)_YK#Jac.iAN@)j'b8PJ[c@=ANVoa%hC-rEb8YY$kP@[8<R5T*X7&";V-`s\*Y7_Zimq^(*D`;Ugr,78NILfZ%I+72[O#O!,pV^Vn5&&k(M-/p!1r34nSOBJ8J6!<'f9)Q@ouZo"U2kX(OQ[\W3m"3CI6/=]]W<IIqQcO5:(EkZ`QbZZ]Y?LR:4aUW%acH&VWY1/a[h\jVq-DZ0.g>$JI(l[e2fgoMog1U&*jhu&%jNHQYc=9`PNkmlg/8G3b,K^;[ktLmB)??3i;?adJ$d[n[^-auG5M)q%G+<updr*bNqc_f-=k^p<nsUWEQ$PJIU9AmoI(dtSXiuq,jK,0L\!*\+/DV#*5hJVfZS>s&gKHIpmUAi/mJ=uXE:6gs`^jGSRBcMZ%Z0C%G9BL[])`Fm_`Mcpt2\kpoA)1V[l^9nJX02c0O@ba?q6KY0Wgu\9I5lGOf(u/X/14US^j<HhI!f^8mqV;lIFqo97Whs?:5_()%p;+S\50daKqgNbTb\eN#hON\:8oli`ptWum?4WQaHu%J^F]UicmHonXp%I4\k%8$N"?(%6J+Ls&%5uu&SQm;M[;t'eD].7,_H&:u%2VKYDSkc`Z2b.Xfj,.l`X[JK"m8We]]m\b;*H"sFa6<4ej8O0K^3>q"fj1dOGKq\?g<Rn7b43d8aOGDmp5b!@41XY*mb..,iU4nf%.EqeZTKQE5MoW0mHb3q.VnM*JjF"./fZ<Fh#8JVO/FFlaBhMf+Pp50`Wnr.GUdNI(mqKK+cq`ciGKobSo;7Y!>H>+dCYS;r)<YJW%bo@7Y@HKSV^RQ/MCU$,aRlFX(ZYAf;2d72]O0Xc1rcN,?G#HXh`NrG0W0g-:So.`rgu.k4PY\IM[dtA`4ds-3%&NR_p$Q*omH/7b%fLiTB_O::M<N$\RU]&POFD'KigX#bPd5,HIs!_27h>`:"LBi]XS3=ra&)Rn8>P[*-mWtdV\5>HH4\SA@DhhC)[HukAZTgR0::.@&%?$A;P<%>AKN`t'&mW#&t0KS($J%e+$5hlBefcHbRm,?dBcARtpKMP3Ul1L7kou#Nu<"3-*m^=q)e+-LC4+5:gL!F..ZZVRGq1l9q%F8>1(]D\*I-;FqQ`S@eo'd&_g)o[m9qqAU3W[sbamQF=j?cLFPMpPC4Ea]d\9,C#E&e9RJ)DN#@N$Q`7b<>gK]"GJ8H^EQpX.rS@%?+h`T-SMNsk@/O0%P9i`b'&&K]6q=1.@-I`7eLN0G.i9gGrXZn\hBm4Y(l&?pM9AG8%h*'m@IWC<qC5gd7hXfKQ#;``mr>I*F?;p%2Kn]$m,7-q[MXp=h)=.dCNm&8($dLHFB-#$HI2$U:o3!Xhe\kMh3U&YqtJooo]/;TN7K)2p#bj5rOKN:(u;0F*jai!rSqC1Yko,\%8ur66:KqJ$eYfI+d`GG&gp*H1$<qs3L@-#,D/9+8-#n'mIlWIdek>D='mkoYLQg>+:OR_@IMgZd.u2Zqb$OB0VK/:i03'?Sk82[N%bOb>jFoD0L3aAjpf'Ka5FWap>NRW_es7ifrB,f+)qF+*rf"9NE;:dd*9_Wqt53$gl>F,fti1njOhV:jEmu<Rge2@3/=Y-\h1uCh%%:eSReD7.ZQh<S,)I5l$^O3t*'`RX*<]6AE"hWGh>Y8t?B*b4$861]'Yh-'-phlh*8l[AC`W-#K>(O"tZU:T0Wg[8r<[9`'@T=)O5%D_9tMp$un`A$;1tG5<.Y@ba1/cu8c_lL+@2;i8bNo?thJTH=O^"i;ATl`U&'F')Q`L@g-\9I6:5LG.uEr[8\&3<.=-(Y:9q=7Lgo%D!'fS1)d&Z<.()1XgGs>+<-e3cP9bYj%?Kb<IL'O_h]7'Bb1.&gYFM*23:f*R"(Z[OR8BiQ,2A`6>E(*nM'!?[!pC`OVVMgk\!dW%VKVEt9TgYQ!98"Q.N[X_3MLQ;*T:'.\\W:/%>luOE$W/N0_fk8m0-"F^G$0rl-U:M7Br6TQCo?pE+O^K`#"Kq$Jpo,7.=qZotnHg%.Q15mYPoe,kWm7=0Bh!Apk1]ElYPS&p3)LSq7i;1,7)P?ja/]Ri4+j@eD+GY$mgLj@&H?1Ic58br"?,TN?8fPiQEq%gV[?X'!'Km%Ge:UGOIZ^M\DN\IVEG8]HLH+43UoNj:!*N:>T:*V5Fh\>RC^T1;ts;Mi>GHgS=_2*dV[uXe^<jZ+lgbEs%H_tDRW><iYQ/II_3!@%.EfVPf@SbGHhVt9^g,/)Zi#Q*IouN3K39-nn;Q.B]-hef([b_R;Pcr"'EGnipCcRWfIiBdck(Y=lHHfa0+A,a"_I_VZfb0!<a39U%?1o;mqMhc?iOd7b/[m(_C9Q(RN4e0Oh[Ukmc*U7ap-nG!377Q0D".BJS94\+^2F7OH'U6ZgO\"^o02C1YA]F_G\30u=UN&q2pK,'%Chij^f4/e_s4>p7)g4EY#6S"p9r<D!,$tBNBYJD=++D-eLAWF"^,V$,Y?j0%bq!;_euUEBg@+^4C-u><R'-/_qL2Dm'lK_bR9u>H%h`:f7#Nm8mF9\?.o;C&?q+^sDS1W*<`LGP=%F':p^Ymc5*Td5EM)_TS]%_,0jc7ES.E?A17'fRuQrKsF=OS%&]eANs]OVmEaCMCV%I<??%caVJ[+)FO#LAbjubeML"5N.[4mX7=@3@1%7jmPkkT&?MbWCQ^CpC)p%54$h8=.6HF^EJ+8h`(<sjM*pPs8>P]baD`ds(i<'%59,+M@P+&]dP#dOJ,=WhGO8-/oh.CA]9;b5bt9/R\]T3c<+d]`ra&3$:@#dG0u*`L_Vu4ohi7Xp#P+Depr,8ai#?7s5MP:SVYJ#i%oq)2rWG:c7=!(o+2`keZQ.q9CIC0p<Uk\d&en26)3\#e@,&>kT,r&S3<sO#Z]U?@bh`Wjj2GYCG:/f&%bpqe^;`h'!`j2=tEc8MN%L9curH;:Q>[PnDceEC"-#/[@APL*,=*K;l"K8YrC[c*OXm@E':/s07OIVS/DIL#7C\O(Pi]&+UmhOZLBI=*9qm@T?cLS\u@[`asa%Kq,DgPBlJqh#tU*L2p7!=P8Sn1p$#$LW=KsS%/I/;*Wn!;el3Cn<DWH-+^A:7X.gem+32-0JTWt$F?1:4Pa,L=*D4/aL&t?Q?BCV%YiBj`=&VmY;VQP62nU3qngOCjI."o.l3D49KedZFD'`JF0DB]5DCbBO+RHa0@^UU.]SL*&`llqV3ioO)11qQ0\Bf=uaL[T.h<Uit%elJnRH,mO?/DiF$nWm0$=g<_KQ.O:So2.["$1G"8LU"lkqP:LpJc1Y,[Z4O;+O%9sT2Oo[D64c33Sd;2h8c)[ba..`lIB"[*K@4Q%D:Y.kh<7IZZ^jfk@"-YTSOe.Gc#g&Y/g%pc8N;tugg7_:D`Hkbk2l)`/allrrc;oQ])Jq5<L9>Vg>-'P#.2S)QZ5V=fF>IV+eNp6%mnji:U3U$/;:MN*dp02a]ik]\mYBF%_["Le$]tS/8p0CFT_mAZ@9_N(hrKhYH$1G4at(s/ZpPD\>:$_iS);S5Hd*R.ccsc/<rMFP%R:an50[s1JR%b<<arG[IGa`e@NU0moO_YM?L,-:U@Q!Sr)XO'/e^ER7>:eAs*e36$Q*lkcX'T'kkMb0rF>97FcS\>^O4;5!Aht"D%(jG'XcHLW9^X'ZnZ0R?gRk>IsD`9?&p)?YB27haY+kp+#JUtG:Q??@!:YW3K+5Pt!nRVU.OGh\N3H$1<\a76#NsCN"f\Uc4K+DX^%fp1&fH+]@o+,qY?LGm1U+!9Q3g^Z]WWY/u?0fokuoCqos;g[?Wb:/.cPYNF,rOQ:UJTRu3`%lc(H%)o.3U<;>3>#M:p0+3tE='YE%kL7i#Ier.s-&L<8%CTRNOiDAbX_a?m[HPd)2Xe^<44rWBE=7oZ5r@>*Qgab&8YRo(<)A+W5$F=O^5`hp!i>1b_U+UDfk)a!ZF4LL%QYGbl]:#:Do7P?]9\iA=q=mG0=YqGM]6g%WK[]&3H42@KY*7&!gq>B+/Q)B.p@#'e-r"#H[!h!,ZfI(k$dnRk<Zu,4CU)^of6AE#%*>a[7egTU#VNkT[i\_UDKR.UN6&k#iYClMlgUQ+bFF)R;FLcP+!`^5\]F"l=NW,>H=H-Mql,uP3%>m<NAm"Dq`N<\cO+f:OD84&l%@/g#r5alY*i:s:Q(K/MK>;YiQ\Z4&g8RI0eUKP1YoO[ilA&!0GgLS^/$N[UiIGR1d[PRB76+aA7Y=<oJrVgiNio^WL,sGh@.b.*S%ZL`&l?"rGmJg<k+<YN(-Q9II@?Xm;qUBXieg9R,D-_6$7l1HGTSiZ,feFl0d!@4l#?j0;+1[=r"-!ct(NTj@c#!3#S2`7[RY4C9:%lY#d+H`rh(=dP+[7'/X[V=iBc8fhP)X6sUr;L#[O*:9dgMHeol;`>oR4V-;<Q3`/AP_A&:%%>$a'r6nlFJ<(!diDau2NU?Y_^eAu%`s\1NcWt9=pObSkC_JOPbQYjipG,9]2Q_bDK'gf`On(QJl]p*H'(!k'FibS?RQ;&edkLTJYuB6L_.adl/ZNX@$<8h,,2))R7d6[L%?V.WaQ)6<@pmd)D2e=:t;ti6fHd/Z#Ns-ihVq9)bgsj1,cVDuAWVm>S@W!)P/%c9GCK`Y+KD7:HNZB%goHRAu[Cj8I&#k7mg&61g%GaI[?X-#>%qiQd?=T5K,j%HXBiY-60;c-]=/:%;Zr0^\LI&s,(OrZX50dC[X&Q@jLeRRMIkLeQDM'ne!<UA!(-L8(`AU:LV,+`Ni%8Fgl2AnH10.^_[)S4G;0PqB1pkFV5%6:qcAmSgNCcKal[Kih)TUmd!r/M_i51f$"/9FU`]GWNdF-2$ekfkRlbGF\Uk%-ftSF$K!e%Xf'@oa1XfSbq4RGhpD9/L6M&A>1l"e]Umts(..<n=N,5a[Tr4[/)[u!hGZAV=3YRYq'D<0]mm-SV9J*tR,deA_\p5D&\F`U#%Fjj%J;-+RCW<,rh"<`nN':"g\=%#'=\`8+7@\10Ed=9=55rXu#F'LRe!IaQ0i`N@<p9lu=.O1S7^9knRF6B6NkZA+o1tQCd0BqDY6XmW%7QHlF)d;#52l`9\1Ztq(&#R&UH:g[@B?D(MKg"-Y?g-Wr+s8_]f[f:$q@2kaIB)5VJ7A%to(;K-NVroS$+tEPrkAb7INp[8:[,V&%:4=EE&RM(WTlD%j&".'>hrj`JKOT-<_ZMUu=5eA^+5IuLaGlb]Bj0'eY/l1rBc0\e4Q_Y[C^h;=<\kPkL\8k[ph<Fi0U`>a!MB:p%#`8L44&4iHhlOtbD%Khmiro8.]`[T3F&GaLYDtp(5s)Vr:-8#H:r2t<bLjD(!;i/oCHdjS*sb[@s3D^.Mn/f\YRB`=Z&M>7)Vf1g%pBO>ka,+XNB=$-[HkE/jYAjrVT.Y7a0dtlU:huDE74iWsE^Z^,??^s'n&>l(^NTXkS8CED2PJ#A066cY&hr)Dk^M[m1^8NPH,K+c%A.o&tkKLQH':M,SKO*94G<6.,e'UjJbVFn>r+!UE`@<u7XY1L]]a8AK(3[8IQ`Q13jF_=":6%(Gk:'Lbm^d&*UQ`</qVnSuNNop>%E:]q7*qr_Nl[;Yo=&&sVcMjd+%d."2=uk4.s)cG8YU>Tfe8X'O1,_pHp8ENoAT-lLUV!VUE3b85\r23b6,o:&'QrGN'UkGBLZc%N%FWC,sP`:_l4&)t^INp^T3]\[j7lLi1=#U]JCt*g93aEL.0@<T(8#iJqX3\K/bscGkZP>!u@I\Eq8BuY7q,7@T+J(Y5Y.nupq^aIq%r%=o>oQR1<hpYnkV,q@7`&u7>qQ!DUNo+WUY9U!Z&.8+Mg%MAh0WPb7\5\LZ+5+1CIj<,1<I5=0Q!8",%dqM[LIa='3s7`s+aS>r%:*8AmFZtdHa(P'M^$BK*iJT6QSA(o^Z3SR#0oG]m]*Y&7i7YH+*HT\X?$-=C%aL9+:?#0*8kV<f3s&jIin9UqP^drg5="D$U!uTp%3T@/C/PkfMlEZ[/E5FWR25ckG-L]]q4q(T\#E%?VH@=3E:W^1.*L(0fDGFn_lZkGh>cbYiDmG'$V\.2*@`i37Lc?2YrbcQ?$]*s<%jja"\eS=NVgO@52f=-V/`VOj9I9DRrA?d65J$LiuC45;i<VV0OPKY%2S?/KlEChE`S[V7M3cC?d=%\15jjgtJ"8J/GfIIoOUI[4.%cAeb!j@M2GmiW:hdT0kSe6:4t!K61'-m)Z+%KH!RF#A3a4K#>``ac46':@ckLlG1;QQXC^3>%m/ZkcOL+8304(#JdZ);<QK7Urd<%G&[jAh+"u;]/s,%1pe,]1DU774nTm<^E^<r\'A_m`As)5pGr(FH*ki&k#ORYdD&c!17DshA/:d1]ArQAUjJ:@k*$K2O'jP"D/i'X%O595:ca)/LF0Zs408?/*E19'E@?OP254;<IV'LT)2hOA_2F&&%5m$]MR'E4!a2)r%F(.n8?nmMabFr19o\.X"QW?ckCnmBcm2ks;%aUl`*$=0oD)`XaTUm`oRk)WGFR=X8e(-UE4UkWl%Ji5WS[[ubs\VB^Ebhp%meN&(>Do8t<XS^=fl$f\C%NLrQ(=-9\O,qc86`9Vf%I8[A__t6A!ik22\jg=,SP2#bpCKug+7HUI6o_)\'OA.qs$e\MNnmH$!4\RrZp[hpXo_MeW\pRU/D!/gPhLHnY?:o(k\BU7$(qrgQ%noH;md&kc%JJ=ZaIWqUCc'thHHbXXUNU9pH#I(pigi)"o';^>Tb`=GPIf\!f[[OdFPUF2VGM1@hQaj-;l,>0FEt857fi"N1'jE>_%\pgG0HHgP?op]Ci=sr!DT3inF?,P!KKAn/#n2qWN2QDK/G'#$X"gWCIOm*X*c-Ps$Ylr8%q`T6t>A=<-S.Ps,XdmTmb!QI.PXa9&%JVU"ufDTY3FIX7%5EBlFr\1TB?l`?,Ro.tq\Lh>2Hhp]i7/VY^JVAq_mU?o3DVs0*B"k`pqn$8Q>RZDX*,P$=IcOM@<JVXGD_S\K%6lU-8F17br<1(V$!MJ60dFTU?gDk+eJ60,XQ7f0T*Q%0VpXJp)@+h`AdLCf?HIBi&A[HI'G-?jPg5I+\TV51H[mEL4dH?*^?FV=6%'i')NRb<=Zj,)t$B!%o3dV/aEi9i_`:H'JU>63"kgL!qm!UiToDP"ji=@p]:U#4;J)6rArns/-[a`h;)8mLe\'lC-n!CHIZjD/s,%1RC->Hq<7V5!!eE$e##[W^@_\_RkWk*8M_4\-&eW;l4'$<[a1D)jq*n(Td99g5F/!G[l*aNRXSP3'E'IR8.Da3Z#S-A^%W"=7]F'%Hd2#qM]*I_OR?(Qgm)!]bo.mVffpA;2MrT!kpa;A]O(Ke(M[M=?X$u8&BTT[KtMhZ0^ih***f(3TY/h=Y-(+Drl1hLciOa9'J+Dk%6'Db[I,e.Ah;i(b[2:Ue3W:&TmO>*nnHuX.81\L9&GFhl8SrYY;83W*?WlW/]gEP6aI_La='AF0];'^cC)k&nifJ=-(XY=':sP6k%jiqZ$cq:%L9..is7^>e3\o$TYpAS`a>Mns;j=#JJ<Nj!//U)9D$Y-o0qHMhTk`Qa=2L2Lgc<AC_g9(pS^*S==meoT9!.;JoZIP>P%_g0_c?dC$H-+o4G&t2(QIAfmIr9[CUOD9B/QR:hjcgo7-kTrE#*,l8EF/+:NZ@+30dp;G<>9VtLf-X-Dr1-u0#hb_m_/e%H1WFdT%cE=@BY&.r-H]W)-e<_l+>"WX=kg-g"j6\.2ZZs2$pg]$#C-K&uF9QQ[FV.QZNK4u[q>5A<EuTc(A]MHO0uB41e0oXTPWM(W60spo%K1,uEmb4;j>NM1Xrqp>A3P1JjRVZ\bA+J8a]-$?aLk=2B$JU9'O@IP[H)=0e,[n__,,dJ.NU<OCV&Z$HJ;ua'X\ujI%GpkfjZ,M!%DJn%k[IU1q=[15SibEc=pAVK*o.nTbZ[&)%m(#/+]KT%noPub,7e,>)fq=2k:UYl4)D'`Q:<%3[iiaQj?F;faCthXCcWZ[d5i3H;%R;/qAH$u7a"7O*7eh/;uVd.5ZdcE![4QW.*SpEJLO`t_U;O5Dcf,Ihd#0J?rCnD/a3Dj6dAo5/M>Akm)gDb@WRC'YIM"RmY@4\4T%SjW,bkN1b1%keI=<2Ps6*Zs<`C%Di1TZqTC@L3eTpL1+Cdsm#6248q%(\1>9SU\@j?%KhKh^ot#AQQj+2dp,i$BJQF?&4NMqY;%f%R[MW<Zu,IG04GcTcY'"+@,4%!XFW@7gum^AFu*X`k],MH\">UJl#L[Kc9@7=HTMcX7j,=q<bL1YC0BEpIAq+un)U(oGKW09oBN$R%*nHkL=&nH#fiG*ocQ.272fhX+U0Tl6(F$m;)s68[I\Z?Ns%FK(H'Y.`nY_eYQLj7g1=!7SO,h+DSJ'L/6ZVWl:'G-<?)c04>W22=%f=-`]D_H3=G`=h"W!n`tUJO=GG#-]fo"9*I4Lepk[oZQHMd$`F,)D\l(.Ut1Afog@-oCGWcdfAHjepus>%BZIZ2A=[!Nh8sJ.@i7%q:b6;<->T0=E1M7%kCEH#%D-,f`C6s'@5o`X#@s]cFfine?9(7oSUf4pMuSoKt-_]Q!EUrDj7LXC\gcYEtqE1F%3$F!q?qIq#*4$%:)9Drdbrds4s+jbo9aUVeN0Z$I,Ej1^PB6sq9(plFN3]6a%am/h277c;g^6r[Jt5.0[b\+^NW*f4t^.0kK:>2Vq.iZl,01lrLmVq%<u4BYk70HI%[Y=)oK2L9A("J8^+K93M9)*Ne6r9goZ'\r;EqWJ4,M<IIb6N'c-L]Jr+A1k[(QBVLjqC]moAoVG=28A>Sr<Uidc%%%4(,.=U<2EZq5cP=J*B0\YKh@,3;7:FT.?*7QKCq/qnC)jajTsu97#`)kC+I:Z2:$LX8[$bme*L8*KDe]iTgO>S[o22`N\2&4n@&u%gY['nL1FoolC>qCa$q9JH:kV0^YLpK;3'=:,mXT>HLL`^"?O7=:rNs$n=L?@JsI(g+)\ldFhh?8;h?CI5U9:-^#R^Yj5K<f?@]`n%Im!JUi%md8W<,]LH"$Jt5RF=,0:;\":TRY:&p<G?6VcQHe%ku-3k`H2Aua^kU1@F]ZGjS*/q,])TkTC!b:Y&VVD-ibAX`]f<>1C&%o3WSrl_]duD+tK)9F5GL:ildKBI]3Kb_dKL_4<L+J"QutcY3Pbp(+mg&BUd[V9(2GqSOq82#YuU>S^XbT&gJ_]M'97iA:FMb:H`%%5N%DKfg.u:_+6D-HP8B,ros]Ed**$5/.sF28eh4JLek%*Q%.PZmj(L:r$Y;*'50/qB0rEt@@EUH:c-u6C:98ORDV;2%&PBl6fFE-%K&&U6b[uUT0r>fi_`NNfAn_<%%#^>&#4Rab3rYYk*1b53j<u(Fkbc?S?"8P%$/:#8.V`1R`)MXRCZ,fN85(lI@iAHVJ_?b,(oAl=%bLUqX\n4Sr`t6/8<*bMX2[j".ZpJfKckXKL4i!@ZR)-Goi\/Le2BA9c&(mg29O\ph#W"&&'prT#[h(?3cpj%`%c_,[.Hg4+BF&Vu%ffdM4GYr(AZ7D5N3.tGCU<ACh$(C+LUM;8#/cL!i+>X1f<E5AS*QM%]Vek5.]_n:]@6hqD$(][U_jHiZP/S'&K8hr!78\?F=[LYU%M_Glqi<M(N\kAdU,W&.fM4%b;l>TGI4?B$iqJ7l\B#<,4MJWo(<RM1.&maI`UQ@aq$0IVdUpCc#0M>DV]3qN20Ykn9T.jQ9&B[(#%VBWX(?U.48=COa=A;n"5cl0tHS".cG*-Ju>VJU^41db_=f'J'!1+"^*['2S!7]iUuQ5g!VK+fru/B;QsB,m+f"jF7X179^;7lO/Z%1e!?F0pNPT/1.E=*0NN.B&ZTMnZo/Y`L%f&>EtQ_F3**44\jBV@8hpG]#-8?cm>7!KbF5ugWo.r=K$,;PV\:pR0&[J5d6QBKW0tY%0gfRn"#5rU/:I`dW\+n>imVQj6;Qe+h9uL/8jP9*T^(a>,:[F0@Q(G*0gfr:%>\.@.`-9[*/Nhl"*kY!rYdr?%+PoVVL_T2$r)A)%R)oVS5YhMp!a@Yhm#dY=K2EXkj=OY\`DeCX0ZIXG$M"uVa"h4KMSbG`J""7t5,\gt-A:WXa7pmaR\2G^A:Z>peN'q2AVrsnChXO"%h^q2(UmXeJ_;?2#$q;EpkU5g>kaF(XY[)o"ptK6t1XTMPVJ?ri7<&qMVue[WXJ@-rS!b2XVl!&p"Io"Ml$RJ<%)io8;dg`eFAA_a%A.tpO9?`HsE7KQSBXiR9#3JR%=],!b_'17^@=r=></4.:%O%\mJ&GkOKib0F[\sKIjI+IGMO[mFA\?1n:9qYTL@!A%@\#q:1RQ-)%Z"tY>O683!5&H=J9M-N]\V-r^l%th&cSY_ETKs.5Xm@cp=lYmO)]iUi]Z8_?PDZ'$Q4uidBr^*_j%6^s3Lg2;+j6=7_TV6>'72)7%PgiW="e5d/1$XmtWjIig#*9[p_e=RNR:q6O4[MgY@O.il0uN'8;@U[aFD&&FJ/QQC,%E^?%F)0FGtcUZ@n%4JnD6%Iq1K'r6?=Ic%+UP0c>q*]c?(E!i=.=q1JUhQNK,!.-%G7[50S;%?JAJ%^o0mdV_ntk.aPrq&9fn7s-pb][j$7Ha:h,[)WbLssbY]XV#62n(TRk3!%P%H_O,;=%BRHbNXSSKYX3f,(rQOU!M$<kp?R"Ck39XVuM,A&AQK8>*3'c;0>l9(V']LPX=[6Y3A!?_F1U5jk"E-DL@MjmJ[8A>c.%Wl#oTZjBW011:H>Pm$nKGKhDilej12\OB$<+>"j4V.Ol@=#`T#.72tl8i";g3LR&?h@YLn'JT+;6s0VX!lPdp>X]=;_4/t3gD$#d%>J(Eo11e)YZVgHj9ob1946W7+[2(J;I2Bh$-M^659[$FXM=FRS0uoD=[Rc#NF"E*qTe\>W[jE!_),/(q6XXGqOj;N7;;\H[GS4M]%Es=a()&QFsc+AXk=+Q`ION\jP*f36$GngCUAW!2#-(D)J>bp<u,GpS^O-j>`3q13bJa'bE:TP^m=Vf'!,nh+*9P+!'mQqZtiC5M4%.N\l6C']BsCIlO$^^r5>0k=?.Z=/EK!6fOR!KUjH/4hZsr'TLV%5H\)AYE$`@Gi-*T.j!+AK_99Qtk<[b6IsE-Xlic,Pf=9Za6([%@E:VG>l[TZN>s^j'[n!?XbD:ffb8cg^qCo8:aDP+<!$ZW>uhCkPQ3GF<2(d>H$*ZWrBgZ\6SCf+7k6W.'H88$NZ7gM@)F/%ok%8O%7gCbE1?]rN!kKppU.kbaZadP39LgZi/\X^"crk`R',YHk@>6+U7S8]&PZd2RRN$pI-@#`;cQJ/ae+k1J!K9^A'Mk8e9U@js0ig[N%enRcg3p9$WAf@sTC^eAG=W8J.^sH%@bqLK"0W)tWD7&o@gif(%-P*jO:H-BS`gJT!!NENIMooIs>et../S0h0b.u.kV:O"HP6>'\%U3i?i.591QZ[si75QrlqdK!l>>jukAmfZ,V6V>Fe*.ss<6@i,`#@TS=YKqAC=k9ekDQd#.pZe6Q@8lKH()e)k/VOG]>p91YDQ+E$%TR*ohA^`uT;^1.P'B5K)*<S@@XQb*LWm5C$*6"*Anu"$u=">s5<XH)I:BX@\&Z1t^4^V7Afj).n7%93QKDW\)ArEPWc:<U!XZ<FG%=Ou%d<P`>_0n\^gV8u&7ZTKOg&9gaOHZHV5#c_>N#%,l!W?o.YR#%REdf`#eW99Pf$q?Us'O\2?AK<MSQ<dNFF[2=]@86NDIa6sr%Bl5Y1j?AN^l_a+>=d,^\'@$nn\g=s^M[mjZS.4\R_jeF`&!`p/1b2+X-!!oSMMVN?0V@U7<.iY^dk!1:=@It_K\=iX?t*,+^@U4+%@]GMnEqeb\TYn(k=m>XS!=cqNb]>2Bh!etW0UuR)1nIt"'Q+0fdWM.CeAP/i,Gn@)PU;%l&WRN:n=kY+(4h?p1J*tUh)iJ-$77gg%QLus?9Gjso-V+ft*008-Q_`TdGT5@apF'Y6h;a>+`$jf%oeB\%VsC5DMTl:"Tp&8_VCnq0l!1#oNpIgsA":iO*EaEE(D-c8/%_^J%$>0b>IBF%M-0I#'ODUqb_D051j_Q?<*uqUU8ci%;cn3+NQ04K5LI\b*Bfsp5Qs]rnN$C("0-S>[?4/L1E[0_F9OQf2En9!R,0Nk&%Onte.f`o>j_*8FF.%e;o5aV.p'.$%6d3Y>Q3F3fr!E1\76NX6#*4'p$K,BYl&CEn,Km,hMO<9?/"f,(#_;X^TX:1F&`)K_p@&k3D%ZYbi%YedhGp'*3@A@)>hcQ#l\F:tp)HpANEEB)B'e%efB&0jt9?t@^tisYE/-DFGWFG&0mN1.d8:8c2l-rQsd7<jh0cceE)$4=eB%g+3UOT$j6>'tSW>+.?[fZ9$I=D8@]-%YJK(@#JW1Ief[L733H19XeUg9mFBOeq5e`FAFfGR`g=k9L^JZMAVT#V&<@1[G`;%F;,!h%kY5TF.5B/Q87=dm]biA#MUY2C(Ad6.mq/^d*Y?W*9:J(tBiE5tN#A<Ub]^L(#cF4E29$VhR6:4t5<@*.j9hN20VRE^BhGPP)L6&r%JM45e/&3eI,?]b=%q,fWIPm(9aTj+#dh/%GEBD&m9fE5f9ehAOEXe4PA.fL'E?-6^07&;6BgU#fdmRaVNFSD$Mp?Kag2Y-]C&!?j%q_#oCP=l`;&!CF9T+KJnq]lT]6',R1*Z5V[q/-=DNiIr1jOp#W`Ii?N$rIco<Aq[[L<n]I*)-g)IqDN4),kCCU1eXATHdD%KJ3M'%A&P1`LFss/Q&&"m*\h>taE1TC&Y]\mmb$a:OTPUL5%PuOKC5*.1E\.p9KElR_D;CPBhXc19KB%"@_-N]!Rl2JK]1"t)&UsJ,e-)A%_m##%AYpFa_Z^K(n1s)JBQ')\bgcbL#P=-JVXS+G@CXELN3Y937r'5U%M,Z'Gs#ZP`m[M`g@,iYb:tiBLcIM?<7/04_2NnqPM:eI%)$0jm?]u$(gk=oSduKfpR[d+h8K,Nd%gashj),rJBS$eJe^Ba#!L@4e+p7X,(fOuJ3a-8JBM4/iFU:q\3?Pc392->)S2:pKKFH=k%F).K@7_Q3TAdl5*+[-tsGPY0cco4B?RG;j-3J3-I0X5IfieT\1KNW>I.!2,VHrIutK":/kmrXt55d<ShKP!mM`^#DMR).i?bg,Kq%^:=K,&&9_81u6#8@r@NY@]4h93b*5iBi@\[/Aa[J4cE6d&CYSg%Pb7/Pg1"h+q)jVRQZ^/HA]ip;CQ=8JKW!t>Ymtc1ec"oZ[Bc/%\]4meG3YWq8aXk5SR^SlaKf-Q[-'-n>tPTr\i3-b=U<nJBu.:kRA]WC+o`P01s\M",IQ4CFcd#GRb+EJF!1Od8ii5O]I4Xoc4X&N%V.,>HSXW#cG*t]*]0S%q)!W_>["X='lB(I"(^;3u%W!3b+iG5,Uo%fDCI9E-L;YTWTiEDVUrsgBr/gjiTejurV$WXRL_4,6j+sEF%P7p^'Utf/>Op`&nA7:NVa0VV.aW^.cUe.=e#/j3SoZSY:dtC;)Grh_ibp\,l'!jGR1MmKnRV*d6oi<6Z1-%F1:N=Bbi4@ihQr[,'%%#rrsPT(Uj<S8c(3/E-^Q*#)K_sLa$lU,1"-W0!I7Y.7QVH-\G[#/AaiB*JQLJPNELdCq_j[X!il>7m+9ZYq(f`4slL<AbU*#hmq%)%n1oKk$_JX%`$,Q:A`"2WqM#P.uh;K$LYNas>ZW'GSfL_g+-nd8NoO+\K,O%)_@&gGOM,D?J[5_8`;kKT-AJj$B\&/*f*qA`QBa%4E1FaaqVR=l_`ck_F/8T0nn*[49V.s2.3eE''<l55)N.7/C/,eMu9`Gg+YlDHk<KW`UajuWF?DS#bo<&jRs3qN-l_jb=N>;@WG/<%Nj1ci>7b;1/_d*n,#%%"'_^2/H$rAK&8a?MA3.:R0Nrr4ZS[Nd3<[8/gQEE6DAZiOA10md<0k.fLfl2f3gL3B#X_%KCY."Q0Hd<Z%9W!%90cm,8jD[?-o$WI*cPUZ?2Pjj2-/XDP:;UX!c?F8mKnNEHph]9-5-m#-o>b>ADCC3+BR5!?,o/RQ9(Abl!b>b_?(,5&phE]#%*58oqjER`1MV/]^.+9\#S,<uI(6LUF%+B?Jr<H#@7oP%o)!VU!(tFaY:bY>ac&Udlgmc4#b4pX($<-n.-T[jEiVLZLdMndT(q),s%9I,"^Jo]>CaGDda^P.Fm4@J4f!k=])2Nt=5BO<UHhl9GV]ddf-MHJS#&rA<+,QP/.VC/[Z4qM>I-C?+7E1):WA;mDbQ7h:MjBL>D%_T3libgaSR,u4:ZVO7KAGS3Pkk]!=E0ZmN@k1Clj_+dX%?/-A7-Ct5_GdB.M$P7/[,GqK0LLE_K(f*gK7d4I%FB+REo3IC?Z7Zn=%Mk=NFN09>DUP"2PRA.k?<5Ws/9P5DY8rTD*,`J]`B9fXBqC#uOQja#bC`)2SEXNO8b\\O.Nh1()0I[K@4BWp`eTNpl,?S<b1RQ2'%nc@l4Z@<d=LPVq,,MT%N-\uKJf7mn"l!k$.+Ju5Lgs+iGJqa[ge!i0K)iSE43(@Ng&[O=QKKoj@n.mS*'*;'W.P#>H`C*B,O=$?M%S)&fJaE14,E8@AUA7Q.:Ah_)<76%_&&-%J]`)J)XKP;!`LlNW6dfiNh?$PN:5FjXKc["'.Y3hkj-8e22)5RHAUJBfd20[aCHnqH8%0Uo7:N:]H7F)o,MiiuQ'N6Vsl#n-tT1"5*N5_tg<V__=WQ3A"G#Qt&]Ja'POlS;+kOMTBPGWJrj:!fI[<@:gHgk+%$D3i/s7lhWh%n52.Pf-A()Rqoa`@fnhqb1CWHal2Y(5Af]t"rrkpa!Y)1TAdFD>WX?r`A-+$\G!f+1Pn]*1h9B!5O:q.`haaBj"h,"A>\<oe3DE'%ZOu6CK#q*i\[#,V)2c&DbM!jFX:Wi?"RCk[<k*?uZ9ts1LWaXs29?UTUG-t.(bs"f4`MJ#C#L3T@;k6+)'2,14gCgWAb#sW@2@a$%7&dE/BMFbi+]*InS^WuN59is1cYui"VV0lT$`+t%Jg_#B+Z^BmR-?Ts'4s50Kiq^OHcRU&L5Itk<BA2.m[>?>Ch;o,@5^G@.5dqH%Bqrd>9UpAoN+$Cric09;qN3ln!Z8m^ZXfA93*pG?-SqWK1rU4[*r.Q;7[h=moLVP<a,C.l2q0^'M+>PHVe!IeSmjU,ISlA'2]\fn%ZBj\K?uh:aIF4GSO*HnAR#"A^G=)V"H7/FVOcK>f'lskj2O\uG@.A6L(=4KrQAB).'Z8a0Y9UOe+J_VR(48DPjV)7+bk(&fGSX#J%Lnd+O9/ZK\o"e4M*&6ZfF@mr71eU:G$s!Uskd`[ORkmd_M9](t/=s>GL]@qcF9rWHXQ=;_1Q-0?P&&@UW.U+b&LPeZ0h-p&^$:9%%^^-F("QhKO,-ZV09%))k04LAl-J:6.;4&R;M8e4W1+CO(`g:`#nSG!Q]Du0+I[aBYnA)4c?_(Gsd73\C/RVNSl:CA2T"SR".i4;g%5U*!qB0f-BG+ONo<:Q?Rg,`T%<QC6%VQ2a2X/^om$ru"KaT7<8a#q?m?6<<%JP!"h[aY[T9ftZeko><W._qG1Ko2nUQP2m/4#T=Y%_!SNG!@ZZ,'4+f)l^j[*fdLr09[E0.`+ZtMR0a443,8%DPl/f=@T#VYR"rJ!`asjBl;NITQ&DE_[sc@Jf`mdf6^9dr;7e]nr>:*+%q(tfO6F3]O=!F746Y/\:ba""0Y&FQ17[OZ?';RZERMQakQpt'kpZi,A4T2&>SZPZN^;5"H`9^s9PjAG"4kl$(2.<(*jVn87&&c:&%j;"tV0[$ff'F%DJWmBbiHsiD5$q_ZeU/,9@MPUk?Fk-'$8(]Yu<id7-Ij*%A1qu!_B$RMF`\^-uRXphB**`?V4`s254O]#\:EA"[%anFC*oC&;rBc)RJ1>b;.JY[5E7hb\E'JWn]D.q]TRq@.<`fVWp]KIn'e@;$s6.D*4U6mXnPgP5=.af:T(Ca'KEpj94+/V`BdO$7d%3_WQ9(KEm9M%2tF/qTTc;n`*_,;dE,^ef8,Mh]*5PN6C<=!O+E`l6$hE]%/KD2VAQ.cNt/BTo/_qqs?JVLFuO1S$pH3o4%sLJ"L/%0/4WiMXNI&197OVN\!5`?pTk(>G<S00k8!R&MAYd_st%n_ItWP3'_]mI"TdYXi8D6)4Ms2WO\iaATChZ/8hS4e'#F&hTrr/@#EbO%nY;FZ(+4tF1DICE@N,*@Z;Xu-416M$_Nl+hm7#827892Sp0,gb0E3Ve,Rfb6835M3r?=_*o5'`\&,>opQ-BsMb_&;Ie`;HZ@#TI3%FC8QII8'\/TPceQ\?Npf'l"t[D=mSAp)q'n+m)XZ).m:G:]d7FOUAp+/T![9VBS?0EPd[QOU5#GptJYp3O@(N\%%r2ifkg&D_s*&%_XJ_6@<3Zd=K8II:jJX/dj0N/kDZ5kUpSnSGdQ\;Y1p9`7[M:<B"3!*@>F=O@*6ZT4/T?=CjHZBVU"1hI*1hu3Mb,MVgoh'o$%8B%,u7!mn);XZ"#fBc#c9*/$8>2,(H!6%XT4F+dOb4V!L[B7Cs?`^29Fst@p.[3%:DpN5pm0:@G]EFF;>B+Yfkfa.f?\FJa'$\0QA9M%NKSg.d=fcN$\Xr->cGsm,jMZ[cJdLTblbfk`@L81-A:k3`8aTT?fSP/EM#Sf,&5kufmEr6C<.I6'#66KDctuAr(JJuM+n8'!E@JB%$!tXGfarcNOuL\)HA.^lctmfPEAhIo*(A521d==f$6j##B+*T-,p*ZT`"^rVpl6^C9%W=`<_(Tc3EJCh&#43b1amW-hiBL37b\P[%%Q<]#Wj3'rBgZ>R1(_pK:jQLBR2Z:)'0_)o`46;+=iPZ@8=W'`g*W<5Gb9+GZAQrio!.GbXJ4C\cglc'H67i\3lM\dpcZiaYA4c*%Fq%U>kd&mpR@M"!,S";T2eH_fh\#<sP!C^=g`0>VAb"E?/hrJC7"saJL830)!)sne_iQ!6P:c8P(GT,BSU;0*kY05Sl+YjST,j1%%8G"s,cGKd\65r63(RYb'S4f`>lWsYt2`eHScZK@44(NSMs&?G#)J#LTF-Y@T8=*kef%:s`pqYs.iB04#n+tBM*@,p?f>HM=_=o*D%n5Mp'SO1OE?*QL#\R;30@`_R5I!%h7;n^d\/4ou;gf`Kl%ce*DjINEN_l!bXo$"akQ\[>Xer['UOE;DPlj1j!@H(9C4TA2--G9Ro%)BPc6ZDQSh9Q\8J)?ZOm+ACD"pC8Sa6BRP:S7"h5jRoJr:P*Msd5IFfa`KNQgD"/h[365pVLN^IKeV8K.[%g+Kh0P=)LOW*0Lre:%`q\kQ1`NH-lP.7qF>>@up$!r-9G%ESHY:2@K(4sSV=RH8l/(_CZ_B4':E4FukdKM5/R\@c"OS)[JlH_F=;S5&@e*nXScL$',e>Gm%@UoNLl"*f7L0@$5-Jf@opab.4X>lqin@TOM'#QkX0?PQai\*\ELA>j&1&_q"O5n<gR<%]Xi=kl$pB13&VaO%]A9*H+eq]7jnjjf(%2Yc#<69ICl'IYSkr'aPc:Z4b$&X*dnSl/Dr'.\\a"eRJ$jJEVBM?6fD'1<()E)q*O[`Zo'fXP#Gf^mWJSY&@DNu$;@M5cFi735Du%825@M/X(GnKWfiDSIgS.FZp&["Fp:c+g,\7WZpVqkJ_79ISU+o%k08#16Y:\1:_r4#(]9(%F->HnfOnWT+ZE#hq@`,']3a!kY*F'%&2M>0d+\X"D+@6bQ-FV;f(jZE>YB/fg[r&e261DV_!$#!d;]Oc(i:X.'9"rXQqrn8olu1+J]1<^/MjCc%H&ts62dZ*OsUA%Q8HPl%NZ2G/$bo)^N61^/)o*;>XTW)CZfJ9fa_)82)o^Ppjh$ODVg1@i'L,I,2NumK_I0@Q_'f!RW!HifjMW'BFC>K>Tg%M?'I0KCiZsfE%]<Um+*CJD5]4\^WGkjJW:*cU.M"gW=VBa)I[eC76<VHI`oj1.sm')YO.q?C%C9i5sY)NCqY>YG?>'o]7lc:Ch78\RHM6^*EX$duZ%<I7?j]f@cQahUMX1A:kA'p"420nM[?)0:u4?MbD%=S`GS`W5r>hF%$>2d%Ie-,m&HG]J0Z1GkGcF?<S%ZN+l!,i_rTCd2F_%&nAp%8NspV\-bMB=IFKLr(3#ZWi7aT^6027DSbCP.Y]Z^L(T9;Wc0`fZQpSs9/I"f:X?";N4M*jA)"O+(a#;nAVH-tIL]h,WUY$bSDG+\%'jW\ZhKWj!3`C^V#n7/DSS?J\YSj\n0sVBF1>G`k0VucNb!D\98;@Q9mj&A6lA=-Nh]-Bg+_qh9YP-*BW=8DXS@W.@b']\7(FQH<%/Xk7t\MgG*MdlU;<V\"CW8ck3r:7#;?Y6i4-(B38^LgcidmY](]-uO%'h2X:a\WtJ/M)a*>,o7jGoG1V#)4s_C,N,TG.^/&e#lu'%dI3L!JfgaHO#H?MclWsYop"*^g"XB5i.(_J)rhC!)d4rfA8$t-F,kV0!?sre0LiJAYS`DK(k-JaYW*-A(j_.i]u*,X_ifBeZnB@>%%[^]QpiB[H^p4df+$qP%RcXn+/CkCE``C?:di:9LcKXo==S\8VZcIqgnB&kKgdEKk>?SgQ>Cg;&+C=INl@XTKmM-\M20dL&S1uEN%DRjj#o8UIo`;RGg^(_Qc\8@qH17qJ#U3Mf@b;!UR_-eG62+b_*eZg@7b-W;!j9XKX-0nC/-0bX`g9rG?:i6o7_kJT=>#WD/SFq[Y%6"TGm(cL\<FbtSW2LB2ZAP=A(SHM13AR;+t>`GWn3sV1?=R@gs^/L`\Csg&U26WHu,4LfK1fdh1CT>q"_^^DEI0m"$C]W-$<3#-[%3SoY/lH6h\rHo_>4g9@!QuhYG')(R6HE6[CL8^SMGPr8b%jdSScH%[;BN0Ig,8Pqk@t!Igm?7NrgpR:Eb=W+F`K+%\L/*4u'0g=q%a?^bL943,^12;-tEfIJ0C\CNW:ol=\iMq5lX(:[i?081!j]8Nmf`F)7Z>0Bq]lS3iop>ttEt>`Za!&?L^RM'T3>Kh3>%W2@;M+ed%n!^teq&qXALj)O$e"0``qYsrPV6V^_Ar4WBrR7$7CWeVT5Kd%\qSJ=tDYYZk+tl/G%S?W:BZ=[bKj"IdjCTltJK66RJGBN(Nu0N6%>rd?fDhbf`XLm#r[B_:7#!$sdX8"Mk9sWXD5?N$R,SJ$D^%%l*Qp%H:d"LF;0j9G_]8$d*Ad'cFLm[+Jdb,"q:B%sqpI"&RV^])6%T$/FV=9iup7JaWd?5^&j$S?cds0&Z@mFQ&lZ%]@T"3HOA"F&E5)]"d/U8n4/\f?UkIj@^n_GF0_(c1c'7;=!-+puL/k%^_+al;YF%K^ao?jm8Cf+H7goZsZ#tjc(g[0O`UkL6Jpc=0=ZO>^99Y@=C'ba+9D*a3P`5SPg3T5A/Ilq'E"iZBu([mIg6)hE\l6]2HN5[_3`3%`T@s>'%O)+#;6@QCo4e5k`3VcNlg5*fp-Y>g5A+;8/rted&%2r1)n_I#ZX$4%Y6?&PHKI"5FSk9TMRsq2'>mo@!7qUYMW[Xqjr1\%-^N8VqW7R69ja=3imaq'?,sLmVrJ,_;(J-]RcKUi)\AkM;$tQ"L*C)4XoNO,/lX=r'uem!7G`q3lg]_d%<IH'KfVK>-33)FF6O%p%[\4PL9H,DBnuVnOhNf1"/piRCP9QOu1"eWT#m3_<9s8#`=K!n<,L,sf1=ucD$m7OQ_!XmuSmJ@Z-;!Ik\p"D%+dcDS4!f1sWJD6k%2-Qr+UA(l<Z?'63]pe'r]`ouJ+:;&a'4&g6k<&"Vd']6%;M0h(710a@4Nj08%h"/?<N3)^#T2eiM><hM9WH#S8]]OUFleRnXf1OF%+=TS#S[5naf]HslaD<HP#+KDZO3\n_-M;<^8^Njreh$p_#q44BYEL4"QqK*_kE@s?f^Vt1&mE_=0e\]DOG5_]a\Zt]F[3J>Je)7=%#@3jZ,A_0t?0`eD>9(r=Aij=Pgji[pb#P[:QM<H\U$%C=?M/`$8,2=`$@)Q_nsW6p1?ddF1?D)5UfDBiqE3YZoA;R-d%'D*gVPRC%[6362<rF5&:b2b4'tnA6f&t'*QKs9Z(t2!7*%:H\-@kU/K+L_1;:D["\=IqRG-Jlf[?q[h#_*aEb>2jKgW.WW<V>C6*Kf**Q.(,.%>P5+X/4T11@])VL)=5]$H?c,`^EIOo_M)P7GU(`3^LC?T`(^]Q=\2<4,?7#=`f;ngIp6@]@eh#PVu*5K.(Wu.CH+#^mVWb4&HgB5%(<*GV>fehW[4&K<psIC&cJCG4iXk>nqqF=slTWcBli$^-Gk7c]@/oMl-jaD,jmn%jDulqP_7sV4=(hpk+3YO8N?ASTJ/Obb`Fs&a%Vc!>Y+H1F=0X;Siea%b?CtM,53"TL^YECWiT(@Uk%S/tH%()Q851(\%:ES?dN?(NrkRZU2i'f^P<:K5_T>_Zg^'6^Lr-NPR+cGuK%$gB0-,c=)einU5.MiNsN2O&WK\.Dk*0SYT"j!,WW=Xt2R;59N(;9!O=-mo*<4Sg/fEF:&<-Ir9m70/jaou+&Umq[mgI9-eT2=!el%93j7S1[<C"]1eJ;LuaW8oPPnnV^;Tk0*bNH#U$$5Ss'+Ie&r'GjK-SpF<#c0<u;Vj`.giG9SQ/5!N*emim)70Na`S#08`nASM>`C%AFIJ#ao2Le"/@(!V]8_*qRr3VeoA6k>sT"R]@(I[ihHM:b)WLZdCr'kPE4p=1.6Jnii%M;3c#(t\n-iJ9KPt_LWXBf+TDG\nl)l0%f<>-9HGe6Q'Eh2fC0FKqZ^oN+N%K1PC7DCu7aXdPb[_.<U7hY@BORj]Ag8d?RmrWEh;Rk3BE(0?80"o4$m!HWn30Qn1+W89?MI"&%:,qC4Hg%CXf2h`@db52p]^D9sd@;(0pNhd)!D:B:/\GN@Z';u@T@bL&X7<GM1KN!dn=^YtYeF-(KHgGP_WUN3><JU\qRk30[&WV`%>gc\;6?+bk#8So+Iks27Zr4ijc^n"H`+Jl!gQCTUa\rp8I3V1`1=p;f8!*GV<"OGM#^7V9aLDS2i.8a!j!Cer^YY;rH[><B?"69Q%_q5HlMm/<P]Rog"8!q;X9qf>X>;d=\D`:k(90L@TC@m1T5(*Bk$m2eeflX,".t5D!_g-s'f&Y@qCg.HuAk%#A1J6W1A;!I^YRj!V%CH5"V,aj3G(/^ZgZfr>N)h*`3K(\5_8?_VoYGf-T9n]aAi^9l4o#dEUmhoL[agp`7?#dW6X)W193F:bZkVLfNZ;WA["466*1]$ur%`n#lUgp0]!PeGEsJT`K$S<Af$ooRfm-DX:pSdON@*3?C-fhqQf4p.Z9^t3K60m_[(@9A#1/PgFDJ&P]rm^*/[n(#bc?1$e$VXuf(%Xp/Z.P_8dPea1J*KImjK+KeQ/#8#3NoS*3eT/ThFbAD3hEf#RfeQ-Ku'Ic9?gDPG^a]](N\8$7LjpW6Y$q.XD01fq:3*P*aiCkb<%SFcEl"?)^]3*5n\Z=`d0qT=EYjR'"J@P-Od[7dS%HWf]^:1QD:,O"a;]K_AL"r?gECc=Q-q8@9H!tOEb#,RXa>E^V!Qa7M%1,X@L%>g<4LX5E(,ao09`2XIZ)UTm=7RmHJ%#fSC0g<M5rEL>4(n9NRie&U-M>YqpBlrqH\"(,=W7aH=GD-s#EN4),`42]7K='4m$p\GTD%mqE1u(rH"@kk\&4N#KKX@N.$3SE6$V:L\fX0/-\"B>&;qf2S#u5tUU0.-'Bf\#gAom61-.*Vnh:@AmId+MB.+kjdT@Ajr",.MQss%=B"cO&2J.7$<s9SA$.J/c?FJB-07GaoN8K`B:E0?20B"0@"#uedERPG"RATr.Cf$"W9R:]?(1H@m&L2!U)iPNm<&+!8O-9VneBG*%phJL=Y.P*+@$IL=[;=D=)fN[@ZjIj8d"jp3@>pl6rY4ZE&!^R'B`qGl?+I3=(lP&lBc`6i13=<Q<gssC1_m\Rg?0H.O!A:-1Id96%;CCNq'UKpZNo(SP$huP<H=al=FWKrpF3MYpTggST"C"2&gs8S6%!F&&@`^F'"0]H0ThhW==c>(Q9r7^-EaJ,+T@T,K-Ct>29EssJ%gQG[n&b/;9RR<'27Pg6^OFCEU@O&'oqIlEQaV_V;PBWn',OCO(`I#;9H:0:$;Gh5N4h&/&-D\2VF4[M8LpN\U).+m3C`(9BHh'TR%2nmj^O<$"nB#!!TrX@--?bM.GDa@dZ]7.$*=:j>Q#)hXnN(>`+[MU<LAnR*jYbLgEPUk$ZjU^&ZXmYUK;r6@RjsQ2Pp>;(H7Xpc&%Q>d^%Z6`d=N,n_n,9[j`^Wfm[NY\XHj;=&O$Wt`bHHuSJ8opl.,Pts@B*V5t5>X"SJ*2h`ob-"3(>`bdM(Y1HjCI'%Ek2._6)+Tr%:qNU2B6o\J2rr:2+'B)sCt@mmOkh>ZWZI9AMtObPh+*eZXF===puH+`rcTp2+kVoI'24,nA$u,bc1-g:\8KJ!k)Xb:In$5RR>g`d%S)pJFF&tKMF?.YRQD0Un/S!cPZ:OrKJUqh0hf9=Zc#Tk5Fq:gtDOSDO&QEhil5RaQmGAh>NY6LTjAj=c<dBt#)G))@_:b<-/gD<^%s(N4DZW$`\]m57"'r*IJaGp/3PEI(g0h$S][Noi=H-D,ICt>W3pIl`mTkDMNiEd!q[+jKji8[`i?$E@6c@CnmR&H'UgGOR*ATHsZ%e:JrFl@n!9\`r?Ilj_>^1sKOm9qb'aYGs7_/1\M#BDSY4Ps>1f4S,OqMVuD,;qFKg?4=:-__(*ImeN?D@**0B+P]]dZV?t6MoLuB%)>&/gC>"2\$[:*:JLOpr]!o,rlOb$s,!LE3^sJfq%C)pQ&5H2V+AFWLjLk^B\f8\5KQ>N.4(CPIL<^>'((3]B4!b:'MVsAN^f+JH%.iPgkJ:q&_]1_uQ-%f;["<3H_S0:Uj2gfRUTH"f[\D_e\hkS>WpJFD^MAd(/a\aH5'O<V\"gDLQi+Xd2c?'KGA:?qJD"eY,EZ4H^%]VbJ/*3a61#:J'q3fJE/:FW8,H[@N`rB?/%l[PM<C"f'?['X!<U\tEF5^Vh:e27osgfUc:m8KDXI]tuMqg[<\Fa_jZ-QChs=q$\G%o_^VdfMYa(@^AKG5RC:7&s(k9@Qe%LYBrjBLe[u:)J`FQ?rbVkEZLIE.u/>k),L:O7XU%-iBBC2,gjX&obQULkb"F\4[gE"N8XrK%PNg@k5d.lZ;.FK(@Qhn7"hoH.M>6H7HS%X7Al07S8,,cj8.IP(q?""[3OS`$mmuh01XZV'_R1ETK$AX\8-a`J<a_!F10r>-Z0mrO%83O1I`$a7d,;*N8\ATFrg9j)LA@s6"e2:*!ZISo^d8fr0-'39L)=CPB/W,Zkd)+\o&n>9!UHb\T^B?S#Chub@FjCK^36t*fh8fN<%=S(8J+lJ*Sm45+TZ*&'glmTk!4.eBVP]i:YPGt8@3^,kNGR7'i_tNZgR^n/;f;!Q=X1!h;?_)6eVoAhg/be?X_5"sWq<tPJ%aVO?%:!C<47]R>GCGe1//^T5_%IEVO#iV>,n?8tn*S.,9Efp@p6pV^J?]3n;<YHBXT".OTUE5dcc.Cm-"j,6Jm"i;6r&m*e]aBC9>d%Jm%Xr@:?^o5ojp,e(3LThl*"T;ej]qL%VG+5a0U[SJq10;$BC1&8Em1)VO8(h.Saa>Ce.*NWFR2'O&Tpb4eMD4/r'kEKRqm#a5#c:ds%THg*NMMe>+`4Xa_os,[[*A`4!`aFL6:I<t!*$G*`:*WaYCVgcf!Eh.H*C1*:/4;!c&8J)Hg%R0a`JdbgYn\+dNUMW@F:gCq7bYY(%SUeG9+k.7AhVsZ=l?t/%cdeCW-PiEBVu8isc_")`aW5n#DRpbDlWr1C5(&pe/uV4a75MenE^R;c14YMRPBTeXm8Z$Q)DgS;V-FHG%akS8AL=eO4q.`*cZU6*!@ud\(Hl_tl$,$X6\Cpa.`g^8=p`>p@FU(<\?RQL",P*L:/`NX#6qP*6K"rF_G6Y_ll>"k/2a:LFhG!P<%EF,Kr*Uq&gW6G7_6*OMF#"8?7rb#,T/D0!meM5)>FuVj&=fsjaetFae-9]d4Y#m`bioB*ih_fD%lh')IYihWu2'q<pZZ8tlef9ih%6dH'/mPk'29cSLNmQIn#dPjnFKWlV*i!_9004r).iuH=^r:o8]B5@2r_S4ao(a8]4Q`NF3`DBB<k(.%fW-/fe#QUn&M<#pEA+b(\%?Si."f-fX$0(29?Qkuddc$l+K\eZnnKc2,C=-)+Za3Yn%(caBaGX'OL5RK]e]9a%D"<L*_U4T;aD@joG+q*:>fQ%Tg,0,oOM"djb%_E-esI'i1/)F'OJW+#Y8Z+hM;0G/i_&nQ6EmT^A`;9[R,;ODPPOJ0"]itA<rC\k_TO1F!#[eO=93k""(n^N&mQ)R]_->uO%kMMc;%*r[0043(4;`):s-Su1Tt3M_RMF1@Sr*1*+nBL^@Vo[)lo88QeH;3rggYu$rbQM/g?(7Pp,"1Z@p;`'(hiX*B4r3b_LcFI[:e^1N\%r]Dh]:3R6km,BV3Nms>\CHs]WZhSOF_;Jg,`GHo[1okHO]W"uCfWSso?or%4lu<rC?.nLlPB_ronmXQs$:_d8'hOB^Id!J[12bu;%1<H203Saml$CiI1@SNfECGLi0,\3VC-IRpgBq'CF,*TJN'drg[S*gAeXZAEegf3Jl^@Zc!^D&/<,I-!m0WG-kiaTb_OYf$[VBt>\%FH[4kO@:+W.2\VI?pS4i0DY#uq/c*Nl&l;-XGF(L3h4l77GD3uPb:-YI]X-XC^OII]Y/Wis*ZL[#k,^pl`J0NCp+p^V;odsT5r1"%&=4KqEV,3o('h,NA)P5ujR"@PJ^i@ufp[20]U@$FK"1%CGN)*_#9WNDo+f^)Gs)C\a&@5rI(E3(\O**Po5*9tAAF(npk$s:,'1)_%i-#/6MYLe?5,J>#dm@$hj4+f,iKjXiQQ";aK@,JL]S2X7?TRo"e+\b\d!j&];&G"%HK'Wri]-r4ME8Yu1d'/`I<OsOFepblLZe9=%M0RI:Gl?oaF)qn.W?RunoV^L<a#N2BOUqo925(Tuq8JYCoB5;bhfHMXXKVLL*(pN-r4%SE_jF$Y"0Ol.,pPlU@0FO$)[$Ji:S/JH%n%d3WN#H,4::Yd]Lmq?^7F]9XmjB+D#k=q[-ck7L[0`;bM4TOe%E3XS<[S^^+%G:L1$Zmn?(&Zd!$>i=U]=m)X5_%5]ZHPN^*EOU%QmgTH<(1_hH?3nh;t)6@mGXDqLBK%kO$[]UnE3('l[H,ZeKhqpS;nG-,d=H2][8mb%,Z)g)8<k`pE-UQ<TOngr=I1ma/RNn`H'H^%iTnPin5FP\4`g=s5D?(`*ja)]PEd0Ub/FD6MC.Q@!GLljK-B2fN`Pr\43iKPNYZ)6J&;#N1IZ^1YX`tn1!A@"r<\fW@'o$SFJo"$%9p)ZUb(_l48n7oIL,3D*0RB]F2TdFOPM]_/V?'"X:*$Q/\W*!_j/@ZE7mFpW3oHR-OE4e<FrW@pWXtriDH%:<N[L4o"s31_0Vrh.%2,gmq_p"++.<h2j"1'h1k^!H$=.?E;lbak:.LtOej]cL/rp[k%!X-MUbt-18nUuc<R$_ChF(c!\go8[7BrjcZ[]:680r,icPT,`<%E\JfV&iQ;\Q&OPsMMM?-3B$8[2F+D'htqc\+alI-.2g/>[L6Ji79tD%&[Z>h-Ip.H7M[agm+r/rqXK75c5>La##&coOgc#Y3S]Q*%Bmp8mhr)LB\[eIcns[D`orK[;Hd"/HWX[NRhfX+'61-.6$3^!^cge99+Z.3SNNmR?$c>,&8.&<^GUJIc'_\V#f:5'!l6AW;ll0'h%^&Af%CIC1r=U-k5'2=:PM"t;JR59QK3:jN>8(4:sp-":"Q-TH2mE-:mHNl0l6AX%=5B]$!I`ee%IuGNq-;DrsE''*6Yqu88jT7_C%5<:>Fr,'5WUV:Ia=DFJ#@a<4eLpjm7`&oA?.aN+)'+WAuL7WB?,<7I];N)t/L'Fu('O`?_,DL7Td.%PH'co!@J_YH5UkVEcq^eI;%E&lce^gqFp3Kdsunt-H4iG:mqXKU;cZ4mD1-Q8gKa=M?i#1Soml0ml=W#oG?<AUZsLVfitR4WJ*"(T!cKEmu[7d/L^#`Z9fR&G":%',QHY-5Zi.*\f,%KgQrug&ESZ:<h[.pAadI#,IJIZNlsOYfYO#@)m?FD"7>=<qUVkN=7L&0+:<u'&cJL#Xdm-4j#3/kkqT@O0Vq!%4E7@PQm:Sm#Mbnb\!r10PDfRXBA,j'*l>MDTRK-3(X"u$b^b"mX(3u^:R(I;*YE<MkT&@,L1@:h>Y#a["0<CKYKgiW`F%s`-gm&q%"gc620O:BfPVJ-3fA++bA)gCIHi(6eis`0S<HcUb2b-IJ7p2pC8h"kJUQmATgViorg?l3T9[8L5BPPK+<O<(u;V:%8fA/e-,BjL;%p%U[e'hj-]2+,T#Ssi#Ym]eZ_$_%Rp)ohec3Rm2()92Li.FW?UUtS(fYJ3KV8O&X:ZZ<'o(Zl"Xc:GR_*9"LsXLbRJ\puM>1U*eO%^e/uS4*cbuaTLZ6a0@qD3.K9"_SRW8%'\-$'(*_JDSY%?fVA3E"h#`J_R`2+#$>/^aV1/YV]u1;<@XX(%"m'^k-tV+VC:/=Vn2GC%@R[PuiEjc`D>4WG_jD)NLdaUW6qeDP*q0,&A-B'=@]7C_C,!qo#NZFnKE4"53gn:lTDL@FmhT7s2^UP9N!WW^N"%0_]f7^Z+FqRT%&/\2S@bX%sAB'UR_ODO4PcPOTaX%1UhM.["KZ!X/d1-s;k#F(IS_F:]QGZP\"ZW-`.nt;-M>9=E2DAT167S1,i):b9=]THKo)D)$%pX\0?.)\X;S>:$V.kXlP;D*/Y`T0s*#EZN@UrsqgFn?E:`Y0.0GjD_[i&qK<&+UDeM&8oLYmH7A"pj*7J&kLF#p@ZP0QL5e<aap]%5a^ufRu^-4'Y,/W*lVWQ[BH2NV#p^VInNlAU<rL]a;)5WBeh^or9&d]D4I3q\iL]^el6H7=F\]2]]nT!)Em:VN]/7<?Yp\>8,%2K%2/>8@&J7QsSF@?.Fn(7aM`bm9Q<k/@3nPl$lO;CoZN*bqB*eB]"?'`uBkQLs=IHs38AB.tl"mI@EZZ?&NE1g5ZXPV2#H#]dFEub@%<MjD@Rd*bQOK`6^PiD4i(#LTL)*s.E6BK@:k/7VT'^sCjNo`+T%)DDt:Kl(=W*'`6K-uYo9UDe)(9BQ=F9Q7l4&BSJ'ZWfr?IYWc%_U3r47)#.V'AP,4R07[eCsXOndZt6(,*?S42(+[*Zh!PY(pJY$ISC4RJ><fb-a+1;N%bYF5laf/%C2@?(I!u8E@g]9."eZ:8AOq"%3Eh#n0n=mR!:EI9"TZjR8SlSo,3b:EChq`hj[_$T+9*_Bm@ssAdsX^Hi)3j#Je0+r7/0aiU]66Wc!t9JY3`VM9U[ImIHt"qWCO+B%%n<kJlfZ(#5X-)rF4"\W+1lV=R>Z0W@lfB!h4'\"@usN"h+WC\;&JoB'KD/q7!;:I"L)cY_k8QN+eAa6dS=6c1;;jl:,!-9^'%Q.%\?e--&?7H*YSV^3b-gh:]3-a7U4F%V'UD7I#;f3"no7ME!b8k^0L(IuXpu+*p?7ARM79$)J2)\UR[n9u[e<TZ7s4o3U'!Am/"IS4%4ViQb>qmI3lK$W?U)IFg`9Y2ia$SW*G:Xc:Fco,QHGi>;<)nJDg>++B&u8J`hdW2(Q5Z/OCb)@Joo9f>;q(!&#@98MgFicM)+HlU%1VXtbL2jGfK[a]<Od]QQ=1?!$]cPt/T5sL96Q=Ki+S^S?*IliklMHL_F?4IG*Q.OeiN'E<%q"BKk/N'6mu:CX+nn*mB=JNSZSGto%:COKZV[tO=CU1\m1iF0>.\>GGKS9n!"IAt_NmJ`l,n.+im],^XQ%N,9/cEOS#C"R*6IVXQf:2nc5T^W^ie!P)'MPQ.N/VUX-870Q%!M]bnc,^6nH0%&a1GJFZ,5=^?!FU;'!])G-YWi.Cq;;7RYq1!t!YIe;91IJeP8Z@!0HF'_JP<e(2*&(#\=M]J9C21`%u0n\JKbo>%:C@u9pF^o46jpomAE#U8/U0pHLH0sSo'4tKer)3$#a91,3QEUnQ*>-JQ&?H&%/Hi0<(c7Gk]kc_<J"Qs*^T"1a)F_mpXbWXlT25r%@F>cB=QFkM;!"B'N.NEE=`d8&+Y:c5E*2jJ<LR/]g?eaJB(B(4,Fjps9-JE6K-jpTFdV@tMpiPG0pD'[M#j,_[SLA^a`#0/NL445%,G[8t!R\&j2[eHPq/YA%Z8sN2-Aq3#`c@fb8`Z<6X<g>a+0\6Gcd@0n^[/tXY)$>Q,APXg9>nn+"=E9["X@_o5bg6E')u;6nS8;3%.(3ONp04]^R1$+-^Ik@`8?$+ajVnjVERj;hCbN9%",UB3I!dfj?AN0)#:;Vt@X=Z.Zfdj.arR*qIn/TmCi8_6SfQ4!C>g&Mh]"bp%HHYa$&Naes<Q.#VH`(&>KQ<A+7^\uo%illM$S^2f$n+#`S8qA9UqDak9\CG0bNp.BpbT9"klde=1\]4$=<?A]4o=g601liP;cb5B%-l8Au]P:'!\)R.R35`%,OQQYNV#].m`]n=iO=&2q$_-'.2f\F!lOh-^P6jIiYhLCEN`\%5Y="k2al@"i4J53TiGrud2OW;(d9R)R%"7%YUr.fLlfMVN=G!)Z?Mp3@O9Ib.C6hCSu1fYVghWqt#<`SPpjr;h,#"HK`KqdX'<`fFa"P\LS/Ap@q.AiEePD&c>EZ!O#Ju<lh%QqUr(6lA<BDMtQ$Z/f``NC]5o\F'=i@o+I%*s&V/Qcf/iGCVPD,Ng>7F8"9G9j%!95$^S-Hi-4aN]>IMg,\u86Q#.*M0'&6+EDpY%10QKhPAS"P)$Op@l=8E3i4tLQ4'Pg1O^R>bP;_m$G$40Lo('M2o=;W'3JW'V^&>Xi>O">C)-QDK?p>W?b>T8\:o[?n\S&j&1bVqe%^TQ0NVI0mh=jUF-IU[FZnl5'PlS3t<*dd@P@7RDgl[2f!bAoXR3]teA_uIiHgXr=(#aeu)*MtS&.hm\cQjr?8L)eMV[5e;PI90jH%-d&!P4:"(i/U)[\/)2V&`e5NLQo=+u>;"V`-[=67ft6'<J176A0FQk^9FfkplZcsr\1,G8Nkn7Z.;=+(KqXga4#jFUna`;2jaI7(%GBrYm(nCoUWf5e$C.gd;@a*g7NH5Z-\$uNQ0];mmlf,4;Boq^^8Mkq>.5#qm?igHX=#j[&(TLuQ(q]%_?H':`V^[WqNsrFCL:\if%Bcdpg=km[F)[W`Nmg)Ebhs;]aGMi8bSJ!j]*CoL8AtUrULhHqc28($aG2*0RB/HmV1h6EIQlB.C:AeNq=^^kT,rSEGQ/<`=V-WmY%WGR^t';1?(^l!JOmOqsAIS7n8;E%msN*d(t-*T_8CBYq!0QM1n6W@ISqHskEM,$ULae+bT]hN9"<Z8bN;[<.+c:23!o%d'bkO.V'%\A#h;`=FjX=c^rl8IhA5ntAAYBM2$Zd>VYm;3qTUIka*DIXZ490;O_LT=Yp9ZC1dldo1`cAD%b4GH1KpR`iD96II5h,JSAf>WdWh%K%M&HYbph47abW0''iiknN%AN=Ee,rNN"T,BMQ1CF^Rqm'%ulFl1O`Y06fh5q4^kJRbFq"_79^,8L(WA_rKOehjnJX:%KHCRPNmS%7$)^jh2I:D%(2*q-L3a[O.Hl!.M<5Q.'EV"+Q<=*dk?7GOC6>8<rZ^T(rTDER86WLBH!d5^K<+=koa&dD!CY3OYd_o`tPd'RX`Q(%3pl\9o&IAg^*ZWa(&+/aH*5g&RMh86N*fSYAG#W<;%+,5>fUOtE>QlU[q+3g\.ejR[KUj0`nXYOG!%:C,>%ep%(77/NB"qq2$c4/%PbDWb^EKg@T`:J*^)Tp7c)UTQCRh>30tQcdUi>n60]`rkagG'%'4\UNVeGW'/+%Da+^5U#LAj+_2Ig9?qL:kN9mNf=DqJ(?=6qf#%Cin/JK;e;XQX[#jF5<`kIYo1LKB@MrolmCr<ph;@]r&J).JA19oQ\SU.BA/ZWXtPiL93P+iS+KLf08*/:FTbL-H>!)HO:n\[dcKt%HQI'Pitr,3,U^.WGAU-Dac2:@I+"I?i)k%([OoRS*?7o?QFsf1&&<;_N-Eu[BTNeE,1.'kjLr<Vf)d*A.eCJH+hB@L)?70#\Q.Du%fAbJ7+hUqIG0c:/HS1CLA&]YP?2AEU1H35nq,>n]^E79J.J9leqgIl%Y/M;olQMF9@89]Wd\"2&=#>pd#dYdZ;\G;go-H]3)B,3=%.AC"BT+2nM>rj&Mc'nS"&guh^65q.1X?;$f6F\^0\\0ZNAq#"C++,''lAr4NR"VhJQbg7%*KIL0^m)[9bD9j`hSo6X'u.MdE^c/]%kP&<,hNmp)q'Gfrm!Y&)#dN4rSc`"5(Vu&OhOg[9rs\;7gdG\qU%W':ccM=5d`=8B%X0pKLO_t<I>nZBqXnXLBhhWRCBdt!Cg4+A%W>13E?SCtNhY0/N3K:/^:)6?&q9M[%)bI)s'dF0M5[de73ATnP?9K42@m+#Zq1*>VNZg^.kXc0\?-Q5K0Rp3FoeCk!YcbUC#3FVn%[Yuf/(O+[h?JTHP]r/)LbL/6OAG3`[9pc"Q`a-3Q]W^nWF0nY3BJ,RZ_lt.BWV,jij=lNEMIOh4k*(-Y[-U([$;?KXf)i(8m2S8V%;ufXn#O+HbXOl+]:;d$`(%#:;^e1DnH_Td2?2Y/Qe)N3(!_Y+F()&M![6">l)TJg[`A\Rd+k3W#Z-U^@o'_"h8YeK#R8TYR%YBM;%6lRF!+EVY>,Ta\c]cP4.h<gf\OF2N'VZ-;i_%[l=T/_3PHd+X$6q5.N`6hK]6n.5f-/3jneFPXKVAUJYSbHlT\?`4oI`BIZY#k1p%%=36;Wsup,VUsdl>qU=)U*QA`TImbLXHL2)H'1MualCG\U>`"GZ!ZOWMmj3i)=&/j)o^mkK59",P4u1#Ohm,llI7C[STXkcH7ZXl%`0a!](2&M7"u#)dHX0ls<S0]OAC>6NoF%!F>Fc6$('LZeL+1G\Yr,N=?Q5+U$0(=ND'4rVnn<oieK.unXjIcN5Ar[*$LsWJ=`sZ-%#?$(sF\TO)6[pi^>4fI5YL6nN8+CIcQPDeVhQ7g5kCg4XZCIY8Dk0?mdu%OOM*XQ[*%DZX``W7KreAcAkCPkAWh.#_;`5s?HW)t7%jIji*6buK=KUmDVKZ5<MPaLQI/,91aX0g3cMWCs`/JBrQOIlRH\R']03r;$fQRa$R5IX,Q4oRX[0/)DP'oc]T?DR+W!N(;?^4Y]*%V$8W'#[kfuq24F84.<U(F[-B$cLrpbBWnnQh_p?M@MaY(Z0A%$$$V2fQ1,F.lS7ujg)/L4*kQ\$*7H<B-9P\b[te7%!Grpt+naD"%=5\5E^nWXF0e4'eXAgH>#LKA!=16`phmUYuh,q(m1NVCo`N%:VCldk-r+LQHouNN,Cn?ZC4CHEjJXN,tQtI,oa^4Jk0#j52=s[1Z%*;Rgn_N_h36:G$oL$@#P,c%"SFbP.<aP0mce'8_"h9D=oM=a7W;,5o*AEELDS''_@10?[cla4Xuns-<*Jb!>dG&HMOo7rs7U:OKo%\M)(Jm&A-J#P!:@NauQBNRm34s'AQ''4CN3INhK,0Zm\l.p\!_)2WdHB0`!tE?M6chPS)U?_"4+fnSPk1(ulLGGR6rSN\c0[-`D.%2Iqe<hnZdp;=7,)><4t]1"iL_=iCCj.fnEc`@R!EA1^Qe1JjtsBF\m5)Q/skN*fg[Tc'*-11o"XaH;m]?MUHSBD.98f2kR[fB(hS%D+McF-(VQha)3r`HUs)`UI_1$.g%Vd_iC"jK)qIb%[5n9dhLH>,b/Q)EaYbmgK<e-VH$]rKjIOYN2'(9d-]kLEa^[2rto.iqKY%O%7<r,J#ad)U'RHRUd.CJf%JRqfUV:1^p:(7l9EN5@gV_0s`u`::6N(5*M/srmoX&'GgX__R6JJ^>,&aCXWj4t1O#(J''NTFT!&&'4%Ze#mhKb*LY6<rVTF`bM`/XN)X`8HgY`90t0(>2i3)>*2Up*s_DYE:.OS:0-M9s^iS\U!f8j]np,9q</nqBi!;bX#B-s%3W&8$]Mf%/a"rIL0$BhG$Gr0,]@I!Us=-m:@/*G,r6L(Dbh8XR:goh!]Jojj6B3J@UP8i<kJPb"DCIJccVHH3)R.rHLk`)A6ABKJiq#=o)BUQ%=n?2tHj=(iRk_U#(?cpu;1qrrOTE8i$?VfN0Q+k%^5*<\Z;&mj%aZ_kqRB@ucWU"\VjnW5]1@>t%utdj<IWnY="@XHf$dlHO'hM2%rui64LBi+T7S"R/bot?3'j<IS,<%Up;Q,`Y"n%$kU^W`eY_U8_X`=Vh:^n##<=mXi.;2GHHs8mG`aiT65n1bpl+MJOLFq=QT)n,O%r8LD19`i^Fj(P^SoOOK[/%-Sffo3*X+o2>h-eFc^(@Zn!4K6EgNNVVQUHZBLQ/%sL\XcUD4ScRcoXm96Sd\iIGTR5!'IkJ*&`qOc%ThF6X3mbZ[OdJ#a4'[&VD*2Pj<o]>G7lH]r2e!jrfUd+nG]0+KJ=X2A*q(T5`d'[]+bp@E`Ujpj=5M@uiNnQ2K-#;g[.W/eVt/?n%4J(GNIL>%hoD\KX][E\$\q5+I%bKeoAa48-/DWf`89QoF/g\LGl,TRF4f^7k;'VuXAhUT./'^-3EG%Kb?qHT4]aE,IC>XXkARIrE%@0h4X,VeY\O:*FlVtWrm0ScYs;J\t@KLd<gJtJ17R09U^StYU`mYo6lVFSU#Dbc2HK)1ZISFo==+,U/a8',n"Uu_<ia8q>K6N3J&%/L0='OV2;#KM^84qgU-fX3+Qip$%<6`96;S8O5,o)3@2!pQbq-9KWTrk5:>HpNsSJ'3">?EM_VQrS3:^p,2b1!$MprQeUuke2AJ$%;D]n9QMVq")8`:]a:M:sao*m\Gat>*VYE&lrcK`+d";0@:F(eITel\a/;/J$:;S<&I\Hk?'h>6eIBu$/_-g04>?0>)hSWJOaq5Le%>eSp:GWbB+B)1ot(YDp]*`Y<I!j$%K;(^6\@c7:-4HC\KI>[Kf2M,f*PrC@48^FIrf(5HnX"VX.SYS_]+npgk$s:cc()O]P^@rio%RJ=3\D03hiUG%QMhL)iQXeeRe-aI`4BX/76MW""]bNac5_AKC<e50uElq-Jhj>Q1(QKda-4t1r?Wb-n%#8ffmJXmJcjZrPc0umSd%['>+MGZObMT\s1c$WbM?C*b;"LbVqmUiY5NnYk(d(ha?u7oXe4MQ>%ZF$=mBU94SbCO"A2RsBUsF+5jiPTT+b#"jH7*R7]XOonWl%<+$2DAhmt29lfr1m0rQ?f#Uqfar\CrCeX)T*05Eh,@pMk)%b3?.7knOZ8r;Oo7#:A"Q`+5c1qsc^UKcs-J0f(3<MqAYO#&QLCCQY%lkQG8W:)"\HMFAm,"?8Nc-Eu[SK6aZdb&s6?>a"b54[a2(<X`)Y:3bCoC"+;cU%89#KCgMFLtnBjSk=!?!fADR%1.'B.G8eaX^Pd%XM[&3,.'F,gG]q-HKPE@c@>OOjdCdu]P=sZY(UHM4+!A*kEX3HZm!#H4:Gk8P9<_%Na?+[J:LKZqg7qjhg7i4a39`:8SU]:[e[k\%/2!)ED%847-Tp_^eU0fkT"jA+2h-h7[MFtK?/M5!(.%7D\4A?",o(-+a1`nY)Hfg7"S'0^?78DoDe4nr1mC=qPK>f)'!]OD&tCPh%\s!9am3OfFiOQ\#c*5E3,#]2L8/LG'7^(T8Ep>N'$AN/7[i.%PDT\0rUPM(QY.E/oA"4Q?.STU)PZ5Wq=LQL:6VM371@L0NcKTG<%cf`dDB;XC=]JK"XCQU*d\S-dfC:I>)(Y'(QW5gtT/HTJQH*Kmg<*MUC;nYbWLco!h8H7Q@Di^Ml9.KN`-s^IL-aHl&Z6AACATtBl%fenZUo^QNX$&`U?_76)).>T\e*9EL::F#HNr7r_VTH.asij]hcIsH*gI%%RL4e/o17m#QI5e.(gA3+GI\`hpl&tlI-%4`LVUjp1M%j063)%k_?bF6k.Y^kU;U?6)m4.84A2.I(24]#/'/D)^`r:V]AX5f3(,Y7B4shrJCbU^qp<S$C`m7m9%=XM;HS8*/a(SQn;fntI&m%'DEo$m,U_:_IiQAB@a+=m!Q(Z1)*u/`15Duq=f\6-:I$o!To?GRH]<*Ad=jZ`q\\i+S7XEP&o+A1IctQ1J>r*VSmFs*\IKI4.(h5%rKJ8)jV(=1*!ST6cEcdW+S)rC*1"a+e.F%*"P0+WV)rK"IATI%N+>,P,>uNJeQm4l>V%b?\Hr&4jh7m6B`;cH$Pk8'/,f+*Z9o"0%H^a!=bJfW)98F=\cS=6gm:OL(R=^T(ES@HsZ<<N(Cfmddku:5#hIA^Sc">NW@[a7AZB^3]&,&!Q#krs*dV<&jV:_lFe''<7)+G0m%I'=V&aUC0YnTsCB,@pp/G$3F@Igo</jihhgmN![lRO`_)b?LB>#gp8JT.t-(<dQTc/mB0apT%PYe>+Ja+?f;Np..XO=3[g&pG-Oa%7>@BHT,Y0&:2Z6ggB]GJl2;$LO2++!SgUbrh;p#A3R-TlBNrQ;4igbid$$VT.iMTI\SL>n@#o`f1m?ajDQL,Z6?gaHXkMX-=ui;$%K(sKbA4"<IefkLK'93]"ApV^AM.TD'3j\="WV+ME3et\;.KphIa%Y&6*W1>?<bGNRjp",W"_U"OQD0SYI0%m>@,53kC;udUnWda%%U^4ZPSd<q;qS&)o<g(5Q@T9a]&0b5;Th:.Gkq0%`&.sWc+-2*G?R-*)$U/7pR(gtc0<nA,dC1O1qPP^[5#H7XBO]^TCNjGUg/+)t%QF)#&MWG1+Q5CN8H/qq7X?%R:Y??5P0IO/U:QJu.3hTC1kF?o*DB`5iq9mH5[E,W6[ftm!\^lEI6n"%N7=c)Ws)gRACYMAiq:(qI%&PN#^jMeBc(Mcjfh+'nZ%l.d=;]FRj\arGSNU/X6p[:f;/To<(*Xj?XOH*]_`5h)UVk#N#91me9F*^4f:3W4Bc[\0@lo`VXb^5W>%JQPZK#gLNTqg1,E;U@%K&=DP;M.uZQ6iMsJnpXHq202Nq4e=-k.fNV4R4FlXa2k\JhpaN3(e5OU>e9$VOHGE!D7h='J/.7$GHRgX%0?.u!.g6_372!6^fN:h8MBI:Y3@A/<CJ+<=.N'RED,G3$kAuKE9P$A-VLV7n(b&[R-\V7g#=_DX`lKM3Yh?G2[`P7o%:?4\FI)+G%c98e6/-a_fc!nuL(9EB>o:oqb1ghPgo2s2O\hU'E'II0u?p9j,`SS,9gjJY2D0$M7^,BG?4o@GC7UXb&'j#@"9K)eHP4a'5_6"#[%HkUf.P;`fPTdNi#J%&Kqds&;ZA7ta7r9s#BSj:;!HtMhGCudo=&QT5$mk`D*WB<)S^GuLT.IG]BS>X6RPAN7#6:X2q-eFafnrUu5%g9>d0%)j`DNODBLeoN99B<d@$XlV]J;XI^_VZ,^t,:4/sPWt563(0bKLp3;DpR1a[f4Lnd<rQ>C3bt6rOh7e\3mX\`YmOdke>tI0%BfGo_]!,Ig('^Va]7X^A2ZYGSMah'9R*k#:o\Di;[SpG&L?LUDbmKbo7D3E=2lt$Z<-`I]'@Wig;5ubK7NG(pO'cZd*$9sO&G+'q%^<aE)56Is7m=2@O<A$$ETI]J^SuZ(H^R<6*qe$V8n]*$*EE)ejPnP%AkBe]Y@FKM\(]sZb7!PN@1BhunS9Iiu0d5F1IXeQU7I0?a%2;BGM-*E/HZ7jbOa,^*\)O?])1^!=)Q,J^<*LKiFk&<aWoHsM=k,\KpErRgRl<RI?YiA]0i?3*+b@Q&!?4[Y)jd\&gfSXNR.PbDL%90%s=^oC?-j`WXV)0>-_C1oWJ@G$%^'ecR09"]ZAD`bn[n2kTdmp8$F35Nr6XK'(SDiaRUAK^76rAA6F,?EU[g00a,0oBEL-89IV%?)QP)1M5d#H/q%XXEh&Ic+k/,d]snBHLJp,-.'>0[dE41]N]R7rJ8=L@a:#pduBc_=(nb.mEG4T/,<si@\aDkZ?%Pi:[EXL6bsRr%Fje=O%b#0?YP2g;T`tKd%nC#NngllN/VB"U7QJ"5JT0JN*+f/67M;(e_LF8M%\K$S:[dA\A[D=,0,$CPY-%h6q(\u',[5KB'nb^Q%l*t'nHW*('cBZ96O:JV\WE#6((7g1s(mFP"k/B>Eb&S3b4b#!5cdZJn\bc9_bINjWBDR'ZO\5A]1kF$hj3@PEWn!R][pq+E?ki;d%]pbVm-E9*oB!B1I$$q<<=Y>Cc:R"$0MgZW!6qmO,n]\/C(g)d(/D$:qG*p1?7#.7BigEP8ANAr%S&+`LjmlQ:=u%mtI`gab]s4+k%p<bQMP-0Hsd^S&<I!]/6B5)D.44V)9:IEFao.pPn2`!?To0F6#lo7Z'Zr3r8.f1N`=C]TK^>%VTKKK%D]Vh;rR)@F%\]X%,YX/=p%\-oTJ>rPF9da'ls8eg@k^Y?.BVrNM.f1NM-c$[TUoa!2\X^_=1YN?_f[$A;?,u(1.7P&%(c[XE1^K95->><9tpFdZP(I55bK7bn<%Qp5lc2khp11jGaskaj`W[JZmnGJ827;9G^I9ir5/q*K_(fYC6k/S6+9Y8N0p5;QkDmh1bJZ,bO2mGQ<&4iqKKnJt%FUK*BNaBcoF%Np^K,g=YE6<f^%]*dMb/TBf^r`aeRDo9j7jc:R)D6;8c[hF[A:[]ktFpT=>m`iaTm.=!Elc1=LCGgq_nf*o:jcA8<DNj&HXrOIQ^%%1o_Hbh5XFCh:D&!@23]dLuAT^<lB4Itf=l89)W%1tP2gPP2jD4j#K_Lu18SeIa"q;A>hjl<[f5CC/'(VmRBo=D;k/f^Wk>P\PsU%B(0SS7tsfii4?RN/l+FY`g0CUF"eC$cuQ+HBYbV":J\Vs10$0S7D`]KRM_6i&#]+6K:V(d4Y->>$_QD73icleWjcUDT=fTga7`4j%*,K[LfjQ3b@!6U&s7gs<^NYifUhGdeoePV-%qr$mVRV_o1DI#$V4p4FiYEQ.>C4uaGRs2ss$K1@LKD0HFleD+(UKJFFN&0eD-!4A%(J[3jF,UgRP3r'd.lOhg,RR6ro34(3GOH:$6^3=I@S*k\??\uo-#CNmQBE\UIsld,U)lqJQ"13?;2Lnq\NBcLI8K"nm:='67R@/e%d-cbD_ej%f&MSt'!]+7"gGo&C):r(o3ZMb^I`ED.@YO*N4#c#cI%/S/8S)No'<po[i&`!J4d9#0;tAa3F7O0WjI&HI-Y?.LKMFMb%&#==&E5I#fRVn]1[XurP])ID*P9268h;@AEgWRmr`Dd@!2c%pLaj6HMS'X@r(K8u)5uQ"=^I,sZ18iUaa/>H*q"&hqTH05,>OKU=%*2u7)RHh%FMK\'%aAqg)2eU(C'doaSYr51rK.2joGRF\rqdID]5pU*+.9!A`lRK<U)L>j?DGu"k?`_G@<14)o&"SOjMT\$3ZoKO`%p-[M>K[&b-ncQUM*E'p<-[[2q5ms`,$3&$_c'Z2kXrS-[90X7<oMF-odDa5>fg^@lApWFrCqdcR:%r_Z\$.R&TlU>`*UV-+BgC.Z%0[K4rZ[Y([M:m.-51)X_p%M*-`9t:[C^V)Zlhm<<PZK%j+Y^p`nd$2^L0_3qr*#'DotgR<d;Ie]_$^?=qLu[Q<cS8+N94qrc[GY6%1?>\sZe2$XZS"ud[iNgqC7)R$Yd^Q8SZ_9b@FZ@^>_s4WCUeLn7q?`pH=6Wh]"d2B4mMkY]p%$U<0KQ;"IF;D<&#b?g7N2j7Fdbc%4/ICl@LXp=<pfuiFUS#MCHV'gWl<q9pT0`Dr#S6\.3#>a>"ebPkN@#iM<j?kTQ#%M36)k";!?])YZLRR2bMd+hkLHPia"bb&[]?d%@]s-;`h*(I6,oMQrk[[X\DKrlK_jge=rZk4V,A<.`%t6XQ0_,j78t9TM8&'@YK'puSp02o?=8U1hbHU49OdU74qigCUJ,P\@#)Z;%^m'`cQriJ`)ih1sWccX<`9Hu%*l+/WN^'EI*af>5`PbE.q7FD4!9'1LLrDYlraXMj5g8usHr_4Ls''S@qKODh"%iTelbuLjUAP<u%4((75^Xs+Y+;@S8<9bjp2`RMl:]Y1NMc(NbIUD-SX9cVcNDe3AI)%`9r0AR;o$?dHDuEi@!O7m?qaj[MXO-*uO'*u*RaE1^a`q4A%F[!Y$I'&8RU?RJ*NVu97++$?.r^4TAbXnLionSeFR%lFB/"0t/_IPIS[s1S9/]^Xc$/a?II%2i!OG-3Co^&NV]X"KIEe0C>Pc[Qc%UiQHn+uj!cq<"-r`9T#ke/80!\W/m9eG%](Bni#3Q/JPg0aaDtNm.K/mnDe`:])pJrZRiV5?QIb*>h`0Eq8L#J]0ThiY-qrDTCVg%1M6I%XIajWr_;bL#(#odAR,Ms@VhdY,plpE$,.GYhU8RtBa`-CbnH[j`$B;-o)`aPhnCMB_P,@0RZP5@M4B#r'46]TH-c)"n>"WU%@Zkb_%=)&>6#[4UEr*EC:,jI\s!_)0CKB&/F9IND%><m<pcr;AqXuPH.0_`]ouQ:>6e'Cb+A@&8Y7'I%,biif6n%@+F)1i]jX"kS%3Hr^A@8(\JZX(:f\!h_WHs)k"St[NZs4gP)98XQd8IsTl>#$.1K0:L;><0aEf_Cj_?u*-qcrg%d?]9)oY"SI,o]=10n+_M_BUSn7%X0X=)VpErO5A]L$Y`f*"^;S\%DM";UM-VV)c0r\QmQ=ls"eE.\)$Ll;-mKMN3`265SQJ%i?+usdj4Cs9+<("N>uJ2,Wu"G!=h%3"%FH6j)G#;%=S8hW@4@?P>iJ9Xp-.[K>.C'>KW1(8`I@b:eo(lTD4)?k-)7RLm!hQ%<ZCKg`VrcRtpN)lsqirINXJu]M40Q<&j#qCQ%8_[dk5Q-cRrpsJJqQ5aZ>A-G[gV5u%kBG^(bTliXffiM5:<Qlp-TruLNMGANZn,8fc11[HH.H6&k&S\&qI2YI9LLMS`@S,&)bWoX%46SIrH*B[`K(#.K#gW_h+59_G:L.)hqK^AamN:$?IZ7%-O6IC=2=E"-Mum5B:%ncJ$nt>$+)LDBELaQ)=8;`%Ca7+Tn&X;WbK4fZ%[[%K(H10_/Nn*91<Ej1?_Z:P(krZ$ABQiaPKOXl__%N&I]E4D*kM7>u$@DLtG:gd,F,A&"7P(?g>\<<:R*_EFc:7EdJo^R/=RWX3%-d?s]cW8sd0fakL9'Ke9,a_*gS"IE#?d'97aJg]15_U:\`Rs2ebBkMg^l#-fetkD8fZ\>3K*H"KQsn"Ir*o$L]g1JT.1RoV,60O3%NN0QiF+"$%I1riQ,GY.i\!ReRi90+=[i@ncpLN!$Et<Ft[`>2"SXLD!$s]T;FS_6FD)TZ&`(A6`_n5ekI.tt]#0QBjjmGo\f;L3?%4N\+^.SN&U^<Oeb'j,0)2#FOalXu[7OSALUZ`\544S5Mm'$_/4S\V?%IjF_+X1gGe>qo>XHHp:hc<%rqb#qT&Zt"P;bm<aK:6h7E%m#9YJMk-&62Si'Y5@)Cu1@:Zi03NI+/#9?BK1cMr0BHn<*N\!CH`%"B^dcVJN*9!`WYJu!2UKMTQfl!T@US*TW#,hKj,*H(86B8>%bJVFOQ>O]mc6r7:.4slA`f7sg#SSOTiAE=Gm;e1e9[q^0[IiAUV1:`MC\WO!p\C9*(2J1F'Sk?2f>oIP3c!5tr39hR3%,8!jkX\a%Q26S??j3uDF4K0qY$PU=P\Yh5Gui5?<3_]ZZTRV_B\)6=Lc4"JEq8*t\J>a)K0E*a:ZcV:0h21-<N"QK>a:e:0KhlHK[>Zk<OBaV%_oi.W(DF%d6WGn3VnV/F;JWPaM'Z#H)I9[RR918-4#)K4\4DQejBTjso9B!()h(MSh"8h`pJ?:<^K*9(,g%.NfDRl&[PpYLJVS/b%>%"XDiY*AkfA/H^ma$2f\IcBuV9d#%Fu*TC`p`#EV8&WW5(KdhgY^IipDTftE@%%OJ/J5D\PKNa/9c54*;JE'B:JuuLe$8(JG5u/%Fuo_JZ<?"N<H5mqcL\B8ZIp-#$Xf-eJb9X]Th@3-5!Ii8UIr;9-b$+&STV"4d(O)1oI0q2EN0+NFBZD^63iG?HlonLjEl:sK3bkB%O&au-Y$@l4GE`h<b;$afHG/J$K3sLd*hgR)/_*3'oRpR%f2T-p^>G@4X+Y_'>HU*sFnq!^Z3G`1af?p@2d]\"N4Z#T=fe,uB5q?d%c)(Oh<?^aXnQsiS):l_>06U^2&^3gpL:c'-mea_"&8Ua&cY_C;%D2(jAdp`n_,I';NT4H3@+<H)QD[H8e+#J%RU9`h8_8[H@_qaX%0/V%PqQ<#U(U$Fsq74,;WMQkO/36k5G43CO*L+Wfl_u?Ls!UM8l]qfn]#:XYZ:%I$`P:t=F)Lk!DRXt.J<.aWOq7+m"ouk\Xb"Tf%QL0#&'haDXlkM#ag%Q8)oock(aC7WPqn=ZU/&3Xuf!-"><a:D67S[4u%s>!</D0)`1Yr9L?@Cujl%^r=LOWXt*7ZG,-=:kAV[?u3%*W1+""t&d#CRTgjF-45H:1CL)MLoQ=3j39WF@<q(XpaXPNAY^E&rUZBdbY6#=`q3I-s>;6^*:cEA*)$9_:!!/30jb"d_i)fS<g;P%;]ZiLL.H+R$,+PC43CPRp:A\"&efQ=qhV+J6M"]6,W,6cCIH5k?eKABZ9G])5h/m\B2a&)m8\SJD&t^&\SmNL4`$?,`[oo#/>i##%-RWpMBMNA]$@CMh-g>XqX2"%=::if1$i/"6Z^P0c8G/G;jcs7]%-OIPHURXr.+tA#+i:o`G's*Fg1DER8%;E4HTF0@.ilA]hXi4i%UK.[KW>!5ja1`iS#]%C;@@QHE%B+N:m3K.6\gCndcg01`Utm.OHFTkA"6gIiAj^"k4oAhTp9l4">;Mfe+!kLYYK>.sE(Ir=a0l)G%rSQ\PD.oOhqeLCJqeFs+lsrg]9M4f1X#Y1?c?XTcA#mY`)r_OX^[5NG\'+Cfk!)N:S/m_m\4F_Sg*$rd$KIc,2.TMbIA%\2@lO"$%UV6e3j@4"$CW?eQcfV0g^M/QPauU+ck`I/5<(7WWP`EuQDp3kYo8[<uNk`oE)#FMC1Kn]71X?91iOHRICAY,;p>"?(,DWA<71@Qt%c\=M?_k-?5RVrm<M(^d)q(9]i'H?/\ctmcX[qipP/"!BI=C$L&1Og<C#3TnRS!uX]oPKb66GY;:/29kP5)BAmQWu.&<1/(u'<u%6%P24)3OGmp[5r#W?Pd>QL7F)_$FBu4>nFq[:/JL%;i%'TK(WDFJPC#LKfq);T53uIk/j&]h&.P#!;)GgsI[Xp^W6Lo-ED/&gc<jqf%HOI[l%T`*0/[@6=M\?u#:+YD`T/0K)@c^>1@,;&=ao,YO;T*nkb*uY>p*fCumEqc'<k*D_/6R+cku8?*N`"'/fY\kC+G0>B->Mro%7T!r]h):Z3HZbJnaeS7>39<XiY\"[12qXR$o<Rl&b;TKYU3t$=M]$H_2_f6hdsRoK#K^8"CD"R;(VNVLB!1P\4T:7]?NDa+=F9,a%+K!tD/`Z,l1A;-3>_r,H!Htgef<d)16WA"(=mQ;;?P7>.pl;I"WIM,eKO^^N&3HK8n`.6klDhR#aG?,G\gr*n:t07g<(6&"[Rs!>%BJn20&i62ZpD*nOA2Gj7rbD=eWi\M>H%2/HN5Fae@u_@,XY*'m#8__\*>kuu@$81d$-@oM:U)BE@:9LAYO\(`<5ce!dJj5Oh7S2d%0;W/p*7c\R84G443<9n0%>@f9E@,ZQ\R"<SQ!C*FJ<dD]aZl4;]`c'gFB7=VW3<]_r0#=3BNkUn0Y?b"Cd15]"8.ZWgmpag,oCKM%M1ZV3cN)<0&(?E)"B/"8<S]/t.?GPDr"0r\jFQdZCYhSY$lG7Cpt[D?+./_3"@/k)6ed_(*d2e]^\/!mmEBf?)Y%E'nSZ/X(ulo-%@r<;L0TgcZ3W4?j3pW&/\jrK*j\J]&Kh5sZr37<"=IlpQfQ-tNVQ`NeVFSpi(&aDgrQV@^DGDQ9Md%)k_&aslFm9HGCa$,k.8Lee%/n\A>&*B+W`0BO&5r+U^OL%W;ejoS<Z1H6N@eUn?M2TT#G&B]`N<@@OH-?qr"KRs-eNHnG6gX_2E-?00NG5+-G57!_H)=&7`g&Jf%+2`r?M%-@'Nb9W\RDqI-=T$7cDc*E6*o[XBH5q?.m*U,o4\@ln))"<p!/u]PRq[MBfUicK]<[riJE&**@TeLlQoQX>IdX'Zqb19=%kU58*i4HIE!EeDg.'_$_U4YA]9<if53Z2h]1DVRKQB@->Q<;o4%XCu7E'Vq9JrEtA;r0ZVJpC^+#u&?F>P<^Tk@Z$[1CAnlEkr;K%k'!@I-cLjp8MH)PI:;]"F+UD/[R\m,$c;jMe".>C7)Ejhm]-.NGlue#Nql:6?2?m+k*1b\F1RqjG`[aKTd-pJ)C.2TfpYY5X)_3>%b+js3no>:+3CbFB@b:e&pXnIo<!&75l<%]]&#;.$aX[jgS6hDq=nuQZA,Debf80=rSpB,NCOD19@!0tG@A)n2<j!PERTLPpTB3&e%^G`O"fgqCe_m'D!nVbr]nQ!&_Xc)'NadI_M@eNhPHJ`@b+"`K\4']P02_tgWbu@493-RePP5OQ:EAVe+d>uRTY_U\Hi?RdcIdAGC%)Ca^NJ4>A?8b57Qq.F;"03f1G.qba$m!!s=QkEgbI]q<>>:UV\)9%jBgq>4$T\[:tY>H^mc$dbG-Y:+l55B8K-%G3'\[t/XlFUV\%*il)Tkfs1Lo'YuZmaWVR5+0*'a)9RM[j3!kG^KL6V(_dpTPgcnjK`DjYi1`;jf>55^g9Fj/BhA[,q.-*X1!>]<hSmAnjKRq'5^i=%PC30J/D!-NPb=S5FpAjA3EQC&E`i(mfWX-E6RuAd,PLIa[\?/+Tk;Fo+Q)RS?.!Na6uku`IalW/.34Wd\NIW/d1X\<(/4b/"Q:0J%`FhnJo,7(P81VN_3kj\*mPS8Flg3f"'7jk;cPhup%j%7L[Im=Vmj6[TQ$JX1$;An1>>\JT#4QJVF@=4\^YcITZ1Kca@PhN@\W:F?%]Y)k$dU()n;Z4.14Dg70T8E*F6t)gSKbmlDLT/n3>a;mmLV.IL8.O;3fX"utM$9_j.:O;T<kjDhH/BILD+d:So8RgM.9et0R5Pcm%.k^!,L]rimPC=6HHVPa)USQ30dR5]Y5([db%LH&a'?e6U=D.PX,#(sIk$W'u'&PIDLQ2DrTIeAU,/+\eWatTek5J1HbH=_QjoQlr%N;_f?!;"4r2LDN83`k[*R?1=C4e[p@a/VJm1!+A"6lP,VpV3pPI@T`kLr(+3?f]"UaPfjmA;i)5GiDb\Oci:n'C;9W:#I-EDmPRX%K/_7T\S?TpZlqINg/nFjANec?drlbH6lr2H20;IG8'u(o3(98%fKs_4O?-RiEdincE==Dl(k)C6D9'K@[;$O6_s_rM/E^D$bhtJj%=d/G`DehG&fV+X>r*5fkqm9^m[?UfQG4A2MPa]&6A_n$!&%q5Z%)le`aJ)pX(5A@7J8Hk#hjEq^;U#$f2,R2Uc*Ha^4\PGrQ?^;"%,'p[YJtCl"`\et@ZTHbf+S4;7F"8qWG=\`T?qS%#hS^.rnnu.*Vo3a42=H'A?"OGOq$C/BH^Zk_dtI0Tr7Wm;U*$Xj7(Nn`rtuic%"UXTr-!F^5AW^PpXK0m3-f<(Xb9Tj/gUe@\"jVE&bS&%pEa3ht(E$GoT!LmGQ*1I\"?+KQ@f@oD1WY'_4L@Sr]tSF%'bBTQm'Yc%%k*XA9jN`hS/_f0QgPWn1haT@@>Z8&fF)eo&'Fqpkb.Vsd@+%7p*S:,+*4YaB)a5OjKS6X`\!R8]:ucffL7G!s23G$U2d_d7)A,K.%nU:0L2Sr5deGu$J;0tN1p+8VWJE`RqDLaCko@KGq!fl`X*adntE@u&lhdFRV6V2VKGb)g@c4iLP]QnhAp`aG4MRr?YJampLaaeE,%3O3g>Zf\+0^urF8OL/j:EXHRh(0pmmaL@gN[CO[.MQ=UeU6TRb(LTlM#>*eSbT*KGL'1'9SsP<B=;rT91lW<U+qOVioV[,&T]8am%/mr;/iT^"<VK^]e)sf'*Jt3dl6u:n=g?XYcs%5Zo,gR..YtR2n4t'gp*0bG0Q,rbV`U,8$XP(_EfB6Z$DV1\"171j6Ak]bD#r?Qb%2SLf%Gsk4RPF=\TN1BK!/9Q?a'<,Es1NfkP!YZ0eF#qi7Or.<"RPU[mK#&Ih6O;V*eYB,Te^r_;Vqmh+<LI=oao^#SO9g2;_gk0f%OKb.s@F+(S3HGP:TPFd5He;3fKU<ki\*:)#?ih*H*<'j7'j.d_`RO7iFqW"`3q@iYo<4#+6eI9L.F,F+ChSO2e?R4m3dVX3q/a5;%lCKckkF@qiF0-";m.Qku-Z"(GFS`Ek!F%;K24IU;?[UUsh6U:`"\H:SchR^db\9X(obK,]'#G`5I7KE&!e?^:,]cWZb9S2jMPdUc%Z!R>%>*)Qm$B./!&t47>rq'?&'KqW7!css2Si3<oJ-F931O]=feecu]E`-0EZ\8unZXrmJBJ7!bc8YGE!0!j\bZ!nn+2icWRR2c+%U)3/X?M$7f[C_L&=mTF=RFGl+(r0o^9*bgZ$0O$kNdXM<D.'g;oMcJ(HgG<O[U<LO4!sb`5=`4)FRRX)NWWjcd/c@n[Ugja[4pe>%8`k9#Q6;AuZ-HP;(A!!`<3d*Wbm$,/(q[:FX7)K>6$jGIB0+\jn^>7oM)QVW`[`jjiFL"D2kMM]6i&iD1Gp%$)H%m*Bj.F8fF67!%GdkZa)t`6^`?B)]/S4/:\_TsdCo0I,5rWO:>uk6CoJ?lKYieB=##'"KoS)ig>=$=$\fOR6on>daf&j_bKGJ$p2#N,3o\Xu;$+&q0%E^J?mlunmU/&ZW.&.JZ(Qi>Y]$3EhoXH?enRrIl`&3B3r4E=j`A]NQjb9_[ZdfJhZD9a0oAoH`DYfDmL:Ys29`4J/\!?HNVNr$\b%XH5eq<I.dfTA,]:-*DJR=hp05q*%;:U4XkaRMo9Qe]re+Vt]"W'->;A&<Bp$JWpnGPkJ%i_V$DaQg\rRp9n/%lfRJXr.b7FjMe3/%5[>;>kdT=\,I8dP)_]S+qZ"H.$<":CNGYg'bS4'\B_P(lUrD6*k]XVnGT=Oh=6gM$S@lDr\m7YpUO%M5hWok4]@#^+)&QjL>&'sm%N=BhX[q9QDph"\a&N6"dqCrYM0Q%Ik/'KCh2BRSgS.oAM7"OiZRKBR,Vi24T.4!Aenasm]8qEA=fu)i50G1*E8WceO?f',EFpQam%Yp8t4^s$5;B=%e3@#C]\lh(ZPgjpPD&-V&r$O`U,F33a(Gq7V@+)K0bSqD]n!k-oJI;k_%,J*&-SJVs[6iRX(n^qQ5W$h<6`R:8:%!V(RgMTJs(kfN"P=5HW3p!k$6%4lU#>ndVSb3XtAr1AP4<kUKeLVf`\P^>qZLsYMPhQY2n6QYZ?:[<jsf_OCpH-WbnMb2?,A:$Mn%-SJ2'U%4B9-c1g=[7MGJVO)]teKu=JnBd]TdSV27o9@.]6=EEBY#[l1bEk/e][dFT,l&3I%<b'DbWSRq0qYOH(XN++I^0U?B-'Xd%G:&8PC(etJ-%:]M8M#,0#e@=ap,B>*#E8MT%^]mF/g;_h:ZAU^9p%L[=V5ueN:ojVA'UMMI^iCH(N^Q_T1C'hB^'@E/2<CCRSbLs%M0mdMS#TR5ER3@?;AnF?Rc,.'.$KK)[Y7/E_3[OEZZ^Y/\cB["l^m%6d=dMKWj,Apmbs@q&6b#\n9i(co'dUDoJsn:@2d6Fh/2;t%-6ND%3EiN+C-LDJ/XJ(gk5J%(qYtgM>,9:_kJ]n8(;dlAjWe+>[gRbK\J"6P[]O%N\qjeT9p=^mW?trh&!qpsLs27K#tZdK`!E+[%O`J&*pcW?mQq>7@2[i).oJ$Zqo>K6L9I1?Me^m"'YKMl5-S.J4IVsqWht`q4<,1(0<MZ3!2WFJ0<VWQ:n3#f0lVWZFColB_fP$>X%o#1O$l@BhV8o@hH9U#]r`89P*-e<?oP-LICV6HeH2!0%hJ.9s?3#5Y5k#S>sM&i!?//fI6r^s1*k)4et6H[]@Q62Y>pc3=&o-D51%_e)[cDYau'13_/G!S%;$iuP0=[hj(el(#JX3!*2slF5O[RAeH8=<=J%5`th[qQALn"_,&/Y6dH:Ki.]`'ieu1:p.h;Q91R<%h8/3%9I+[DRcS!1\RmN'AY3C9T[*\Ed"If.s/0*VjFf"iOMInakp9u@q5O'tpK$SEkr['fP,J>4R6dD]5<%7l6c[Fd8?A`GRouhLKdLd(%rCcLi[LX4ifYkpZ&5Ou+[EP5h3<,DnWCSCsCmN\cU8egG!!nHh@W>%$/,3cFAo-0BXOZYE,YherS!]rYgEDt[RYV6_Fq-R<17N%Y%Ipc'Q^HZpN3SNfn@Ur[\GLQ?[ZRX$Y`cBUN]O[AMN3-DLE)ujpJg;eJCEBa-j[C^2NG0r!6u5"fkS07.P,6MWVT#rQ)?cLaP<<1#%L[B4ZgDf6fF],7(e%`d#EPRF)dI=-Zg+,AJe$quI-sf(fI[WWi`<p6r#/_lE*R[m#0?0[J"r<5n^iXV!,^;WhP6Wl8#&ggdg3P?N%;\j"R4[5a.cUn8"0\?E\@<Qb4-C0"!e^FFeCujmTjFNMCUciB,@6oke2BlV)1SnAMRh(O!;5t@j@6\H+UqmOC8p%L8!=R>h0ED)8%OYWa-mIAK+jUdQ*"UP43A7ZD^8+SDAr`qi.G7+i2(pFT9&/N077FWTe_AP>]=:1h@o;I&=7pVS%LtPcDQ9r`ReZWCi<0._cPLu9!%[8<7mdOG>bd?E_7`Zt;A0uLb,Q8"'%):S!BAE49*>1LWMa5.*Li_b;LA&I^%P9\8bfQ'6`)t(pN7.;CZcYR"R)_i$`#4,HY%LhnK%Yqs;?p,o>nDFO);)QcIg'PqSJ"TZ5J2[K)+M"<bBU7g'KRLh\Z.h!SJa2'_?MEG;2ZdNtu[OSIT6.?>G>N)s;jWY4O>@7;;m=!QS%1*>.`1L>_g9`[:f`u&LT)m'?RXr`rDK7JC7`6V;:B[31^`RlY^K@sa\B`&;VPHXB,'FG2kq.bF7\-uJD(8Itm+)ON6+^fDH";[-Z%GWTuA1fu-ck?pj^&mA'rcti]?G\G_eTgK%HA5"NZB+_K^6r#DT,]d*)MNklF-.4R<AIhcDY\D*-BIo6pFnCigkK>@`=Lam<fE^lO%5@FTZ180lK5n>@b=AVlR%J=oq-)hYZ=d5"pP;g.Y#59`X&OeM?-qGb6gSsh_53Yc\k'p8@aAu*F8eiPSE6+H/_/V?@-RU2Fd26uR%4kT$Qqm7CUr=XX_VhKCsLO4ZB@&?\Y7qFb">`:]%F/V627e$U(6jrT(jIt'RG0ToUWKUl`$Xi/Akd$e&p_LU&6aKC$]K4>U/?T?t%<$<E/&1.!KeFMe,"AEtF,qla\'86.2aApKAEqn5@ZD@RPTgddHcG9nl;tDgJ+(m6,iT9P7"D+U`aGt0CAf_Otmg%J-];+L$#:hL+%^7[=`*-T,feceMK4^]1uk$&ZLaP-\GkYQe,h9f8VrW1.NCB"TJKkC`ts(D6L?^3Z;Ci?WHj/3k2q1QbF-HK!kCmB\Cdc0C1,HND+%F9E@6P-A*\e:nju;`D[$#d!o2K`-Xg@&&r%Frm*3J2skrD*L.kLGGe2K^B8Np;AB,j%QkF7LV4t)m<tf/%?(%oUcum"NL<PkB7\I%\oO\^$ibeG;t'mO?%uHe@3a5urkA>=Lb62&ef8+t48uLnd\&PL@ZZMn(/)1"F\;#a$B4^+C9GV/i^cujD8X0CcJL/+lm6.1B]u"u%``jn^HZU;/(<Ui/r&,\a/n%m6:R-J$N:X:n;kS*:&.G"j[%C;ZKoqRd=j1Im-RAq\R$?kpcBF-f#mk$2Op_>[8S,o(AGFe4=hJ5n%/c+f^8qBX7d]U29kmg^Q+?r+r3Y4j,U<R.pqsS&0J`V+QkL-e<'Z:!qWWYXW4UJh><1V'sBe$#@?RQkK@CA^R#HU&@^%p_^i/*RN%9`j2`pATheT&LUD+26S:WG)'K#t]$e$&6bIALC&24C:SoK*SQGWY_%$])grh^]VgKGN8Iu^dH?^pCf&g7%,Z9D5gY,+,m=80"r3g%;\']u(LU"`7*Mc6^J`&]mD;D;%U`kthl:cM-Irj"IY!4W(D&6k9"XaM`gAnQI-nF$2L-KLCe?N&.s)]u>BiCWg?PrlM#a;@!\n$s%@tb9Y_PZm;IRZ4`qst]Y#h@-VGsabkr&kFCA*S6r,M[WWcmGR/HAGbCNlq0,*&,P4JS\]"1#s)PW7tE9i'=*YG1k:#5)q?&,m#TG%J;:CU%&NgZYO2+iZFX(QA5*n9J47[gFeaj?Juc6#0_1"ljc:FFdHHksJ=2aR1tgZ@=dg?_[$)_'O3nXWq,>QWgQBg^dGj\BD2T=Q%d>0W#^iW"HApH2NKBF.(e=M^*9.M?n6FUbt<`Ynrl)G[$!5QnXI[fW#*+n"p_Ul!eANYhic3VDIbCA681V%$c#pli*1PO3aO,^<D%b'Y>IS0j%/4JCG8q_X6U[mgkbPWbd4T23ZP!rW]Y$GWtT;#94-i&0]rM=inbUHq\p2I?(HF*uU('DB@J@,o,:`59?u6fRIh@@#8$%*qo!%qW^RgQe\hUXTaGm?t)%_oHRog:CfN-FdkR:5^<]s+0XRB%%#rAR0BQOSMW&sF$C9NIP>)&r4SY<kk0f8:TEW-6:'+">M$?S%PGh56I7slqOfO48B&AKUq^KQrRD`-8^<1c_dNqqkQ&bRqm5n9BYF`,i;#PJrQ2m,</KlPcqGK9oeX@6U\s\+em;-,R9)/4ig8ue7%L<K"TXIk>n:=f<pmP?,Y&\3aT'n>_R>i&=i^$7D\5pI!I"7$Ra5[Y3qIJS0L%E04B(Mu*>XB+^F[#Pr%(k)9Xa>Z&/?\6(ZFgL'%%gS+B\)HTa<oqAT#mT\lJksN96[r/Vbhk3eC&qFn6;5$eioIa&mcShspF(Gt?f5S2np]k;.npN.amKXdPc/0bj(=+SQdKA7l8rn,C%opjO"kOm=U6plQpP(Z[BFu(V.rF,oLQQWO\IZLE'0;cuWSUQUGo[OmV<u1D4)@6Os<GQ_O:kDa,>s]t5Qm;<B2>#Y8j_T;af^Q()%<qHpVdm@Vjde>)'',Hco$K]C:-J9b11a&RZa!)k9f=,@@llmbWMS*QGL>!eM`$*9H;]/JdDA$KQ@T\rOHV@A'h\Du0Z`j'8!n9u[%1TDY1,kpf?lEJZ2M<VqSQ<n$aJL/W$%0OApAVU;q7r1'4IMX#7^marm@J,@i6gkmh'?D[)\da-0gKC$!^$c88WMrq9?4Qq%<TN\'%BLh$k;X/%?;R6smILD66(=)#SL"6#oM%eROTbfo"*N'`qS4ceL7+PU(:S:UEiJ.^A(k"NNG.b&12>>BhN4Qmf[:9g[kYlS)Y"1>Q%X>KZ(k6-`f?;PdeT*6^&i`-u=:<OmZWbZ>V/PppO#XDo"@UsQ?^,)6H)]GQ]XPV1GK[.Lec2V3oMpS%9;6Cqo8[:"0d['8k0AknG%D9e'1k?8[mKAM$fNg^'l36ba\$ksbGEE85Q[d`OklnbcWDp(+=T_EnMo*SdnH]6c-B%aIIl$fiDSG`Zg%=_U:h&8/LrB#;L$;jLH%cu*Z"For_jIV]%Zd]h#=Z%Heeq^D2s!NQ%Eg?6t?[Ud?]@g+^8'1Th9[;k!4OH-#63Bjef?n]`BUD_2<J^q9<_i"Y"\"r-`^oU1!%T5%^%:LAi3%E1%!U8@=@B;##+m_nh;BE3SDAtccCORaPIm?lrKE$DRmfWeNnjL`c:*K,1@>q'eJU.sMCZTf^PpD3aZ8J#QEBJ\6,%$P442@+*ZB@m*nb]RSj2@AssnP7AD#^\kd6IKXT")Y@<;glh3m^%SHOd&Q^upWBG?Hhj^VT@K`<DXd+_E\B/l!AnC$o;akDKS:)^%nnD,HYoaQ6I9FgATOrQOb^;H'Wd&E7EQJga*7lP@Po;.2H:$doV.gRN:JR+>r#`p<5"oUOaTBViD;UuT\>^en"h)Z%M*(6@8n_EB%2"YOcl)RdS7n5ck/K$EN6Q_f3/],SD9MD?l?1Fk?*H$+(ftAd="s;'gY(X+kbhB2CDc^o?$tIk:eF\j5b"[4#ibNlo<sQYU1P9%/%kE6?Vr,]+En0HOG)'!Vpgu`\;lrb(L\)qA]XpcTu,%bjj^,:97/sRSd#%A'&WP^[f"ZbuFVlCuA3:VHN@Ire^f90;ehIs^9@m-j&%3Io@fTuh)IV%618@6o[T[E]:>-6Ii?Kc3](n-deBbO)?j=KPH$!ilXl"brSJ<s6+31ERRI/p/F_2SIeDf9d)NRMsq\e/H3j%sI=/%>YFi23FAqoEr6A``Ml:%"e@"kI]ZUgiuf?o?sj1L-*<hK7lSoa_/W>D%%s>\NNjHW,fq&\>j9BC3sD\MX]_a&"r*)Xn?o'9/rD[W%VtdElUSDJ.R)WgDPPP[k/j:sO!ipVSP\&Ab0Zb2S)1;X)1BE^h;1dHI\q.IBr+K7+e0oOV-;?]u)gb[gm[AWTB@Y$cY22mg\r)as%aT-dnO$-!)cmXk6T>6'3#X5b`*l(=887^r77Dte\A]Wu*5,T`$J`#o`s&Wg!*.`6Y!2&m2/jh2C^hD[>f&XaFUb]IhV,:ea1I[QP%@7#,8.=/MtSpWuBI2V@BR"GGJ?.9&2YZ:#m8'E%9n=$4k(L8a))"YR.Rc5Y)$=jf?*'?Asm<l\Xj'1Un_$RFa02u7!=Z@[k-XB&3%$]!n\Zka65HSu65j+[VI,n0C%=3ZWcUreU`L]dU5XCq;hFXHYnPoB?1#=_M3EocdA9PXNHZu^du5?+l?9Fh5<GeUu9c4!.WT]<im%[*NHk_Z?uMWu/'rc#.ef"\&aiSbsTV7)#rpIj^3G0<f.\A74'd`7g(*ldO/3dnKJVM&f@GoDFLu4(&*LV#[S]d>"G9@*VSIdTPEb%%V,-pA\"lmM_EeDkpsK,Gi2,BN4d!?4<LJAAGW,D)]3.I`r+-oDci9'!)-9?c6YJq[)XfToOSgf?":0QW9\E4LgC<'[;WuO9`e",%8KLR\o*l"=)-5\e99;8i$e6reR!aJSF(4847[=n&d'mSB,i%akT%Col1$/QL-@67M?leon*X8([rJ\c6FdMa7QZX.4P\sT&c##!N%g<'n#S;(DkSRs"n5DI5s9.,-Jco:*-ROUe!>[_nK3A.9cYEX3qrE0,kZ#q1sk"uQA2nAgW.(A73D'%>+Y$Q#.=[lfDLILpT^3/n9%#K38]@WEA37XZIVmMR$_<5dddOhVd=Lc"U8%SRB;?oplU\(,hC&VJJ;VfYiVh(#;rb\Kn+j=AMg.'O`$K?p@e=DQ4:;5-^A/3VV0%$;:q<\E$jks-hAE:`.R4%?.i_."P@$$W%\PDMpC&7(>j*-H>.>9^IALkir=f8$c22j%g=W%62qO4dJio:!\/)_+L)eJNXkh+mKn&%+:W"Lf<6oSBNMa57Rn_RgIIn7fX8=nNFl*as-$`g0oG=!]Kfs<AsZomaDbPbP?<m<COU-nmLN?`;gqPt>qn$FKB"39nbH&DdKRI-%cR5Dr0t#4Rer$<m;PLp"k91EuB:(,#pgfC6WUVHR_6?P5X\5&]e9%qe2:<8NeqER=gk&Ipf\60ZgLo0tD8QaLhMpd1SM:<:e7IhE%Iu]XpDhnHK1,9JhAsB'Iq=<TZ>mFQcc?bI-NW-jEIR'/R9?rAFr$1!/q'h?KoN'U%-!leX`V.?,X?0j*J#3ah,/#'Q\]P#\%4H)F%^h0jGYULA00Xj\%b,?i2*8"YA!\b^4P@i!%lbnNP0AQ9(g8u&NchN3a]0e/lgBp>)9rqHT-WN?73;,'c\K.n;V+c!:,=8)`[O2$,%rO!>l:tQa&ffCUJ>uk-UV[t1UQF-1%JKSp%J4[a!F%cu+:BL7ZZ2ZFlQ(\tka2r^5mb-KO''1M\_n3RQK_3&Ai<r7O?L<gH:MdGn%M(5\*lq&^iBL1aGauuM13?J4M.H^(j.K2ARES_g]dTa9CVi_\r=O5CcCV<Kfr.9pbEA\"EhfT$tWd"T!2>a%<UuJT"Z])V)L6c,@%MZR(=4[VDN9F'`fHfQ1@[r$2/ak=mh]_@9c2YVEh[jIlOZ/TApOoN8a&5I&i1V"YU-/7?MLW6rdgg>)tUDCLlp0i"BZ*4EfA%6ZJ%&]Nsn$E.SF;nfh+PeY0#ce="#T$YCNr*X&&,5/+*.(sWZ9AU>g04^-:k"f9G)]N:_=mPh@`;D^dO4;(6?/^V?W0F7GFbfaCSNeLZ%oH>Mj1f<AP?:p&$'SZT@cWsuaoM0*GRqmjT@Ir_<1`8408_Qen*d!Em_s&[8kaC=/"9\hU40#DR<'rBm@N_m7mAcE_D;Eg!p'RB:%-#R35j"N*n\ULTJ]S%ItT5so_h%H/ET]V>$+`u)+40V%1JSA9Ri!U^8lleKV=e8`>\[A^iY7?rXAuf(B.jUc94He,6[AL2!Pp`B*%e#3/7f8O>+5Y9#d2FD4*@5kGg6Q3)WDUT*W,,QZ*JnA?NC:APtqrdm=Qbtl=S^YmKD+FVl+sg"2UCa2pmu-:Pl#lQb4sjb&hs!e#%E([e%-=0>;cuL(@)3)Q&GiX#8f/4`.+ggm5r7mj7dnb3TUd3X,U`Y[L>NJUe8'3bin^Hn)Zk,F#J"ofP%l;9hFKt4,-MkkX95QXH%lkRWQ-h%(C454o6C6*pIX9,d&o50f!BiLX`@rS`c:GE(bki^kJf?sN&ITmh4L/phEpA^2Tlai6a=-B_f"nt7i+3&eW[R4SgXS4Xe%9bp#+,*=($`$`qHSQpJh:1[EKbZE=!0rC0-A-M#,b\9Do7d]^aUt$U=ni@C-&t=1&N:N!8Dn[/#S@o(8`p5KY2H+'B]6`9[-@%8o%=-*S6$/o8cXINCC=e*K9TClHI.'BnY7@h\8CucM<L%P\/??(Z<2_R4MOkfKn%uN/c#NgCSD49mCRl<\]5^kG)f(_CTChR*jF\B54%.&6'6^,IdC*]')CL@M$T\"5E_O5\^&c;\_'Xf!'N%4>cTFVe0e,FKK*A_@Y76e>IH6)Iu$gWAbP'?tm%J+#@'o_uP!O=K_4[\f(<%9lsZDJMk32>qo;+/:+D:GC`V*N7a.t)hlfs4m7oVFh/ZGWVh9KGDie/%OKc\&8=ZKU(R:AWYV'F9GJ#$QeW)(@R"=[TokDLELA:^%Od2d."_%nJFHkYTGVQ$*raBF"-O/*W@CQ3L7?/H<i,j+k'iCSaMDKV_hZc0,#%]_PX>+huFKAPk7sU4YM=Xr#N%8_cgWo94_daeZ%56LEY+*p@c=pnui";,-3[tD&m7OQ@mNeG,qep!@h!8/4`YE%\/*[=u4pqB.IBT0Z!j>>^6UXgN27:?f`kl-RU26B"LBYtrsdjOTo%b,[a".L>uZcc$1#nK'eb!9;c/dsL/QM%@Po76b6<p'7MgLcj@r'&u#l,MItDUT3't2*ciZ:l&?Ml,Jt\au!Gl6Bhr@=M[#$a0;[L%6`pV+YSCO4VV;:pXI9>P,,E#q7#KS-<<XL?#XWMdZ;r2gPqEJ!AYZnfDMlILpKm_<W$DXu">YM2QdP'rofrp;TJ?@m*/4Tn4A]G_%_:m8LNfjK[+>5%L';MUu9sNqSVSM3#*IbC>`<Tkq1O"XdNVD."7=rDE2tMk?Nn$2G!s+8S!g%4.O=(Mjdl2,jOC%4i3g/3q``L]L%]0+(W^QFnQ#&;2RhRl#QON+R*]U"Db3'OMVpqt3:n#8(<=>6+9*1&*GZVu0,?:##T"cWY(U$$Ol.J&p3%%(TdJb^=@.[5ms["=Z=%+6q@8rei5W)U"6F!Rt4e]%<1[^m%10"j]@CY_%-6bltZC1r+flpUF:)XGA<Oaqj.O^NZ:or?UboROJ'@T1;k8<;bTeLB1s)^G\a3%qX`p$*tr-eg]$QXlrAVZdIt7ID\4=*"R`:8057#'Y<tcY8F"+4cj`Z=WgE[=h[AHjHp^_=@`:pZ\O*WndV2Y!_rg^r[_q#YG8)`B%%Wi$q`kBMG#::1:7Ob71H^W,&Cs=Q<f(;YSa:A>ng;Xj2MSe^\/KQWY"i*7p;(33YLm<M'$Y4s3UU&Vcp=E75=@VCtSXh]9$9DB,%]@2-HA\.^nVF1B,+u:sqdK/*+.V`/\:_[BA'X7!XSL2AQ?Iq"C0NR#liGum2H]6V'?dBb<mD87.&#&N`Zbl57;&n#7ooP:3S%qo(%+]SAS4gqMV^<:@&<`N.H<-=&o&X-FFGKI.=+Vd*@'(\Zs<E@XQd07j58&?2`ir+k\<n0(Xe,<7RRAeQhO/O6F@N"s'-NM@ki#(NP%egI-P/XF_E)uq\CXJ$os2AiecQrV!#Be:L(HP4bTkA_t3?`XK3"*.oYdN;0'_dWAZmus5mON5hU<&`.VP.gpnC2E[Gj2[B+O14[,%5iIX#b8eA'QA9gb%lVd&0qa(ClPiZ_oBrepM?XAd,ate-k6`WN$s$ADbHcg![42[o88cL)!"Xe/fL`o3MLWYgSm.?Fnm",VI4m[2%9i322G>=!\aN/l,JOlQBjgR"-+0jS]\M>7R97EkK6UcRYG/:dNjON<9T@ELL64]0+"C<aRYubK'Z++'_%UuM0?BL6A]%7Ddo[G^i%0Uj&ikH<MBk!;,)<47qhMVdHoF?<oY,@]KRMfeGH,B:&PLT(P8pGO^:9=5XLmtqPD7S_rW9Y%sS<(bNQ5VqaL*D5&e-8luSSp!JH%%r@(\knU$Tmfngqd?qaThl+ZD>baO^/M%T05NVSaCN??#"Zb?e/`+>n$,Z%ta-cEKX&:4+5OS`P1BXQkMC2%'_LrT@Z&QErUORZG%^spIR'K:R,85-;m3Rc+@Db?31O7PDBNkS;C3l/;!f$,C;!)sWUTE;"e7UT^&!p3eiYls+em0"A4!u3Ob##]5MAH7]EX_iAO='Wf%%rpBLafgH3=:L16&,Z+fN1&Q\OmRgmODfqmrS#kRL+,:X74:TcsXB/QZi+ZTU4<?RAo&c07NsJfZh!6tMUZ`X6q4"oNBJC`-__kH9%d-$h7A^sn1V`#)_IbuS*(-#,6crKroq(q$a\CKD7SK/.&po252"a<^E7jsak,7rP]g);=;Bi^D_d.*n_dJpoYP_3Bgq]B[B&!EUl%lUO/uY)8EgYJ%6Z$bIsLKR20qRH$]%'l?M>:B%f^WgS#EM9FaXBlT]Q\(E7Z@)`je2?aHcQb,X:DLa,=pA#9=b\m31p3Dfgi)KTo%B40^m`LKq:'0_+p$Sa03T7Ls-drg/BMbiL1!_S$N<m7K]C!6Q!`X^*6=hNcjgU.bNQD/tj7L=gMID@;\^aRu4dNJkF-=pkt%Z7Cp%&:HM+Fdng8]6dEBs+=;d57ecG@PZU^0[c8K>iZ)g(Z-"Ii?o[>Ej0b\%+q)]eM[/=nT%aY_k!#rAfHjj$aJiuUX`!/Y/Tqa<r9@G%2:;Re)<jq+WQC$E*SW0.]#QZn$n3J5:1T?P,3F^!"j(MHH%SHE=LOIhIe)]T'rl)hb"!uj02)\S]Q7,-cg,t-XaR-*?I(GAK.s1Z%Z8O.4iu(un(agQZ71j^:/3jq)`/ZA:S.3VbXY-r$m1c1>?$@#fb).+QQ,[u"mZl9\h4',a$s+/32\HrJQZf>L&)5J=qE1+/4^/e>%1c=^*Kp'lMV49U4K)]SQ1uYVGH=5JRrPrP=:iTjK!CXR-fQ!mmMjnhE;B`85Y[5qtiORtd3r"eA_KJ_7o"-Ft-`6W,hQfk`''or6%;TB8s?2!ZsUK88IM)&Rr=/>>>c0N%YpGR:sZ0SG)Vos2OXtS?iX1A!=OVOe&['qG`:gIK`G@4Y*GG%.c0lUE!eteJkTqR@N-a="g%?3Q<?QsI4#+'/uX00CFaSg*tQmbOns.`$;H^"^YQA$,M\$:Q-Ncrqp;B[\03^Z<tj&d'KSkNM>Vl*<$F>Xia+js3"NO7GTUC#\<o%8ul)p87`@e^=GU2=LSkm[jhZG+DPgQ`C,RrT`744N`CQ`a)M>W?R'ho(D]Rp0H"&<ri4'5\VjiBniGrFk0?kJW.kp(AtBKrY#,1h%=klp0itJl-5qO326fj9qS$h0!a/gnEm8Am'EX(s.;Olq8W%I+7HN3'IK%u1D5%mU^id`S$2qVh)fP];[B("o')7M/?9%[1;p0_q*%c<uJ#H'FlUrR!k2KYi.H)RI<nCgC)ZHm+1DZ`YT4!/u:M5?K7K%k5?&@0;+lc;(MFI1ToF`=**jBN2W#[YIH+LjAXtVpJ>"9i;IW%3tV"p2$o!`9LsH3,7GuN2H.J*VA4U_8GU4\Zmpm6.[Kei@)Ie."#-3igR`C!Qe9+bXSK0CKE,#6.Pu+qdtqom1W0?a8qmFL&9kJ_%(VYi.E!>VOK"!6@(p-f&Q]rQcb/MI8OVZ:$q#[AdNo5nrC-n*D2g6X8,A*kJoOa-J6T20FhuG0U3_MhjQ2!Mb*<8_?G%b98]Dk>:%$la\pl*1$j=Cop097%Zr93M]@bM)E-U_4J5#,Ta'BEYad3fBXh+HH"NZA,4\1&BeoQ1,[!$bFW]_oYs/3)EHr0`#(SKeR^Y?"9nW%1)/m9Ql6<l^mkF3T3#g0hIfciLFA=lQX5;*DZ2Ze>bVJ?rl:VL187k=FY=3TC,3^?[pjD](gZe35Wa>.91TRS9YJEmFnasdQ-Gbs%Tp-WXH#J[41[G0)bTd/N'0cbd('b`p9&_V3%J)@>)E.(-dD4aQIZ8)?qX8Qb>aiIpVBn7Ne9J?<63@IT<kY*E*]Sra%B&$6>)8b]%oU[)\U_.>[AoUcqA^K"qg-\dE5t%T2A(ZeRfBJC51*^YGN)OH/:XK;(7a(N"gG0IHlXqUj@Toq;@iE$7T!Cu>9EGiH$#ZmAAt\%L%Sf'7c8ACoIFB>GlBr>7]1D@\-A(inlc?\s9bg3rImL=-l9[?SBKJkTZWf3m&B`PuioSsNa3KMcqoHLf+_trJ04scUAN'^ggllF.*%GPY?AmW@aCCVL]i6Lej9)`?:Wr+eE)TVTFBl<TY^XH\eTA#'(@iXM4B"/^AAeAjHeLW/6mAZ:2>fNtBJ^_@9\4\4EJ]r]8E7q02J%o[YQ.h>`Hb^)4M\oua3j+ZhA(L-EQC`5ICq"Rj-j:ft+j(b/PZoh[4t0IFXKZ\OS]^I@:2[q?;0O2F*LEUkCHYB^2,]`:0#f3s#.%a!.`q>aL*[$.&\lh9lh=,(n!h:)[0eat.74e=FMtrW9^N(cHk4p'Rm\V0WaF`jLTXicQo[#Q5&=2E!<M]-O/-;ZW8D-u.u/!in3%%f]@Np/I6cl$E-.j+Ze#Ha!$BSJ]+(Rd&[Jn^8_50<;GfCC[gh<i\D]cAa7iTCS-st-<BkRA(4P3FEqM5;-?2JC*H(d%.@pHGQdlk%iP]!&`'cTi(Y=Umce\T1U87m&>4nQZ-8a%m;WUnIXQaVl:7:SO]A%*TJ#/S@Yq9XLp%,1YK/498-W.I-DUQA-A9J4A*hlP96EYeb%"HM:1M_.T=]S`Y&I>Xt0)!b+"7&>=#j4o@D:1Rb3G4UVP_&4W.G`1c"*5V8mMB[\gN`Xc_Rh[;sr*6_L2=eT_(>\A)[FF+766#o$%Z"Z1JBJ>_`95Qe.[/#W^iNo6daGEK:l&#rEK:OPe-ttb--_Nfs+.q5&DnN?r73pHkZOGC@^+ag2[%RM1FK8)tSHMEW(kLQ[mr=3o%PK8_PZ_hSd*]Sjr=*r@JEgJEE._RNnJP,Y#jQ@@c-]2@d0aenTRj,O#IS-IXZ4air'ZauV.B!n^aAeS?*.pjOSe.R+40Z<*%LUti%:lGY0JWEJS2<VfV*>B<io@$F$_B^`2rn8r(/W#?=@.!_MT14C6V0?LAJS%R*-aWNX0KFW6M4G'B!^LFWe;H?aR*buZ.CA0In8jXX%X]T_,Q+ALNf!q7$nU3l*]ST-.B56$4O\.@4`ko3f*rRm@inh@bRYps4d.Yd?_I8CC:me:EB2[oia>B^sD2`$.Y[F$;<eHC7oUsqC%etu5VbYK$E`AqDX?a;ajP(ikJrF1nR_0`4XJW\<1B5AUV8j5Q-npjte7bWn_gGuKC/VQ_g\)pU&Mm,,o)3-;YpDRUkI+jEV57.hP%8iH&cY@F7);4JlNoMK"us1DJD3q-2]49rbB*.k#!Fs8Wk_!ho6AVsM&kBq:VnJQY6)W^hm69[Y(n;V9;^<T#I>#D,GZ"=5hWL6S>%!_X,<e0*q'%B:>*(`^!noFph0BhmX_hFhJnY7h]rZ*DeB=%orhe;n/fPV>,,?Y<[Xn>u0IW[e#T?c+B`'icY8F+t*'`L=$s@SX!_%'EGpghY'C>;bcgk?HoWK73u!1:;cV`#/Js6go&#B\a:^8`h40Z#Oc[*_=k2?0DQo"(>opqG3I+*^_6(;8'G)nRAm,+#ql;PDtuSt%65A>_)"HMa.'YEu2QbKQbb,>dqSRUlYSM_hc,DD:CmC>o#?8G.*0WbL#kH(FliDm>YnH=6NRSMUE\YZd+D&b1dLdL[4Q[=o</tXl%i0_Q,G$t$,o:3iMja($=AGR`$=K$pR4Z8$Lknr]YB'%1YQsgH7bMu_k3X2X$hIZioS1rK.S/qdJVus[2CXG$hbX2H]eiGObPMQp:%[8GLH6.LDCWm`NGC,O7`"(8r05V`ZPA:mQ`6tc(3616[_HfX."Q.V<r8:3$VNkP%bp+Aqi)$UTHlMt'oObOdU&$"%6Y9?<X$1GYP%Rn+i0=8]nZ4GgIYPTZHiosY8\#@a<+`jGm]##cP3Qmn1YLoHf6ik&oWFqq_#c]^DjFF,UJ/DF6MLA)T`MD!js'*#X],7,!pT<;45%$4T'@"De>^Y,WdiV-@3nLl'Bu:96X;6Fj\ZFN_UE?-0Sl6S2?.2D$,XDIr'2CAo9Kg;$aWESYG3YE"j#ioI\r1=QsX7Ho)4@ILjq%#7#!U[iY!-[ROYEL]rNs,Hu.8!TWqU-N7V[Q%]k=2_-i/2hc-5:PLoH99,um6M=+H-?[s:[]`l<'%fB(enELU!jdJ20k:G!F5N1s%9".R!D*2Ym4k:3JXS<>N!n:9ZN*LeHg.Anu+ui4HC^hY"8A@8rCt-Y(qYSPP].e;_eIu-tb:/6-F-<6.?AY4,b%c%^%^&N4GBSe<%T@b!k#u[3tm!_[)ASRjZ.s^U5XfXdJ?%,0Vo,K@H4esF>inN2&!#A3\2)?tQUKld8@tb#Sc?hfTE$jlUMdAE#;0@>`LE`i"IX7:u%]WjHOdNMF:0rb]$r_BS>0U/rSQX8F,jRec,lgY'KOquN<.0=pibZ!\Zrn!?`$]W"@SjTFWl$HtR5@^7/mX?XQW>l9lD5?8S8BZYZ%ho8GT=GIAW<J+)X9CcF(%_BF<,")(2\@2kt9?8cW,M$U1ks2,-4,VX.p^&5Bf)m7S8mb.+cg:_FE0U+^EeP5-%!B#%M&h#<@U4<8%4#$)I'[*dL&D,kt7d9Jd@nRn'T2>7:S/q+g,)le/h_iUY::BiV'k9JHJWEq..Alf$.]\?\1mQE4AbFhc8HVRrFUr+SipJ.*M'ucm%Z'("@MX/?,91e\elR,1&Z/"R-[H"AuVJKg7PD_R8UL8n<O\L#C(e7/.rp\I4kD)[[okO&n!Gh*=qG)\u;jsm*?d]fa`(\m9@jl_(%_HO=-'K-_sf6%Y;_qOj2[Edg2[+kQ(]%-!\8Q\aCM%^9;b.3AFL4LWI</)/U6sC2kR31BPcuVdVIDqcLa&/&VThn4Pf$r#k`F->i%W$TJs,+^EJ0[',G`*bis-B34R0eHSaUc'lbc>[7T'HsS_eXP[)+AIN$_(IX&RmK]^ek3%-S(5^e#"IGA<M,[[[INi+:=S@pEk;j>%B3J=!Q.L_jWf"lT^DH=8WmE9N12I"ll1+9Oj^W(J]jj[2.LsKHe7aZH@<U.AkA'9E1IqUX#s.bQ*)\3(<qg?sO9L9NNW&gho&&m7%N&)"PN3[;\Pnb+3CIFl0(%cA<.(iP/_n]@qrsUYJj<S5jS@k+nh:I`7L(jf!A(-\#^"q:C@>S*'qE8I]!i&,7;al@2_!7Hd4Wcb:%0rsWJc4InH:@$:BG,0ee#tgg5Y['D+]eBFj&?+UjU)FtYZS*oFInT_u`],QHs%[%Q;rVq?BE=llM8(DoP?@-S5b*j7moH$=IW#X)%K;RW8l;9f@N@RW,!lD&P2d462(^fpB:&Xuf&K7?+$o,el:R!F7N9)a@U0,Qg;8/"AcCa.-%df&_Z/jm,ccP#DLAI1\<::KEZF5t+%2NO'tT8$)IMJb\ic'Wha(fGhTJ?o>]H@RP#,+*e+AimcSOsY>5.IqCF8lfpZ7]RSt'&8>[<CKURDSRZe6Ytr!XK3X)90B[,%?9),%ZUBFMFYB0>**=fl2Z7o\K"Rr+FV`!Y1[8/`psD<C)9Ng?G23Bj%\:rC%TUXZCX!\Z'q]+]KKmsMB=7i9![$0EB0aP6TkL<hB4,6Z%O9B3$VR%itO4UNC']!N"KA07DQC_Cgi-,'de\?'op4W0-S*CK.n%"022dY8X_l9X#T*gqEXTuj&#Us3%Xg8h'J0G_S@#W8A'/pmb%Y1M+ZN/!Ejnaicb:4)`;?CS/8DKTn1%s'%4NBaMT=Xt@Ek0Gh5lV.*Qg,f>??N'ItGeSoY30tU%U>;@qZROtAqK*G,NE=F[.;f;8%#4dc+;9b<P>g/E;(#:&fH4ka*i9:as[8^-Rs$=]XVE8B2"WN/Xp6;;F.kY>sZue]MN`Au"<F<bP/g)o&&/(BA1$B6uJ$$[_<#K_l%-rm'M>CeNQ"M%A;-s*"A\Hj;kH5U1"!RR?cLSO&KYV%NM8lc-uo2$p%.gm3gAR]3lA!Fd)I&ZnDJ[%gC=BWW\8Kr?L3bBuUdn,',%[kV8G%#@od;-s'L1&]@!26o38<q-%ii]7.b,c&4hmE?k2*^M@WU[G+uo=u7r?=\3E'FKeaJCHP!q/\<BJ>n(5*YD0UlIQS?jGDF"%N;;"pM<HOp)dF/VRGU2iR;R]f[DW1c_#EJj>%0BL@Q\Q1.s1taIgWK*j6KCN]V]CIKsC&rR*M#5Qn\cGXV)J3Pea</<9kDo-'g7N%0gs8ClE^,n9'bmN^2H9\p?aClW/7(A+&`00csdfdWclAaQnM%4c@F'e1]-jGG3([]@!)D<f&>lH76j=Ye\G;7_g>0ca-=fNdZJ:'%W>`S;f"uKK_&lPk(<0fS@Ab!,*AA]26>.8U*f<\A@DkRG/.;dVM%%%\[oTpIY?dnLT!AngPGnRV>A?)?!MI:'n%i!3W&5PYJP"W2%=QMU#K05Wi%;mUX8pGnA]p)^10ultH74hbiJb;u+!hS?`O6GjU#Gs]"fA=he)Ib:U1>'7aH(6TV@[66h8R%t7Kh\P?9N4fQbQ>#O%YVn28Vb8qV,^+H=#p1qkKn#'@WpP9Yg\[dH^cILE/Wm=>j8#f5@G78MQ-KTX#m']5M?$K6[!Fke,4:OBWQ*4AIj&r&'eTR-$moBE%ecj(;.:=K;&Vd]1bU>IS`jH/@=_R>1R`*bhD8s)>;b+2"6lmI92=G(/P7jCo$kIBbE6pp0Wf7Nsgl7GU>#+u8RER+r)9[f]86u%t%,C0M4#phQJIB[ir;b%LRRGLV!hIo4I_me_nJ9%.Ug`%1ff![kE%DKkHNWfCrh)@%9K+cZ06&LFBBSu0QDc>.,$*9&I$lC?:F>Hof%<5HZ&YX4D6/)I_+'eh!F<)FkG/)Kh^NIV@/$=1(\f22g@U6a?E2d)1FB\>r0;^B'kVS&@D?q0)H#&B5)"Ge3N%#i<P_FU4e&PAm\%="l&<f82%W'm0PO3%.3:lYV3(.1_euTu7F11;k-tMPadjJr6:s$:&"L:fhY,GR%jI:fgN^+_"!*VQQXqd!.'8O.Jr?HiU\0.%$sM%/A49.IDFpgi-QXA='CO9IC>E[J$,9>i$7A%"g8mS2lJ<OGOZ5A*j?tuC'?Br<2tcMTF)Hj;h^Y(&K#SuJ$;6=3UWFsmeqK*>W5!/%&f<h6jW!S,i,tF/OC^!=g]_+Yau;p/O);EIAL!?Sq-:k!.Eg@Yr14DM:hIpAON+kqgFHWt9I<_N'^I#kO,F_99B6cKYWuMNYa,A%%.ij`@%q$Bpl3%km#)iR.N^;(=eBXR"aL:F\5+*qA$B>Onch219ha:BMeGr7f!BmmR@0jc&`WjON]HRlKmn6oi7oRKYf9pB$=8j2S%@gPWhf5rQ@>/]Q/*%cKYis&%QOR!,L^,tGX6F[(J?W7IKV4gp$9NrqK:1Mc`!*5@j$B4>NSZEF0-AGGtbBO>uk3H9b6OYa`e\+/5%?np\^fc9Su7St>MnEj=X:md(a/Fo$8<[!H@#r?QS1"bU/8bS\3U.Bo=+%aqodXo(9R($u&lSKH7TSMa&hT%hb_5A>I3Rq,[R:dUD%COqJ/90Qm_Lc'DHnR3/4`n-.@n\tnO"hA'6/L7+pN?Nq?;M*@:os&QVKXXRn(C%2c;M(W'iOtfN0gk1GR%f=u(CUCsgf]jX4?"s2%R3:o4>6g.Bb>7Hp@N-+kC*6PmCpttZ!G:a=DRW_"5Sm\S<5EGfH@pgP3i^<mQJpjGCU1U,0iU]O\Mho%U?;O#c.]aiFd4B>[qmg!%AnR4J3c-VtS,kCamUPsu&elV(&_("6D,\su%5ig1JP@Gg"(U%)`S=YrT$Ht)DS%2K.\m'NPSPqa#7u2f9@;L?,G9^-@dFA^kktNj%:_N?a$)f]Zg>"cK*dS&?".()6H*n?;S"?*NnLUWN=fdJ;I_jZ+h0!(EmU7Ol1&IW)-0fhOB"prU[NR2L8Ok'iK^9p.9A2)NI)[7g%p!aYK3+0rt,Bc]7/%7^I3;H:qP7S'[LXh&,;E%>jO@b9pOZIE\i4?hg6EED,AoJ+Yj(eHe/coVteGYnE;8J/.n\&h?=#R/%^doPA%e[odsKM/*.>UeY.J>\^5GG=W&.toSa$HABNV(eD2k?_%[nD<Y%fWkW9I[i%^Z5"?u_#@BP7P$]3>:Dm<a1EiC_%[T`j2I\rLQAG#%r^KJ(Ioq-L=aT#"aZ=H/<Zpc"9eikIWQc+%.@.VC*3\$="L8jqgX*UGIZ<A1-ku(p&k%\P,)A"!9dRh-X?:/r&%gY(f<r<olZBBo%3ga^k[O+W*h&a=$+gXppLrZ3d.Gl@Q=ncB"AO^?)%-d+aH+/;V#rb&(SYsUs9o&:'ons7kWtVfI#EF")msQnNNt5a`_62NSCbAua%$aICQ,t97gI?s7^Q"S)$UPrcg3e5k=3u*">p7_qa9T]$5Q$*A*'i>@)0#)mQfl:-+=_&B&iLD#`I0=_XY(JC;7U1['-[t8Zj2^3m%`?8"irtC7+?lD*/?&RasTaP:q:PG9290;-KNU,a9R`Qr>#17C:[@l&lMoKnl)&]WQL2;q:Qp&kHd]k#T7g/mM83X:BAmK@:fe0ks%#T]@W`uT;f*%g^']T0D*^o/Y)N!rdkl&KGYS=Ru(!DFgc76++Nb_)10VfO8DP+3s!l*N/,%<#ZfSqo1de=.tt\Q2j4bLJNeGfI?5%ApCa&`n:U3jEX?kR^dillN8m6n8'rja2:'[Q:*oOFV5\g!N.A3[K9JOf(,E+GOdfcc('oQBXP=7)+c+(i>jKF]-^"B$CLH1q.=8S%$Q0hC=)aek-(+j3MQUt##C`c"j"K@"ibC!Jg4p`_3UcEZj65)M>6<M>UO>A.;h0\3*F6Mh=K8Fi'j]FRBhig$1'/CME"I[cfp!>H%J%";7p>&?'"6N]-h>;L-c?(P=Nfr!7^@$q9%^B&Wh0e'h1D9m)c(sIILr(;cYG7V5Vio?.h_(I&UrV9YWdF'6p\Sj#HRTg&K97`T%pTCDirH"iX!<gCCXt+:":<#KOUTQUeMlAMC2id8$`.BK?\Js.9H0-D#et+(\Wj8;C[)!`j_N6j*H8N/TBFdDVj1=1S6XF`g8rj-5%s%6V;m>T6pD1/Z$b,YASTKStaB?ehu4<!L+p;m2@L'k/X9LMVdG8C+J'/0eclLYM.`tT3-;m\=b$T>UKN.M,J']u6RB8Mj'=Wk45%IW%2VaIKHTi8/p>*I7J+\!QStf#CROQ^GGb9\3m<'3M%@7`okq]n#d"D"*Bg!bPNO(W(V^;5'j<QSRIKHqIEl)>%>M,gX_+NU$UB%7o`BFPZ25<!fLfcir%p/&/)9JFQjB$R]rZA4nhWI.dD2js00L:[BM`t82WhhU[)JY(6.FrolpIIJIQlQ.,&u^'[DeHQe)sH8"+eL%QT9nG.(%B)aqk>9ZE2&eohY?6J$?1AG>8qH'/8SWq30rbB\)ZK,(IsU6X8fYaLnAQq47G_oCjB0HhDB+6itA\3ZunU;u!q=BP*_(%;E0dp_Q$./XtfD&;Zb-"]YW*q20Bb=dq_)-BhP-U9$Ea7VCnbr!4.C_R_k`7)m]_KASfU/V!WXCF!:W=11@M7FTod012!-m%rfI`%h[#T<TKl+-p+Jh2/)BKLj=@eU@a[(;7Z(Q$1_g\nj;oC6-iHM7pHCb_W*,aKfM.<VQ-p@)6:qh":02b7AsuRM9U'PVcKfcHe3_X^%Tu_7i;7t*^&&gM7Z!2HDb/9EuWq=;2B8_ICQlLm_$ur+iP9YT.H`;#@e?6$^jKg!VH$+&dZ]g]8h75t)oT*#IEXK-VA49K_lNi>-%1Qd]pD/9GK!'.H/X8*9\2#U`"&(pSZnXI'WX:=@"]\h9]Ek\[C<4LYL^kA=9;$<9d2PO?ubEg9"m-"]*9[NoJ"-cpiMo*h1U"E(U%7d9d__'ha`jZ7-%-60VkDK?:=Z,fl%gU(p=<H>r@$4+n88mSF\h&'c@e\[6D%Nplm[?X7U&Ek1&k!s:VUjuk?*jDaP!\e4kYS(gX%Gm$&L=::gdoYIunG0<&O`oDk/1=]"g4:*JO*Fm+g$F1)k\.CI@#jFpcpekg*]0J/X(,8a5cn@P(D]^icO+dD$$kPQV*9_p`2P8@D%,FD%T9YHD%K:Z3C>,8ue"b^"fX;4[5FL+.>Z05$Fn'U)oOu*IjRgelXYp6EHnh'<Iq2?OSZ6Uf$UFMm^i0m&hgso-F\-aL5bbXIT%%>U]]C5R)hJXJ,%>bR.SDriSuB[]1GV/l'd<%a-CG4J%W<MeHlN-"qQ+,e=cFKRRM9NM4^c4l0R;2`D2K"q$9^h>E1#M6d2(e[qT%geWTsFI9b=D'?`W]L6mX$6WYtHt+iIFDG+-94Y<\4sau2X=J]=+iSnA=a0%2,P5+)4;cWC7cGkuo!7::Aj[1eAHcP4nkm9Gi%Elb%(=g*lUY*&],Bt+\Y7+p@omTXAOAfRA&17cc'nRDr/t89J0>Q0-SN^k7f)i`fk&J<OK5Z_$h!n>(3TJH3RN+cNB<1=_I;g&=T:+E^%$ngN-EtflY7Pr`/1o&:XIbT&m7.odWX's-g;hAb@6]98r.k$f"Vo.2kp0`<Knnl5X2MiI0qQp0-8%CVY?8pITk&9uM9URpqc]?u8%"t0QNfDRXUN#tLA@sGr?C,CgBjh+StaDb_Yk6VE'h"BpF;+9F?mc@lr@q'%YIUgLd=.RLZf'U8O"3&a]*Qb'&&))uH'!U6$g+q^5%X9d&-)tIJI9??Y6VVN(AlmC<D&P=JTjFq$XH/\pLdMc0loY-AGf)sHT5Jq'fEldX\arM%V+o&J,j+#DqN#"U]f6'e5[)1$6fAu4D%%pNEhNr$p@UU_*+Fk0&`8ibGN.\GHc@,>%=&</3XbdQ.3P]"Y)=!Qj-)E_hOb<&<"iIBj&UQ(5iZ_Ru5B&>o,k/2#$oK-#n$C^:?%R&+.ZpL4*0A;mZFd!Nk7GMH"2r#Jn*+_K3:(F`b(Ihsn=dG:/p2-se2MU="]#E72]e3?\`5*eoQLlNF@boI:iUuG=7ZVD*Jr%fp4%Q]J/6$YbRPj-GQ@KuqdC@T/hfYn1:u`GrohH"sRueN3;_!nps5Jt3c>=3%f4R$pdkHEH@?8pFCN,'3HPf<=\uC24hg6kgUW/YJtH%1`nb)H_E%?gmD2Q]<2MKnA/Lbp?>t%H*2M$FGArkSPd4S5':<8ZcYkF8Fg/319gEBD6LXf`l=76Ee><PMX(`(QKpb,.XSRqcPR\=%p#2Z69B\&U2=f4ef4L8hU[_rt6_g&.JnNNZMt6@KiY^?cE%^mi2&U)/`gZ5r2iV>aU'$U!oanD>ji%kt-)`P`.8u0)97riPI?6&k%1#((G\%F932>Wah"D\BnY[6?N%47St>TF94r_m2fYNi^*RYZ<D9ieQ1i0cSOdi3G#:/\pZa0`[c':4W$?4R45_hg!\bpTjEDZr%Q%Pl5r=*7`nJ?.h+V/g(#sF=*=eErPcWeQ(g,fib6am.]9DXS_?Glo*e"Vj#3e07F,c&b$RIN%cYVkrO7(NiZp0S0c,h@9m.TC*>mL%8sb(a>%<G)Z'05`<t5RH^)_A_gIauSbo+?Oj5jYf2O!!hZ^dOs55_3Y9t!/.Ij6'X1$n3SQ>.ESH2dZmp_qajiRr]epYco92WQ7n%F$%ttphA!$SSM(?nsT;[S@*noZ*5g%3iL?L=i]3p$J--&>2*3*)URAV,:IfdYUE3B]7SZ??aA'8f^ff/laYoI_KG$t?[b<r2'Md9%l#m'skd+$'!?fGFbf;If"O?M!'16!H*u<S]@qm"bf)*pClM24'0@)ODSu!F:[gcb3fDRh,B%R[IicR,>X1XH;UILdZ7fhqj=DO?F%`;S%I;4\(Xh(9q\#fhnEQI$NnHgqiXDNYud>a4<era=-s;t1B+Uk9!_LN>jL7rG?,*!-k7=b_Y[pPG/_`;(L2WUpJ&`id"n8C:9,%C6kP:Z;Nr#WJ5UJ-0>kf#b;pK2R%&c.prW_!fLd)1ufO5?<=K9$Q#IR_?j++lc2>KD`Br4:pq;.i6k-rG05\HW=8rGSU;p5_nbCe%nQm3#`(%I*Mg9QNM/7a:c3.um?(E]p6%RQMiqLMBa#:sP=<]gM(5j%c&"B^0rjCq#P6<IFgcg4c._]*qJ?;F(?pTPALGeiiLt*.!%h]5]b^dcb1ZUb*n1N+j!eC=WDVJPA@!Xg/,@&UAI83jD`luVVjJqJUo)e3YOlR7Di.&7hb0//AC:FMKerBM;s&RaWE`onm,#M=V#%7OYd/LP[L:R7)X&.%=>CVZPTm(\fC;>/se_@,XuCA(N&no\u0W,3At?\nj2iq6FVj-Pd-L8")HV@N2^!4Kr6lo:sf@67iq#.QC@`%h&7-:b)!alH]D=##EUIAE*sgm!po+_/Ze!5YUH^gL;[(,=1e/P$bI;X;k02o:n$.+D.Do!8i6[;1CRkm![+0(+?m/^VJcnu]'8d#%@QQH!=GFW3hA4_*+U;,23R+9`2_fYAB9AKA0rK0p)cb,j]seMQnehjIYg#,]r*U\X@O9"5<2C=-8#43Lel&\bTKE3VW-tFg#@V:T%-5Ak8cfQU$)"jdE'7`ODHeL&<bgFC4Q"2Dhl4[1s4^^??XT#(d,IG[&Nln0>AI;YRV@0YUF^8;?IkV,BJ0?%)CrFZUbAH;HFA6ga%&G'WEV$ZY&o<EJ>bpKT9@&*VnRe$*$Fjp'B?DK\B<cM=mXD)6]W7Z8M*R?>(;&%j2rG>2g]OYK,o*+AecZ9nha.Df9e9[gOK%NW]%%T9#'CMO0p<s%LsBjrTs&m`;6cu.$W(!G'L,o3R]ZY?TcVE;C`C`pQgMupN$KJ>DN)#IN]CAVI+h'!Ks14Ti^rF;q&'Q9!1Heg9)%Kqo+3)#QQL26<K!26O*/kt\M[M+olGoVA:n?c,@MoEg5=aY'J%Z2D;^A"tPGcNq!-Yj9nX1R5H;0)E6mSskOUn`OWodP8"qQ^Omi%>)\TrfPrS#H,(8"r:akn&Mjgf6j_XF93Q)oO\UIo\Pj::=c('R>N4@P,ae0QAPJd=N%Su()e44D*6tJ5(6,qF=;(5'h',G?Vm*V[%QLO``6u<*`3I5N*T]3TVn*o,,]]Ch".4B?!?1Vj(V^8G8q+(+Q*\I)B?sYPso4:X(:>ub-Pj<`G]!OG2.Fh7ST`S&P%cj[DePq`(%%<Nk*)s]G3c<mKHV&sH4N@]N>S:EC%R1>40"D9**FK`/X5b/:1c0PWA7abD>ak6ej`_&tIl;a&o6-S=Q,er@5WL6!R%!h3T632I6%<<9T+S81GSX+;#T=K&N_4HnDWJLsUD,3B5@9[kE?/;T2cM%\GqKH6\@.bG&eWN2NmYaW^3$(V[\dTXqRVt`,6Pl1H6:*73M-a^q_%NMMFVAhM6VPa)c<b$E"td8W,rr^guA9-el5$OSR)9>mu%Ep6nh?Cue"m?NcE&Je.1\gjT?lH_Pj<f@Ts!^GKKWFjjD.`F8eW]Da:%fT>eA+IDQgZ8'kj_:/^k?[_-/WHqnf)-Xg@B1L1V[:"-HZuAX5gf(n/E.\3$O4@9d]QK5#(7&5F.TlcfT7;r<(C2$`Jk.uP8.t14%N7Ip_aPR1k<\e.8_1VkAcGmdRMS<IF%6\j$FELH!ILFnU08U#2>e:[#jMq+C/E.$SYTV:pQ=6B-f5BN0/H2s(jqh\bVJ"m&b8RX#%3S`lt(gN4^"ejgH1RFVq3nK.a0<ndaj2mWiIkYEO!&NpF0dQHO&lIM10!!M@Ws.R^V8RE+]fa[AHfU'8KpiH)*kPO:ciV+"%EK:N%<(,kn";[0Q9*MN;r3dB(rNpI!re[#gIr!".3[%qGTM"PEZBP7uiX,P3&0-n7)Uap!`b&pI?d%l*[H3$S@*-(\gtPaHR/QpJW$!0a%CmOD*#k\4"fH+kOQI:[F;?-e,a4RsI$jROLldR8"H3X<r`[X%R,rH`-a=D%@F7!!c7NRS=Xq$lNbOf4-QYCe6jj+e6F5n6',*a*#%M9[#sL8)AWY9`+Vg78#Nc^obp]IX%5qYcE(Ab_[ZhqZj6LUoIDU.J2GDQ5'+6+T!ara`g=^"'Gu,BLN`pPKak?mq^ZGLjEe2,/CO%(8$Ri>g>I`K*n+E4=aR(G?#P'0s_BXSfZiX@[:=$`j7J$YUo,0`gY$4J>o_QPcb&IhJaO,\D=Nq2%mK6WpJjoFQPl#2bCsiMrQ9A%^7";DKe3Qo!Xg(]Yhb8+i-;_55O?<("t#33rY>;N=:PhaN?rRJ##U\7R]nbUTqiWA`l.4??o^3/3(3kAab/;0nN&KBVXmaY4M7>;%SL5r9W5sSC#d83GoHZ'G#`tYJH_$[-^qBI1+`!FjBQCKJTi=<a2\gr!o6IJhAq?(`'Nd?7<7e<d:pNV/.COb4d?uj+;QleWL.'[#%aqs%n9SL6J^\=cXbPn:.kV/Y\\T=Y@1p'%q9=Mg4R$rKlfH#U%9!_Ei#T<HL`,&ZHj+H%LWZ;enhGod"1+LrJD7p\Piru7Y[fa.o%0,&n$[/%/u2;jAAJ=%El6>AiqH9e@T]A'@7(Q4!:L/TsL4mGi%XsUSf\/b,/'=0cWS032,P9gKEXth_QOrheSs4hCkbCLjR:OPP*%=TDHuNtJ^rLV,-+?0UpUA"IX+p5>MW1[R:UlJRlRq?\rW48H.C)mE-a?oRWg30S)/@Mpa&G#`3K=OV>RiK>$.(l<O\*pFREML8W%%BF'I"mIko-RmTF'UB/r$c9Y?\Hr<Va&8&6P.oi!PgmD8AO#*#OOWV`up/?m)5?>\II?AXQES[F1=H[56d,>=6d_,d<Wl`3^imKWO%U:%LED_]0D,>-6UNsc@F6bnS?F'P`+m^3uD.lt9P"4as$^j**5i)NFoXhZZ/U\pK98)q>7r&pPQ8XWMO5KQ.uX?!loV8[Npm&Ok=%pAd\`-Y3aG'GeX0N:uqi[N',g_H8\?=[02"R*GtRc5s[SoP<DU!<NKO0P[?$;iC(>G4Gmm.[;s4%c(:KX<@R:I8a#r7K<L%J1*tV%N^=0j<m3Aj3mpQ>'eRhR'd7`cFn`[B+cWmVXrA4qA"[P8MVR,jLdH&2k]n\6.^tNX?^@dSgjunCOt[J-h"M@OS2"R5A*5W]/g,&O%U,%S'*lO;RbO9hs"U@&)$X8n'C2f^#otOTFQNX[/L=q\YUS\<Thuh"I>>d;u]`Ml;PSEXM,%733=L6W$N<[;*MuA=b$3!.+`0!It%H]@G4(u<IlUKrYW!iE]^2IOEWg4g8l<Ba57%V?TMVgNlIM9W$*>^Rbi;*HrWD"Ia\M[5=PB5)sIOC8kb<4pFk*uaA[o(OkE#Q7/t%DBG^o&bC;WYlkPf`LIlR8$>f,jE.]nF>A-D"ALV4&orGPU/#H/,jcb6L\!JFA)[;O3#:9[`0=&Pi&2NC#FZ?g(bFkH6%W?j7g@\P%+ho[o]9'e)g_PY35qMeG$,cX&^sgW\j16+H@K*Z@m,I/M*-f[WJ>8]tLqB%&!08ZOKA,m<*B_Q=q:$d%p&Q`U0o74]0,P^h)?IL;%OgU&4i>1$bP5s1AW%+hJY5t8nWn3Y)^h%-Ci+WI[RIml+Xg$S.Ts;>H2+(Gr(il=KG-6]1@ONdj!r@al_b_S'&8O+T$K+fI0E6[8%'^PGE&M.esY)Kkd;d&n5o&MPrPWfZ=M$*h]/ZI%rT\OL6rs]?NB)%#9^D[d-XYW/f8M(YDM/h??W+G?5F@^C^&4r8sr*4XV>Op;n%D[$-P=ek*q=OZHREQtWOg;&OoGFRhPF@mZ>VV4=F.%6f:\Iq\"Kqkp0PEKi$U'_F)ZD/kmG?"o$YN&l[Uc[23%@LX\kab_c0d_r9%b-sK0L16"XqA@69V'@<R:KF,CS3'B.EA@QOVn!Zd6'h._HHu(gI)BA#&l?5oBuV!24Z+orI)+Gm`8X2MY`")8Qp)%U`)kQQd$2n7%pKu'J=+GR'A'Fk9LAUDYkY_-QgfD]AZ#U9GMWFuMp(l;2e.0CMeIr+VDGup\#Dp8:75R0IcBb=:U[G/0en*Jr(n>OAF"9n,'&rFq%S=i[D7FWO2I]rQ_bg0\Z^lA&nLm&,LGK$+Sn)-D343E(cEl)($08d]4LbVD)7c,E\5L.s%BYH/r7#KMi6Ms'FR)jJ=Lf4PX-p8Z0%J/"]T+Z.ll'PeMXl\lnMShEGfZA78gJp9U$akOou0##+'+nN(I-Sp<Tj]P%(\U'6;nIqDsU?]"clZ.EaNk5CO:$j,XTFtbVZep=j%8k<6K"oO/Z!,;8+%.BG,r'+.JoJsZnVC.3W^HF'T=>mL,L`gBMlC(hC5c(H\lilIREO"rW\1tuhfTRqU(o)Y1rTB#ZPWd+9+*e@G%%Xa\YoZD%Wl3W!oD9J>8ZQAIdU6oJ3-sm?T^t:Ak3K\Up8+mM67MStX"&l&i^kRNG^0'-0SO/d<d]58ZVWot1]M8B3@1:K_1CLG0%>B.(T+eH>D9#u\;ME9KBf#YaJ"5)naN$XFWPc.=R>MWf6Ok1P[Eupo,JDoHT!FR`1>gd#CCXFZnF$]3O(%EV,B&T4j4^m]59<iKf%*QC_?71ts;)7NL0SQLqq;m'_1eHNh!Vsq,ZfQ?He[>puU,f[V^`OJ]k$!JFh'HlDeJ^Y@d\1PFrep`j"[M%1l^T+-LPX0Zh#a[hs%H_KuM$IBBST-D$eM7tl3%e!\c[A.QkWU%b5Q:)"o*5?eX5@A!A:</2`9QWJR&CDH8qMM^8eH'fo\KT,?_K+6G>HWoGPf:Yh),g9D%&!NTnB'auk-h+VUFrctBem@7"\4"pcNL6$%go?(K,2UP6rFt.gMQY^CVkMSGPHjTW)`9[;=[RMRIV-pQA"DAL'^)I]dY]9qa!+Po%a.=bO@Pr3X1a[;G[\"Eeb6I$Wji2OEC(q#Pf?I;\+)O!e:E*d\kqQa\F/'j>2I[>b;iY-4(VGs2)3A@#,mM"5QI`G`#'L;5M+%s:%qtJ/1SJ#<6k(4d?QLEOL[Z9Z#TcJ<NSb!P9%g-4njU!+)d:0i5K8^H;0m@)d:n*N"FnLE.C1:A=WgjmFoW^!5i*Si.L0-ULap\b$%S5MJ[?+nPcr15KK\g_n7F'8,ret-s'ZDS;Z]=Hd\!1I#kd#gqY-EE4YM-8JqRE\Y9(K`]fHfP>XO$Hg_9-QgS73=$\b7!P:Wn,4Q%@QA0+:%c-Y\[">%rU8upg2'#h^6k5C)PdYB%]CP\Y(#*AW[Pd<T+#Fcm-u?uriB;=rJ9F)1P<!50K;l?g<+u@THQiD_Q([/W^QVJ%n*bTtUa=$7Aups$DJB\2;-WmC[IVt-b;&?a'TN$t\O8TL^,PsT^dcNH]Y:I1QYG`50^YlJZrfD+&e\o8q4`W26;RS6`n2[,X^21L%3loM<%Jre,?'&il)eL"0b=TQjH9N)Z(#\_grY7/Z(;]SSgN5XQW%3hCOkn(`QM2m-OJH21Sr4'[eDlK'+1DHN/3A^i!g92;\'R5>%pQa1uKu%^UG@H'iKjdh-hjRJ^kZ3lu4Aub9.6@t^Y2CR(H-@-=@LsK8?$aE)c175]1ha_$<HE8+IG,QQOIR.E[S[sQB"Wh\H<E^@%U+*4]SjOg^a\sKQfOS)HnRaiRTdG6]\5fD@FWA<N0d),n_T2$/[..#G?ZUcskQ>XN1D^t8q30AW2DZ3(6eA.<P0`OA=YhB/e]CJ0%!ZHmAf03u!TA,t/`puZTeQhOO.IFBpQc,5iF8[XIma3N7#;>t#CjkZ&-)*%!?14*8!b:U.bC+^$Ud_Q5nEAuc:$$7VK?5.49$BRd%4ppOcjp0M@KL3YL`]qYqWQSJn(/Tl1oeN-kQs&$#<'Iq,Q?[0#B")I5ib3RT]Geu[M7).7<(4[air4rp*#G64?b6?XZe*gYs'f1a%[d.#d)`%cPaDX_7$t:NR$d=F"`:2&n^3U.=80:.+\Cr'c'ok/7l/lC;s3nJ0:SU<GG<A4XH$Qqu[j]q_]Z4m+%?bZ'5KHD<%&Hq!%J)'V8kX_I@E%[J\I>DH%FI;($45Q5KN^&n+(kkB;KT6o)#T^+Un:tBNgl0EIS3\Ps^SABqchBYE+AmWrg8[A@-Dc4)it:p%W?j]V%0AjW(p@K]YHmp^%oPr@eIuJAp<VSsc],j]Uj]0_R0uKRA070ECMp;ePH\pSS3'd6Wn7peK]1`[4cZRH@qY<:cCe=p*kau:>T$>_R%7D\&mIPGDbnD8-E.')S/F,L?"kXBjuC5E7HZBJ/X9^a>`)%A-MY.i3E=@s3M]pT1:4-ufr/C(\7O(n?<YcHnH0phRbn;\-f.0ZgL%3cEkW,j>C3<"i3ud_!J_p[ld'70uuTMV+#F8\Pfgm#7mW3j8'!6q!_]64<n/hr!\,n#hS5T6EY!O#cZI6[07Aq)Qu>nbmgAAG]Z7%Yfe5:[3I"/Fu@tqS69D+L@pk"(cm?G>K?:8b_%n#6eG(@G7jFE,gJQ\bm`*4qdF(JYnB9f'7aU[_Us$@Sp+T>@J$H[d2s2/8.8L&%r-L%bVe36$<3lCIS?sk<.?0I'?i8bW-"i-Yak.%r3J/UJ@>'r#iQDcG,<cD/i$m/,ED^a)J-\DBZq^33BLg>@hY_f6qL^u!A<)Kt%%Uh?%r,JS8[D]^?Ohh2J0!LbrS4@KtB)^YE5uGT8.bY9D6_#gO1$f*')[kR@AdFICm)8+erObP:luB6'0jnBR+Js8td.[+X7k>VJ%pc/RXC7O3G[jlg:QiYEub`S)anJXh:QmZIa,NePNNfC,DE0QEk@0qR9kEhHj69a5nlc+!OXS8p,jLo!1i8,IAf>AX!PeFi<ETcVl%Pk6?oA?Q]sE"_:Rmt=4DZ),^NA:o*t^1bY7@ahrt`UHEKb`jZ5&P>0N!\&&/"=3iMH[Ai,?\HSBqlu$'`6UPW/VU$-O&LOZfhB@f%N`!'J]neHdh-JN==&Z8MYO>\6%#ZW>&n+afs(m8m?[;I',o)4!j3EQ/WYHU`(e`5o^d4Nj`8jsaq11msSQh$al!of+Ofu$2hko.A%BI]JUPN!=!8*0At%uLNe5TK5:V.0,i[ble'MJV*LiXdfUa;SnTq'R)T0"u5V:XF,J`q[oS'+u9YaPaA`BCu52#4Bi"Tu>"$qn)'\%l6'9)O]s?R&rsoI`<S"/bqia$q^OD?=GS\QKiGK>mTn%s/4k[.N0[S@X4o5'oCN!\\*i9k'/:7Gj[K7p[Bh.293fKs'7"jDaT\Q-%+@0&/"Y_!piAWq`YNq_#6eUXR9jpea+iZPYn42-c!Oo6.G_D660M]>',@JM0eO/)^0;`5T&'dYY^R!%a$j4H;iCRdc$5b820Fn0J%"l=\LX@AWg0tqI(Nh%>b_nfe&Xef)$4ObU)?Kp%:QX4[(d]Gh0DXTclUQ_sI>QKZ.cmWlFTZ.FBcP!(deA@?->(XGHRQ6Y&H[/*!%;Mm,-])?\CgBIhq`C.LG;*58mr1&Sa2#CJW8>%US%pk%QX,;bl)C+\SM>M.&1mM.(h`kEU-ZD7m>PF.0_9rh7rh/D,1l>\q#fHi'%7\q5Y;NHVK5s<q;g4"o%fEOen"kh,H8r,k>KQ+.p9/1`_T<PV^.a:/)+AB0;HTaNgLbN75UIoMWChc(4MH0L<<Mmt%[3uiWU/UHt%k"1M7HGl71-t;B=@N6)H/ro'7KeY#^*37Q=p//.5&^VNrqeL`Mq8IO4BoO9.BcVZh`hTj_ZM*m$D$K[-!&u_%JPbj)L)dcnp_+/3%as'JCTuJHq)1I@T(n;'%G0f,R<H\VkdL=VU6]MAT(lD_MKI;;Ef<uF0V?plMYo=8#;Y\tC#R!UE-F'>"#WcdSTCI%EP#'^Z:la"`%U7RmH)VJSU:N*pKFNK\#64IY$+M5>C^ku52JFVPc?"p3R+B"59.:<`Vm7[,T'R62MEJpqM$>f67A2R@f;_$.M4#_MmK^mEUKT6(%%9HMjFLHt-!N@/\M"'.n*f&)JnR:YglI4;a%]k?dQ^i5O8C@dGBVe.@]RT9@.hhRU/!LVn0Sf[KlF]j!nhXmU?dL4eJbJ"d9S>:_A%7iEQ_PT"SZ!'V2/%e\'<BL;%sY!#B#H2W@T+l?adAlTE6WMt*BW]OTf'`hA4M+8948^t@P<MZj)M+%UdILe"6[ZlqJ!CUc$'QQ@i%'W.!c[.V@YaT2]rXR!)GScQ0NZ<SjtJ`n5Ae0ki>F0lI?_GG-o9,iNn&UC(IW^DCQ2Ion&L<<>SNd>=-$uXo9&%0B.klaAGnu4>Z%]1a__Oee5jNe4!GU]T;^X@.]?=8[Q5);[I3JLnLaG^Hh#JMcW9c'[jV7T$53T#D6&p]h(D@HA*U45V,AcHgXoe>+.W8(g]N!1!0r%aJ2Mkhh34d+$T<BE@)qhZTID7UG/<MU\JAGN?)7W*%J1"JVfSQ&5GWD,4*\$d0V@/]%nZ3<)aku;Rl5a/6F-Mj?R&&G!*/W&Bg\e%8fk.q,0QFGqg3*(6SV$-X!Q=Ik2H]V%q!OP:=KI?Mn(N5qP!<2G;d.59NZ=-l*:teELb*TU8Ti:(dkY-MN6'cdn:[7F+hqkkIn4B%Wa-`_7r7;0bAA"`"3r.M3ob3]D_/6%MM_!FQhao_-A^biYtsF!@f_:+nTcj6n+RPtF.;]Q3c^)pb97fXL>_CRh[\;bMnLh@1#=Rq%j^TJKgPdr&fE%$,odudkB4L;h>NRE?'t85$Q)LI%Pq?pE"<fpQS:"A4N_:4[_>6/0<Sbq@ME9=uQ%pGJ1!)-,MB88QnQ&YJY1'L4%\\$a+^D9o<iLu')H1,[(aXtC`48`[!*80[fk>m_:g+SroGuRH.q:nJ`/MTgJ!FlQ(#=ANKDY8*9Z8q]9R+q=(Boje?_k1.ZXORmW%F'o'3DY".8=-"b$ao`P'-RAEu7"X"a0KqP^n,^cQpS%63BC6lpiJ%#Kfo=+;$h'p8'jo-3GsM+K6$3IC]+eC`N,?NQYJ5_CMH\<0%#`(KA%aF0:[.*/.[O6gqfU226f'%&Z</iJ@V>Jh)(4f^_9fK24Bou[I8l4-i\V\+@@\Ne%;]U-(p>3KS:#O"uKmX&P1.Y[-Y3Y*'%^tQI]o2aun%TD%Zmah=l>R!Kn>`WF$HQTo@Pa7mpHDr@6]C^5sBikd`1&,&hKi4!,[`!@@FiR_-.&%XaB)SJGfrNO[cF,D6$S:j3%5FC`=-kVIV4!gZJNd'NgAG7pi5RiaH).f(MKp!@%&ut-5AW02[(*O2UCNJlWo(E@\[XnS"*Z3?CJ1W4#pL1cL?nOLU6[;R"0mWCi%NBOYEfot("1:)B^([6'`#osd^"uaedlPO^k-=p4a#9QB?8N9!EVC+(\[/m"iMqWP+nI9Q#n1m)aL?%TB4Y^>,Q3U13#rm]u==7V\%!junY$G-?NB^1+:I$.hF]@>Qg_W&K,.ST.?-/uNJ42(^RLOk.b"nHp[ErW@7k84tu!L@*:K_34L1;ZsUnGmAdK4()'KpYMlLA>,*%NVPdJNXu$`[7KU&-4D#oWkd4V9QC,]m&Q`d!uqCHB>qG_Rc)(/!l,uqoaE6fEV:A7(WPs5kr(s@YZ"#-KS/j,Q]UO&M067OW1qbi%;aYA3H9T:KN4o(YFYB"j.5gO)i"&rNb.k-<<1RHp,@Vs"!-qY]!b7kB-ur/dF#a[QNm<bf'RgL<6SR2@Tnn6^'"Idba^R"S0ukWN%oYNQfk5=">U<0Bu9<Z!IUp=..-#keMl[!Flj?i$P/%5^'hs_%m"5LIG+f?jaC]=jH.Qo\Od=ti1bD6V,CBgHmIE&rW*f8G&*6DI$%8)+[q(PaZJn?3Gi\ur4MRj/<?M"TQKOifq&Ut$\KjN8D3`tZ<6MU-a;[c2GT+p-=bqu&ZuFTRK>Q0sH?"i!tSFL!+,!YoXYm1I-F%iRe^4(na$=fXRII^o1iBcNYuH-,@Hs/3=c^543R7$8s^-UX_,#$F?8C*+5LH,0!R[W`h:ZaeZ[VU2,Pqb,!)O[]8o-J$(Rd+u/a=%lHrZ1hEb0R0dkeRDeDMpqr=na=ng2D%$h?1IAd+'VZDm)Sb,>?YQh&E1Zo<IG<3>3ef08]2I/;P0m\9$22atrr&)$cd55K3!7POZ%F*E+@=(>Eeqg2cEhJklpKjVI5YS6/*.N.R:0!+6L2*HP\?8o7%c+&eU,]'eSml^JB^W4L'0;U@Y3JA&oS\*FE4\"+`.91H$Lf=8]%.3op#P9W@0\"^SMfQL..Hl*bMjZhq,!.q9CK?uq4U`C@kPKWn7EPNLl$^Sm!RJ%s;Kc&Kc&!S*)Ss49FY_^JEYD'obcku2DpH*M/%g(=]g76%!f[dlDO>1(Zm]8?3.5U',_4iF;mFgblM.`EX@:-=)ACV]M&h\?JF[M+iL$(1+IhICm^U#S\F]$DW"q2OJYmL&+gF*]+%%hqQbNiIOaE%D&90DN$J'Yj`np<VLpECU#@<0FFIQ'O'+uPmOOFqLd`d7P)jC9sr,.O6s]aCN_\ACtn8n;g'.cE5fP?Y.ChCO,YlU%4k5eQ;HF0]"(4k#B?@`EhF'uRHX66[YX<C@`'W.a6L`N_4W%1%a1rm0#n.nchWKMm]&5*>`Hq_VAFU6&A?YQ0&rXHYCDsG:$;t8R%@a:/L7::4dTNXH97^"&T@V/T9q>djJ*9&pd4kBF>bTI+C)H(%Ha)ujNr_H3.N#ogO!U.f;'f#$.Qr@N=]10,Ng4c9eGW5[XB?[C8%2.`L5cm-(\<&Af24[Fo6OX+>Zaa:N6]>P4,GPk/."u_0J#%0:j@jJ2R_6c8]pUjN.X$XJ/ULoSWLmd=/^mKM#lc]FPT\Wmg?).n:%lbiRHm!]*8+OA-pSD_d)]:4k#\GKt8Y,#-a\O7IQUR&!;7scoiRsRUqObX!I?B>c-m)CR[$B0fs`-fQl9d(a`\2T"s4'S%W]`6H^%=IHeNS8girAXo"mE5G(0Li*lH,rCJZpC\6h%aAb\Ig-o=o6+FF]+Te,:4!(t&.,W*@SjIRqTOb?Z@K.b$I;j2#mi>i["p1f$9kHG%'N+NllPQ"q(L*7mF68>g9[b39ZoVbJMdE0]%-G_`qL't@_YcP5&L#ZLEs_&`?2^6iH=/<LiKYICRA...:d5199(`ehLEhqKb9^7k%Li%X%FHlkG^,Ig+S&HP,m7\__&W6=KbaDj>,;GgeS+Xu#ge=,D[ORb_(NiYk*[0]:+Xs0\?"U3WV7:WVc=tn[0C<LGcmpq'fE$=F%gX&G!XMj<D8pdPD5A;sl^/E<SS.Wk)9N2$.eJBfhBHX$g]e_,NBh/23/^bX:Z%,7a-JF'74CUGeA=+qLXOu(W/=T[Q$SdapFY-Q1%?glP[;>,&Kqjjnn)'%-d@9StMZ->U9Aj`hdM8*XQW==4B5rJ'Q?S`'?Yiu4#,Ze^V[Ig#_'G>]H^uDSMUb8ch/c7'BaT?iE>Jn6q%L>Y_C_U<;tU<1^$J$>AAf!tHp6R)hagfs"LSrrjO[PEk=S:!r9NDp&!loIC@)@oPMij_.7e`9OP'??*.2Q"A(dg64]F*`W<//KXj%YHqbF/$EHlQ`QNf9a@Of3fS@c<Q+0EH9<mF86-:&pgAj!4lhY'=]'I/Cc%0'7"ktG"Q=2Ck(KLU<EfrL8l1E_p[`BVi"6glaQhD\%fZPa(]I\b'1_QKMNF5O&c6<.am)Qs"F.%q@(u$p$<fH:R-oPq)Fic10?r8+LO8L9`WC9:n-DLiVVIP5bTM&C!`GY4P!,GBaWP%N6%fusDc(!Cqo15]$e`)_a?[DZJI"3[cJe:dh'p;"2Lr7i7'+Yn/-3<Wd)HK+\o8sPQg/ZrU1U/E0hT><WP@$\'+Ah`cYJT9WJF5AY^%/Q>,#OY*Z0,Erl'aat]Z2dERd3'Rcf4s2S,#*Bg`_]Z0Sf`];.g1X(!!fYDF#Wn'ZQ1:!aZ@j:Pf6"_9'E&28r!%J1SnO8E%EoHL%P3kBC2`=QAbV=_+V)Pbr/UCgBQ,-E+K^SrU<9H=d_]?,s`13N&9bq$nf/:HGUtSmrV_`I&/i5O.,>YqP$,A(n9oLt=4H).u(Cmo2%GS;B+%#emF[6GsHW*Z-X^Ye442ao<KeYf'mTbh/g0#PiNW7m2n'R;-Sl>]``OK/IHDDc0,(h<ZeK8MARCt,%ZJ<U_#8I0Omfhk2E%\E`aPd:Cc*^kROb-$XR8:ZTSS3%IX`\CLY$AHbuKZ![/!e<*lCWV.$]jK1s*WQ<nO)K!s4eGeI';?[],?*aThkNkBqcQT<JLcIFt%9D$=3/ot_N*^-7OZV3Aq?PiE#8s&8Kk&hpF;pMKD>!gHlcKDb?Tdo=XW(%X:;\42S1JNGJYmq;)o.sL!=nEUamNc9C&a/MRFH_GT%GD1kY9&iG^q0ARJPB=C;5iSYohfI9^-)8QSH9E!`YX>T/"fkKU`:o.3To%)$fQJ/@0Vn^;CR[&P2JLZ[<9u/%d_'(%8VqI,T#uQe%D$\:.kXL>knBSP(V0TpmbWB!4J83;'MRn3ZZ4:9HQ[C./lNssMh,,L@YS51i#oa#X@VR==N=Tt8'ZG9)=7PHS/9eC]kmr3.<$()s%9YR4#G-XWhZaaAUeSsF_>7)@1^oS!^m>,aXVDDeWMRGI>4^HZ*R'q\jbgFGqRX/@-)\^16T9$ZSOMg#k+(soT`.?nnE,="gp)Hh>%:]JX"Q(%V;4G`_ZO1g]68PmSs'<FcUM@\>f/)d_sl,n[Q_3?ge(Q1pm>T!TZ`Y*`p[6;2iYZp=&L\i^(W/_A?rQ-f_AI*oP]k%4#%bUP3iVEYclm,=Ph__lfYrRiT-oeE!G^8iX_nZl$"Y6n3G(>M]J:1#i2J6BsF(f'c&a\N'C/$U:V\7\5:P7iG7=VZ[l@N[ha5(LbO%N3))RE-2dA4BF-F"A8q4?@gdT"r[u)>UoY:;9;_t_$3Aepts7gDc\BT_H=#F/2kH_*`%#p>2&Cb8%'(cbk#m'"=/i_#RHB,.UtR_%[N,_31@Z`c8:X?Hao;&t!C!#)TOC\,YrJ`&fqkfE,J`8o9+69q6lRP?JQ;8n0dK5ijmOo^#&'(m3E]i7>]OEu0Rbfcd@[:7YKb!/%s*/'"!s.90F>c*K1XL_!r&+%]NAV[cUQPjY/Snt.b+h!6046M5E1H%[SIAY(b<m((Z16>3E&dq7of\V1k9k'0?6F_#5HPUfJ2*#:%Si!l&rH1Bf^<L[4?s/UGm<JjndTbZWIk*Hsmbf<PiSjfF=q@-S1%M&"!ffLCdPQa?>3]bIh*n@Z**uM#Ypm]5JJZ96>88dgA5SGp%<B@u?0P4Y3jIc.Gh6:+F2&tlL,7PHnl5ZjJS3=qP*9!QTqin7W&_G-cf4OO4U^siW1alNQUVSPA?n4DAVohPkl;^\*TX/k=C`A/r%a8uTeZlqVdd2'cH+/sha=?`le!J"bRTr<'gf0p0S@5/Q@bKE$`)(ii"*f"qYBo?Mi#/)`KmSs]fHV@3dVKDF:LF3UJ1\MM`\n+](%_l5kWoi3C.9)hS>4LjGRRh;R$Xt*q3>ul$N++\"+B_0F@R+g3iq#=eV!b-2o'*T.KTH8O7K>74R!XJ*mBbAIgMq>AlASKJ2=?g"4%9FJF[>3_M1)k/HM:dH,:Q5RXkBqK;@*[`8<TV1[QklLKMZW?,fHeNjfV:h)roQ$AT9YX5RGNB8Z&Q6`toq)#fN:051#&6;>jtk@[%!:7hf-""UJ4TFa#*EfYk!<KW6]aKe$US$U=O21P2XnK;;VC^OU/^mXdA-m'AMQ*m&kf(YC<-]Rc\L3'PoVbO;0ZMNu@&6?LLJ5jZ%%.;@:?ika>ae=BO.ID1a:C8LKmJo9?Xd]Y$=@V0ZY7o>/'dh[tJ\atl)*jU6NBA5+1?u3bA==pZ8J0goik5AYYBn0c<EZR(9c9s3%Wr;\7\:d^/V6q\q%JHl)#rionmqm6T!98ofQM&Dd0ZGUoF`Z^S-S/4tSnE']oaYb3.8hKWZGm-WpEiW<VQhq_$V#8b*R6.CZ[e`.%J9A'T_qK:!9ErchD'H'][:`VG*'<eY_"A:RI5#+*)11L]2E<#`ogl<'cC0>D,kB_AK3@N(^'!@r7M+PTn.#nG**DET`EGRDER[JI%9WRC[EH0]Q^q;qM1Pg&H_5;EiS>Db\%dtWJCN,e'WWYV+DUG7BEcRTtP\O4LUEQ5CiA^7oG=:9rHk,jb%l5d<)j)O/>snZ77cY7Z%q<;[7VO:eD74p4pTmU.1c9$hQQ$@["G[4Re0jN148aUNCVu+OAE8nHKHuB/M_53&@MFt0X-eWX?/:pL8^'cnG\T>#6H]7m`J5uj]%!-'A7&'6)7AZQ?[b,.cKcLInW"$\fGR(H?q&+$=FkHQn>2J=.-9j`jY[(rEm!j>Y&TcS-LHHf?OXUM;KN-CqbGXeSb#nbNBP8M:k%(*sY3mh4N5lP$NR4(.9'h$,lfhJR,idL;>+inZ2^hEh%Ogdf2N0YB.CM`;sGX>.95^Ku7!JDfun=t2C>1-(Op3!W!8%PtUW=X0_H%7jnG1/r'c]k<%k$o7*[aa]ONHX`^)!)-D),1*V3Mqm!^IO2Dju!)diN]Y:X!F.W(n!1Pb>a^+AYJjtfPaegr1\f>ruK,@_4QDh"p%%XQmd&=j!Xa7fn_s/jTR%nualC9/j.`[B+ZLF(j4q_ZDK[gSfX5+$EBVg)jbdl:-NR^/5]oV^q\GjEK6.CJ76#l3`!9n<=FWVX($%F\"9a0(CX[iaKaJL+`O6;0L.*/.u3c4^dIKqi+#W"\1h7:2+^=W]oVYC@POLNVF9XrkL?gSlH"4=$X'?eG)0>rmEhUq/2^Q`4XJk%atDqiW'["(;PpQN>BG6!b9AL#Bn*$sP'_6Ebl>5?/nJ3G,<m+2QtS1!;1(RS;ndotb`<p'_2&dT@O>&Cl\^\>rH,=TN:gTh!(O^K%0RMaIJTs5/LFT0-pX/)6*^1ToPG8'@pmWW]MFB0c3A+8K!`O?frr!TkHn]5jp@9/Z+7I5:R\N4>-"-EWj4B@p""[&.U*6b_@t?D3%0<gbh@EfeiB=?W`Fhs8\H(H]X+'e%\M_Cbh9li#lYj$/UScht;MU5$aOOl2m@)_;s+FCrn:&S=mKhj/Xn>^bCe1jKab`ubE;R@?_%ER.6K]&+FD7&>cs5gL(PZET2<1[+aG/^7s@e.c9Q8%d\%W6D.c\VTqF'@f@T)V+)&&>0";oqoMaSa^*K`6KgO89UntZ0=#k5gCAR%2Pr-K#_E[<bIq6B#tupYj(r:$Q`@dFQ+3#YIqumSr]Hibg"RIhWK(2lYW)jgA'luj^$BC%&*08OT?FeYIbcu,AkE]9]frn1/N=GR%\BBKDqW9"ZR(?0<%EY"ojC7b`N*QIRM5^Uo%LN%-hcP,@E:5i.E&:XW9[h/5LZ1*Mo>6BViJ@GS>ib8W@@!=o0=3S?fran_FA1eu%M2B40Moe58GK@G\aO#jrL$N?>)j?X^fU6>2k/Z3Za`>s8!Ai9Ho^VHmh,.^=c7;CnB-]7Ja(>:d4JI[^3Ot7C\_Z=O`JtSXM7J(X%qEV/QkY1\X1HhAZR3'/\HT-T1KUGq"T#&iWHLH18aq6#A?\q;*A[F3tMmV(rjDf@c'1Jfk33[6c>qJ`l902l^>%rk3j4HIH.1GJ%%F=AJQe[If!NHj`N]Br-.<Z!d_AiGHK1@88Q\7hf(<gAGbRT'\eo@Numl1,m+VXL4*QgG#ijVN3*/J(I3<$^s0HH,">(j/0BC#7!a%2*c/m=cS.hFQ1OSf-qu0gC3]9))a*.%0<LAYUZ>"gK?F3f&tU6Kj-f.[YRP0\^ck9QrjscL\oT(Pe<>8<II>A#8.Z`R.RP4.0Hd0%bUZ"c$7RLZ6ScLSQ)0KJ7i*k=Ssum3r#X$Ci%+JgO&[$U*2Xi?0rA'c@U$@/2@mHi%Uq(IDBO6@<n6b)aT.l[po?hoZY'soAOkZs%!#CeXXA5dI>c7g332V`0T%Y!roHAQ^Z`qBhTuVDa-L#A6p,>6;SgcmK`73HA(lObaS1k"R!9b/j>S0*`cIh`2gfWLHXg2p'Nt!Gd%eY5DQ/t^Z6-NRfi'0;$+./:KFI5`26NElZ(1ETt,&^,1tN:o<U%G6K\L2lhV>_R]\d1@--F,5,5K(tr6F/ZOn6XVm#,"r"Qm&X"B%7?0hsS"C;]*1/)XcC*VoNGEO&oh*rrL?dI/F=uA7UaJi6BG2"7fcKQ]'#]_G2'CHbopI-O06:Gf,g.b1#r0*Mo//YHmA'6c4T$EI%V`p0<c`'RZ_N<3.V@#jYfLes=o<q;l^X8_`X$:$dVj#_^/T:#^faZLWf<6&I,Mb,eDLG(b4ajU]\,1FUVo4!!Mj77DX%H"p=;8@;%\uWK?j,=e'DEg)$i%Q]af%a>-oDp1L(@L!=HF.^rX?"6\e#N6sD"VGf53Yr^[!i;p'Kdn1WRq8&)AHUa08B=k"6(5(r'#23JU%Vl%/L%5k5+c"0AJc`>gu1nA2!*J=<L??MpUnA<,m^S6d3Q$_J42Xopo!Y@\UE.kakiNj(7?.E@s1dDXQ@a8LqZ['BjtppOY-'k:<dCn%.ii24:=57Wp8iH_"WXd"142L`+)d0&P!2@@:B+b`=!gr\UQZ)oMJIlH\@TDAgnt#nDa]_*X?;W;^Z,%b9"na@EH<1[l]kOQSN[iU%f38961ba,eGNgUZF1+>8cWr%\hNk.H\;o=7%ZD.$^`3F\V?->qW]`#d71/9Ld&YXmq^"Xte";7&C9=Zug>#Yu&VLVh3;mSp`ei@;%S2K-@BD3EiCuQ>;oSuI#lkt2kmhN;lU^2NWpVB#G(>:k8clMj9_Y?kE64#jI5'a>lNlr'``1gV_f(hp2>*7s9=\igJDBj/IS(9>0%#PV#t'MBK2D3dY]iUc+^Y,,#)%(]QZQ\7%Qf#.,^:EsmbY9sc7;SMWsnuVq6#m7F"CdF[Ghj<G"M=us<lpcnUNd<>ZbOnd3@<hr`%!jdmD$dX^[f_P0gQJKgCF,^[6)p=#c^-Kh[\sr&:2p!$,rk@*pn*Ae0<oJC<\<2AP3W68-#:i$V,YFU'UGE1iM&aO4&mQ2_p_\ro%Knc*!c6<G3>V2aM#/F+SA<rL.J.A:Oah^H%1;J`_1C'^WV?43ed(orrNWL7?[`>ZYY<Nof^pFsW@6%;s$hGBJ3F7k;f"2,q"+''r%nCU<tf]A*b1Y;rZAV+c..t=X<>GsR2&Oc,lKd"&PD7)U/o4#<r+(g?_KeHhZ7S^n(reRhd_Z"8;Nk.pCXlJ#mV^aBZe.O,bYN_id%S=uI%^=%Rb+H<\Q\0<oK/]Yr>h15^<T$%La?$H@/B+3D$4UH".l&J],Jj=()"1p_/qeLjhi]IFfM"HFcT;S.l"]-a*?/gl/Nt;s4%:?p+6,85khUZ+\V7X.IIjta#U(Y6kE0^KfT.gp-2R#$JGD]VY+a&$MUZpUZXJEi-=7.H^I"s#XsX+[BA;ri)HdYmlRIP4U_+qTC(%O>Hqd?"U-^2m:uJo^p8K#k"kqU3^4*c'(_3D]]BKJ0TrY]cQT)4Mj_t2TCunq"G3[HnCujpqEot=]*l&;TCXg"fa<60EHL\#!+lW%FG-KS-d97NM2f")#6nB(;ikS0$2To,R0W-JcS8RZ?0oAF1,&I$9>W;,J+E2Xgt,-(?,HkW8ikD*Ss-V"o.Mb2R],_nR_05upY]8_%jRe1\c4aQ#mit7KKc#]lC:[sn0n3h!/U;t9m1`;;SuCU>2MD\><'3o1JTV2E9,Tr9+0\T#J\UWS;ASI,hjR:s&IlU,mHQ0/lLW'>%c[,Vfn3o$r!*eEKGEP#TPp>t`X&"4Oc'/[eh(uhRb\QRX+ueI:Fuo*1/^-8cJ99Rnqt.(K2%ahJ&E:4$*+9oW9IOB=NWt3<$1;#p%)$2U"&aHrqEWF>2L#m"E45dJ?FFip]`&'$`^hB+a@NaL0Cn[?;!TDOW#M6igO2tBj=HWJ?'b+A1UG*0[^S5>XI>l31Y5.d\HSo)Q%USqeE;WsriEg0jkXC68^eJ$K\MM9iaLicCqfZ8^!-Q_5+jA(I\bG5<T_D#0G&Pnu9LJ^<eKm#CaDMkVpp>SJjNM!CP1bO,$Y7"Kp%):`,ugo(WB+[@+kEnOZI??nj=8f4Z@)^pFY/20O,SQWV*^CWkOc-rS"i9at%cBD,k).Ec](5\B>:E8]`1hdV=\8,1b75!#ZA.l--%'^n'(=MCkS:>`G#$>A9;mG!c:#;S<1nR%U@F]b"Y'Re,0`19D>fct!REiO(P#1IHbRRFQP2jNc19iZ3pD!l0g(TR'Xq6?KFN]aSA%mb?1nN_$ae8hI#X=\Q<RCUf"M&b>7jE';$$#3C"5*_oR@#>/[#[<%4hruaPpE7ClL/-fdIU/QKmRSUWRW@H"6B&\>*N(7GgAct9I%@5)6@oYa/P1/$b-TB=YI=`S!qQ#m`V]mPE2"dR'heN,:\4_iP:i]7:RJD%JPJj<m2Hq>]dQQOTW[,pMV6-fP0\3AVuS9PF1['M)*%!XPkr78Yj\qEuA[8uit^-E6Z;ST\PN!E4>tM&",(YKa!&(#_P,\2VY+;jZ$]J2)"%CM#s:>CqHN!t\a+e)/9.^rf<o(&0.)ms/2s%jsaCjCS#6[SN&N2VDK<So67#pYj3M-(s0Q]Q-i"ok@`087if:,.A,cep%Gn>](/'f@.55lp%uc<XVdd+cc<^oEkr;=IW#-kF$\52%@?3.C/YIOSh`k!-2d7&$@:1e4ROeTF_6Pn"_X2Yad)sk&@)24?f@NO+5)(J"_qp$G3CR>QUrRi#^Fh=!:/1;NpN=Ba8\c1S@PV02%><Q0@<AY's9uJ>8o;DUBO[Hn9'Yk+&iY2#lM5D\0'>6O"?54c=s.O%g7>a.\1TIOi5X($0#ILO_MSd3Ve*XA)L5u/E4.qGk(7T,J%]YA'oM#:l?>!t0`9uaZ*M"3tB!fW&e_cd+:r?-1'AY@eW`I50bj30eH;t:S=ajB0DhQ.B)PJD?.df_.?F9G(6QmiRArX,DEQ,<o*%mmfbu,qoe^RE87?7(Y.:2\)3G<Rrs(\tkfdXJ=&?oS6Kqifq6i=bNL^pc/;*QufTaOi:bsZkQ;[P4jf:#T+!d-6Hbso"#t4_='*O%%%+)cO$>G)>\q$/#_;;ih4=I<cBH56]Rn!94$f,)@Yb(T"ut[!38',jK@B_&.++faT)kMClJGoso[rrh\r!S[DZ;in,k9UY.?'W=%1;Ko=Nqr,b[PW5kUl`KQFFL%JEa@Pd61486D/o\0ObAE+_XV,>Y=Q^P\6uuN%P,j&7u)t/l]E&P`s:dp9mJut[`99Mk"msc<AM!G%,PgUMrGF?R'XBr7269J.a%NX45fS"hMR$h(VQ3u?3A4^gNd*3h.m*rrff$k/Z:d#t(aL[2o3SJ0<b/lBMsV)ffBD>pb*Zl%*a,D2%;E/UhB::DN-SA?<S`)/Rq#arbbR#OIc4b,n\//W%/]Y;s"j[*'(Bt@FGS2"ib"k=l6Hd>WL]OkIMlN)Z(OP?bj&tq1aV`#>q#lh8%[L>;]/a7O/@"V1QlDOlQUY4P#XaF+^W^\bt1#jkm>+N*MOo_kD@*M:2aJU9cf_,Ek9F#6u.lU2Vf<7Uq*\]W(n.)VaHf+-%q(q+2%+9QGI,i^&f%I_R[:RBR5h'MQmf&c(e_:fhOc4e0nbA3(k7E]#m]>/T/n&A]-qRo_u7[)Z!:2bX=CZL<o]cM"&Bl4HZ9Yc)>K.O69%qHOC.@1;a4bh1g4V;k$0"c68t.5..KUL2EPXW5qLUuAE1\X]$Oo3lJ?7RMK]/-Wu<:%L*Cf1mXsaH:;\^a9r08$`$Q:51Rmdl]4R%b=XpiL$+*9`CfL%AiublTkB<(IVWQkp\VPK%6pOA"Y:,iZ+."5S.]jNS>%Nk)9S)#>fplTQlR#?\DJkFQt_G<V$tK9I<4SslfPMs%ksW;mh9!osa)".[bik)$>.XC\/!"R[=mOe&&Y:4W-Pm4.jJqNdP4g"-Iqf"UcaG,;s&l.@WlI?-Z/9`(#s!3%"N,]M!GJ;`%Nm@E%3s?+n`:SQ;QB1Zbr"r>ka]/:f>6X0*I/e!lqMr1`a=51-,h19OOP.*9(;K"`!B.6QA4Q)$5n6.2o`Xp>2mSiqd5``Nj/&A0cXrkC%o_hVFi[#jH;_kHr#79YSeAl*951],Aoa-RIem5&>3mTI0_@?hee6UO;IR9h>5+S98,]S"oRN=V`\0sc8g1k!@LchYY-pV.UabRBm%lNJt(.rhc2.A#>[FDem\Zt_dWa0j`$XT6++]o)MjbB%@RRJ-"5c6rnUSWp?l8b,;/$^/_aK`V$4+ir17d@0sMK&6VHB*Bsof[0^^%XmD@!jM3<@OZU5/_]`GcSjT'`7F-##4E\P[(.5*uqF,;;q.]_UoC45+_4tYra8;Q-`ld?7e?;TE+7m/o4nN9(49M6('`gHi=7)Q(%7ZO'M,ZBdA2:.gK:[9K26`3#3R`B2k`7OO*pf#42e>1A^bU(82-^p;aC)Ug9WW;VV;;-GB93,.g`V?MX\q4WI@?U?:#.[X=FR`g;%/07LV[I2&UGtotR#2O\;@&ckPlgqC:AQD.qAE<PRMo)5J^g3BG9XrlOFOYiRb":&fp,D):nduX,R`VlD_h&#:HYPU^F^/Hh#+0p8%h`Do-_3H4t9N(^DhLUXk;d3j'KV-Th`ACO6#OsogeJ,6V4s=p;m"[sp)5+/kLW^@WGc`B9p?[Qum+>0&lrhH9I1ZL/(@ITAU?@_9%R7aa7_XbNc2%QS`7e?/j`O<?jEep6)0`ZP1/)%P*-tXAS^hObh10!t1rV/;9p(IGg@l_;*VN3m4BY>tuAN'MBX4R,/=5&.&omo=P%kW$,2B+D[nciK\FR)a?P\i:I<r\S17>nl!`EEif:Ht^lpQg`-gq_.p=@%Z9TpX[#=ecUUAR)rg2+j!jF9+C;W&JMBN#D^QgQe9k,%%f#FH]&a@>Zmh*ud5^-$5Ckb`0<?`A<JNP+$nLBBa^uSS*hb2OdlMMhd#5fa[iPJI7l2L2L,H^9?&+L6mllU"'sQl2VR%/Ie_\>-%MjFV#b-TTfXDCXIP?=DbaDUXuS'.#`].%0,j0J4M*c(]/c%T0>JnRbLRpJ\4q[$=))og=Lhn=6)XH\#>^QZ3`C#]9\GmYGWJ;b"l%"754%@i<FYmN:o*-drK?p&]ME^krc=o^Ntqn:mSG0&ubRh\8F?._$g9WMK=fRs]eOMV_ml0V[F6=^K'J^uD7UBFRWLB>A\F%sT5M%=fZh:kMT:)M=m,Rh2in!kI]lJ,$>&`VA*YdUn-hd4Q?:P>jE]g"KXdK\a2XUkkH+8Fg'8f:9*N@Ps-$^-NK(*]V_Bkji1hB'`p,]%6sra\lhC#qG]C9TnW^*0kLZ*pX&%GZE_S$"nXHD.6mOJd?eMp^Cf2P3ICJkJL\D/h=9berT(XP9f;l.ncYD9G,8gm^5VIa!h5I5a%G4Db[SP*Kn4nK.uN>S,5q,H2q,9nF.!%Z5D,MOlUZ,FYMW&;$Z=<k,1'$e0MY<-)ZqnPre8gEdN3@k</Phil:5_)G#c]rAe(h<&c%c%*mP%Og2&LPZ!be_=f:&HbqGfKG/Sa?qt8%]d\`8_;9W*\MOcH%k@.%=g(S_sq)8JI?;n&j$O[P,($-kl^Ga*H-JY$rp@[)S@`T%]QK6nrRtZPIpDDl0k8"&[#M>3KZ\$_PN`Og-esI;rRfhGEUo+f[*$G-,6)UQ"RD2c_KQuT.tbS*jrW.Jl:!hDo-(-f&J=-MKd+R:%Yq8GVi='A;lm>3'Bg<Q1D2_F`^s$r<3i90r5.A([@BT&rV-i&*6/M_:Fq)q-/Iaum6]C3-8a$Hg=@gAFQ9pOCSFaR]Nu-Wc"m3e1%TD$hD[VRG=?9\)3,pC\V@?$\;&6SUe/:G+DGCB%.nUS`fijsIhj\f4.>,96r:>:8/gVrTcBB*Zt=GecrdH'@]/0$"p``k:QiJGTq%,pp&=P&^0+:7;J&R1"@0V52MdTT#gMOkqMLS>;o?/`_%+2EC1fe0.aO0N17]F#d1)d\4T\_sW-^9-m8dat7jB.fDKaAt2ZQrW:\_%h!KuQ-AP$eq47K@24]ZWH+\5Dq!QO8.VtKEGi-8F+U+@@ESSk"Lao'F:ZXLY=!aN]SNuAmq7S`mQOcADcgh>D)1G2S"qfjmRm8&^%h`bVH.j9M?IZ<TR.PjiZd*Z\P_"a>&*8'cFYXHQOlETZ&%&Z^lc];)0+jPA1B9.&(AdG1sMW\ZA0oCu(4s-]_>,eaYIPIs('D(XZ%p(%DjO?S%fb;=V[G/NR"*%5InQpjs;W<pe_=C]:cGHjgM=^(V]o:Mam>*;II`534."Y;K??WbrC1FJesQ4o]@-J=,:`eeF"3DrNQ%F)F][$o"Nc3(4Ph_SbQjRLF?tYA@Os;P@t;=TJh3l3H;'38&R3,\3"2R^dh3F#5O*/,j^5X_D2Z(h]Mi)"OIIk$V@$-a2Up='pAU%'HW7emd$+_Gj4L8/pcBuqnCY,e0n%H3K@gRI(ffEp_jf(O1[I.`Y@b):4#cs[Gs,AX<,Y]UVHDhVeal=m0:j'=,VKY,_QW+icc(`%Q[,),%XaYcKH)r`A>bj<i!:SLk[q.#/MWYn%SUK"EB:t_ls,AqB6UJG*D-b1^F`-G4-\4lcYCe-+bjVq(2dVBB$G)N'eh/mZe7td%CXe>Z[KCO>8NoirCaE[th/'>-EQ`Gs,#/Nh`ITL[*D'boUh2Cj/!cW.gd:HK$<_blk-eHp5QIl8XfiUFkJp1-0[0[2O#)Rp(b["6%BhmYF]9<ecH.L^"msWmj*10ZP!t0%+3Lu[SDSb^Z9S;U,jrTQP"l*^K,b6B%WPCpMJOLiV5[n8D#,^/c^r/Q!;dAOBdAJ"PN,?Ms%Q]?d"S<RSXcJ47s,#&0:*,*.K2'slT%VHa>Dd*fcekO]LeIV8_ZH^UUc#V&?\Jki(cA`ZNTs4+2qOEoUB8T)4`#+439T^U=aJ_:$%Uqm&N);MK4F@H;Kp&WUnTQhY^rZ_?)6-XK404O7EOL/VOb8lZcfN<qGWG/+sr%JMA_PBcAY*_4o?oW*g0YN<X0SqbQQ3^i6B6Gat%bQ9Y!6?4<`@I'i5dI8qB;dYcYl@TCoJWZ+Z%2fO`"ta;qjoLYN)EJY1BI>.4Glj3*W%d:YKHeFW!fF>73r't0!n7";'Vh(<;(sn<%/]GRu$G>?OPa.92UX]n-^-s&9%=d+[aUD7dEdUX07W[[C.[sYgcY9unPAP`F+;b=&KCma-/3><4[:1;1e_Nr&>:3W.@Q4!/V^itW%Xms)r/Jd'Sl;5d!HbCV66+sQ9&Q:?!=Q;(1N&qhC5I"hEY3`sBN]+6B&eE7'&L'#$C)gWWe@]4G+54*/*D=\<d3+%eeJZnp7In#i%ZB?.,$B^V@qg*2:_Uaai[]aZof9f'6S$=^A27N-97ItUYAWs_PKoInT>5"n"Z.Km<6tHrF"L2RD>te3So-p;h1Vh6JRLq5ZiF`H5%"^n\ubS#(35RJju:H)9NmBShd-=)K`Z8i!0U:LIs7m:=,.gMl;p^&#e\&=^@0W2/X-;%QO;+5QcP$&c"#Y4ucZc$8^9M)^DD-]Bn%@eXB?H9=8'(t4(A=uU7Z!gJ"=b$oQF[eaR8*FPo]=Xk[OL)0sHgu>#urd_,23>!8c#&:--O0\$&(X,==Jam#jk4"0YjI`Qo/:489%](!n)>NQU1/V*(2N@5TUDo@iF=2bjqhXmNV`!:KpWaZJG.T@Rh.:UcV`W5?`HZ4r*;o!G,/&_qVqHg>6Ple%dR.G\;U8`7c:D?X/%?c#>fCDc)^H'd'Sgg`"EghXiN?@#Z>"@7huOU't5%*&LB*4)*.S-TEKB@T(Rr)1o,-gq=+**Z0s=`7r49*N?AQTII,Hid9A'i&<B%9Nk-%p="e)$[X0Rd:*1s-UtZhW8)F/"m-Ju7BYGJVHNae!0^CnfH0]H7l2nSqTd&A;jbcYlHj;u0IG$(DrmGu9H9;4,UW5]"gs/_%B/)!V(@9`PS-3bo5r*oTmQ)`tQlaqSrD-E*gf&`d2B>>kRp4m.BO\SDeBTJ\a>uJ2gpDp#P\g%!8HL6]pXt0\"ISC:JF,M(atP-s%'4e!@`o&FT-bKX'iMrc^W'Xhgpfpt@W:Smr[6E#k?\91u.'I"$p4f)#_?kbWShaBIO[:DbY"n1-=I<i?BM9CTae*2>hmmo5L":Se%kCLhHU,on+DiIVZl&h:&<KNnfY'_4uQ<\kgMH!uY7kZ@FT4a38IPF8PTsT\k$hO_Q!i3'gj!)LI5\!tG6S0*$"5+Y<>pu@aB*?a)%9BY-%&e%m)R>RA4lj0?k0Mre5PoPPrK3a&M-3[)he\j"rM_&GXRWf+qYa`AicmW:-bP9MD@L<81[X&)kLLOMn)PV$rDltbuh?&it%'p*7Zf.*df6@nAhh'9bZ>kA07>*!!GAY:a'@Fs\4=fjA,Q\sJ';TN0Me1o\dJC.UO9SY\cFa<IC=>"1Gp,OjNT[m4T:!^RqnIQL)%gCB4+j&uHY:-P!!l#O66Zkd,3S)K/_1Ld-nRAP<F7LGs%E\/"]CDT9Wl"AIY9V4-=Z.LrEaG`%i6DVj0elFLdJHI^I^3\K:.GR5l%;H0]V6QEV5?\V=3iFVdK)E1lLS-JRu'&tc&Yd4]&;fh2t^q./HgWaV.0D;g(p`,!I>*nhj\P'tj-(T'1p<&N;Z4]V>gPr?*D"bo^%O,C#pEsBH5l_PJ5:6YAOntk>H/>f<o^NEt>d&$gT!BMB"Ise;c8c+%^;p"t<]6;n/^.`ttJbm/uiF=leh?(#"%P_3<M4Je9r>Ct;%S*3#.H.cPDF@m\A:MGdo>a^GneU?0#M>>j@l\S`6SP>O]0QZ.a_ps]JS2"=>h7uo1Z&GY;!jd*!@4Dm6X0Y0O4`-4K226G\Y]Vu9%>mM+'.:0;IYs4)r.dK]%mE'An/I\dd/8(`rDRNMR[NGU'^.g-gBQsasJ'KO/UT]Km`Z+KN9/MIld6.95YZt=*Td'Z?fMY[7;H70N%WaN7Y5gG83@aMuJjjdgTM^iB04N06E/@9EM8c^s1JAkE+BB)DQgPQ1X#6YQV2-:X)osMsS/$G#FhbH_;eE+kJB_,bu*8b%P:/,P_%\J\7qf`O*&S)uqQpLkL@%^*%g:fC#<CWpr5[T?+roJK0='`#;L4A@ubnoJ;/'oYB<Dtbi`-uSP9VgQW#An:9AB:1+O=`[gIFsPIq%NB6n5apiO>%(.<hEqV%,r[=d4cOW8h,e4An"i4?!V3I.)Qm[g$DaF/L4tg1S&?_`)V20X0;a5P?]!\2lNt(7W,\#5tWt8l.1g\u]%&k-cPD4`/Mr2td-0b2hQe'!;\0>ON?VD(U]MbOl>(RZ&tImcsBGeiMPI9k8Pf<jU*K*@Q(?*RQX>raWneJ)V5XRktko^ta`eJ1QS%_aF;`f4^d5b[_n=mT,#d!2DdN<?NRA.u>])*#S/4BhOT1#h\&B91t[FIb,k-?$F3Ib'j5fR10OFU.IbS8TP5c@Z$3JQ?0XH"1C8b%_9UlP9%B#VTcID+g?BaB?cAt-gkIH)$i`-'jV0Cgm7bfhHCMpK4B08k-4,W6KXf7g.S"\R@\^s;aL*RM[7@o@j^:*<G(OU'&o5L*%al#_s:hAMeDgD%gED-kc<D1+b[7,"Lgj=L!_,uDe>[el"kTKC-.ge=qA3c!>V6^.\T5=R1:u/$oSG'amF`H-!RE5]gk5C[c?V!`U%/mP`-"2"u!>u-1&0iDgN-JQ2TSmB0VctuHVU@$F+mt;]DRI5Z//gIgN`\k.-c-iF;gF#UM_%s)5_u87?R%eJ`id$-&m",uJ]O(J8%Q'(Sp%l.H'MBuIo@G0XORFnmDa:"Rn-3kY?WX*(fT$&\m(oHnu<`58T*)!U?"WJLjY*p2k=iQ"M"/;ZA4a',u'.6E-p6d9bc@>.;%^r@]mZ-2Tl^E(!o[0]1T'BrbYcIkT_@<3O5l*O"ESeuLD!`ie2*((6QmGjmJ8Rb;)#`L\p@Ni1R4^,0HjX7=[Z(/dj(sFmpDc,hI%?LGpdk_/Z0cV5^t3<pG*PV\3a>1n0MJACHQesX"5=A#T%/V0V/7Efs*@!V0aXG]7LFkAd4(ft4-89@20"Q]&8"K'/*K*./lFFPn!%6-ul1=`hRF*gN,!XJN=(W)4?k'aUQR3AEth!b8GrZ)em$BH7bq?<L>X@!Fj[[e[C2?C\Lna[cr`IMdSth*ird_K^,K(.ZFS0jE4_%'U\r5;E+OM&$0Q7Q)/.<9lhf\T'`_3,k6b41'H0]Kn9:%BoZ.NQR[$[>SGT.Q/t=UX@hY=?b(]`/?FRk2VB(T[+\$]7pqZ,kf#>a%6c)R2jT.1!4@_SYku,Bq1')>!Xj'Np%;sr\<n;r%+N*1!``6Lt+B&dc'FoTU"4fgianqNGpq'?=.eCA,c:\]>@s?%`0YjN-@n<JJ%@-d*,^OC/_L/o'[f9B'u/s[a)q&VNI_W1O*oTZU-XB:(OF$54V%5fG0L(fcC:dKik(AB+nMnD^DUi933QK0)P<QKLeFD05rL'J4D%Y&SK9f`tWOpH(2kEC]Z<,*-9D2$CRP39J.RGO:AHkaRiBhp][rmja2ZV_lVaU!$_[fkdlg?R0q<Tp8jCkFnC5eR4JUZFt#7^ujI-%OIb)(H>oFI]4&(N?8(_[9$?Y;pD>Uae9#VDZ1%F\Cu]TK`O>@S&?FY_i=H!*HEDu&"+007\p;Cj^6h6U%6qY.=015;Dce!4ftgVB%`d?QlJLMN^0Es6%kRu9-Z.^HQ[Lj`a-+=Cuc7$[G#$Ar`Ur:eTj$ZEa:H9Fmm_fr<\ZrADFiPKC_K+Y4/Wi&[1,+(N9Ke_><[N$6%L:VN!>ekNlGUVeX0J]Qq\)L_%qm<3F!u&Ah^#&(/!SR%RqLT.b(0Qsp,<85i`W<_QGO\hE.7G_a+q>/gjT/p51UX@XaT,CM://om%aTu&$]4&-l0/0\6]58Ia)D"&<.ojb2l-q^=)ioLb]R.RPX)7#8R'D)/r$`?pfU0[u_Qjl,('-_:XFmtC'U!+aF'E0-!li;B?u<:G%Su$T<HAb.7N!nUeCI(X'Ws=mnYtj,)d4YPG_\Y!?Fp$4kR'%%J/r)5jdr'M$\`2$qQ@Aok^TqulR?s$Y2:LPAjSB+_aFJ[Y)8Z2J%8sOT'0HM4LRbWZ2hPm=j'XJK$-J/b1L+sh@#ZmHI%JqTqO^8cTPP,\f/]9'2pJVB+)V-BsY$/\U>hdHUZ\;36KM;6:;M&A#!eO?W%iepeDN5dP^8<kDUq[(;Q?qrSVNa`++#-R03@SdUK?PKq^)dO0+hL\=b(p"jqWm;Pj]]M"eC+bS)1MskKi=OfAnc:;tl7q.QZFf73%cpVbOM8dnS/-]-lkp_)Q9[%?+_,COU^=+-N?:5DrALt$;i]Q+Tp<J)OUQ3YgPnH0t07L^fN"'-K@8r3-(fH`0;p5X/)\OiGXqS].%!g\5C.^5`/5_dh8pH2jICK^`nJ4S]f9GD<YR$SCem,Bdsm/qF>.53f2&=ZQ?J0B^S=QiRm._LG%iotuUH/J^u$s"D*Mc91.1&'cN%D5#L8fSl]SiU3BgLiu]+hE@(]BaM4@3t?fRQ1nP9&=';W(iIm>*-;OHVP-DHBIPo`e(Oj=GLa:8eta9tJs\#@Kdd,VXsBNo(*?iH%6mG:%g7,#j=X6Y^2]NAV.`(1YWDdYL"6SO,!\R/]WCWlL[9,k_!@V:SQmB3S)W%)ore(pkY`M<3OG(oEOLri^%NLYA'`p2!"0a8n%JMjM/6Bn>EVH<-pc**!%!#Qe)#`\WDdA-D;!Vnru)"^YWS$(<0[_\dYM,[J-X'@3!@'meH)@7@=D7dqJ0u+L/\lQ5XM(W_6F#n=k%.'um3'^N]KbF+HI(`_HH9geMg$NqkKR$EA,e&^ckE]8m7j5+\:&obFhLYkui@i\SnJaLIG#SoC6[*;ms-&K@q2D.R@+7,Jk9o/='%#;#R6P)Bl+d9Qf@0#r`^C#gM)U/p)_Xs<B`le<h##t0fPU)\\\?V/Hr+:Bm-ehel%ljesaGJp@k./PDg/Q,jU,CeoSV0l:%,qe]+%Pc8[tjW$m5q-FjlQnc6R!AbNiM3QH(b\KZVr\]PC-VF<FJl<'0L_Xgu;.=1q>169lo`p:M/LcZpo/^?KJAm]gW^$j7"4fIO6O=G-%'toD'Mb>(25grU8,>ndZZYTW"GAu\1a)cO_ka<TMhH,4Ib#udoO5!=a,!/gkl;a@-H%djQdee%@QWGq%;@tkkbX(:nUo&Niaq<i:%aBsgia'=>H+b<LHjQ0F#?Xao9(0pihFQss7i$Gk'RQaRpQ<jl@<M&>a$\B"!o[Z6ekiMS68lL,@jARm/3FjHbR'pF'F/K+uW"uU]%l?eF>V,SrU^p;$U$5.]+.mm1@)`@2>_YXP)q<``QMZU35.j1irAS$f&7NQMViEZt1=0[#.BdOQ>B(',(IjVV"7rTY+`]XBmG'[`J%$QOjsJDunP8-"KV]%QC(;2LE$Q"_pk\LM)LXu.T2:*jA58n>t839h67"H7PM?u\4_Rja:`*:('+1&E>YF.C1_pok`=4*d*6g5p:g%RK\A5hn`Ccl:T=CDGWeWI<jRcK2RVZq(sMjaZt:U,toLPPn#e_b!Oal)@TagcH7&?`7Ycu"D-HROWLd36m582,nsCoYF!J-Ju`E&%bDHVGd:+Y9+.2m7a#mICm2cRm#5L;JFoa/kGo<[<0h9K8"IMQWM:"Fa:UQVP0VWCl2J?Qi?">Na4>S]qpotd&OLUCB':YZ^b>GH'%-6t<CMI'2K9!/K,Xg#o316K_e(nogtku_Tj!RFr+l!N-N6'/KCb$CBbkEs0LN)Tp.AD.oh`2#mp=LE'`A.2((_kUuR82Fs;@JZ`;%'p-Qhi?S'Y+UKOY!Iq)YH=G7g;WPT6]mN:f-.7&Mdhn?GHl$Inl2hZK-"gS#]Z=O6E0M]FVqRm[9umVdN$[TdoKoO:jTaT^ns)JM%BF>]D%5$$S**c.-@3c/4INs#hS@$)@<r4As<6CGk`1Z]&g=J""]*HOrNTO&L6DEI"QSa!a]SmhaPt8^"2Cm%f`-RF179?o#;Ed1<%!2H6f0.pFF0??29o(a`sXI$-e+ZUFlRX,:+Bk#j-TPs.3SD*%sPi-E<pNY$Q74o1]p=0m(Gn)6Y[`7%(gmTA4g1u/UZF,h&?2J(j%(P_6VDbL$3#-M!7D<u'8oC8qA>u6MX!;<ip.:`S$(?iuG*p)U;I2iPD+Fjm?=PCHlkdg;oLZ7HXK.FBrL81Mobrk$5]P/`KCUFu]%.=u*XlLA(!(4G9K-WX76*%>bRP$XCjjJIK[e!];aCbfrSCo<AG518V7bAX7q:Lp,3;$2YPLlEB=ARH'(]/-*sd#!VHHh<5%!96@N%OC!0'9QL[k*rgcP1nqs2quq86EV253AFru%QP!K<p,Nlmf2lEsG5)hIW3"Yq%g0("7l^m!O?(h@'N1hV1B"$?!6AHuC.U^)0;3It%$L_oK[^GU8MXPWB8q><O%To7#2OY;c9"l(V%'B_]%Z2#M.JC'eSb<fF?L/t$2W\W8_C2sl'UW!!`Ya"6=B=b3%sOV&@!1bta\0=$%P[Sop#*'S+]nZ;jAe2&k\Khg<(-l(5Bu]ot/becXBh26J$K1ad=bm:(*?j^ajNLhC#.%kRM_Rf7'6)k)!nR:r_j8fY*,WA7Dl[`'%DqF_Q3I=%Lkgio:F@OCu@_=DrS,'2jou/##G'5LY54Z%,[_kn$P%X!V@A(T>T])Q9Y3p:cU5$$52fF4O!U%&C.j.m8/17k6X*lT/%QZ"Lr3Zj%:D:.c-p-;8D+5>SYj*%`>`oguPd2iD4BRaK7Z,7^EO-C&GqkT)I.P"te`tkbGkB'(-j`U(YGT>Jk3a:3eosFjU-'VOW%V/5KN<L<!f-Z&a%m<@9Y8bI2j0$(D^8E."fcbE4bAOAF9&%T2b^9'-P#[1k"RElLe$+8D$I),o.W%'M%#aJ%m5OT[CAFD.?jL#h2%bM.LG)RZMd"7)2Nn?8F'ZdS\\At9f@*8Q?8o=N?DT'YG]XbTBq;-Ya@X(Q`2]U/6;J8k?B.Wb`#]cl6q*<;N'kM40UWZK<.=mX<[%FtS\YXF(O'n&P\_Fdn-$>cbkOp.CJIaV.5dS@PEK&oWS]9h`j>'JgWB7(p!mX'NE[+YC#OJ&(c!lU`0&G+K/+$sZ`sKZeJl7(G.@%A:X8!Z1DAR<^scJW>;f8ZcVOcF1HDXWs;+<,0\E8Z/pCY1X>H<:6@Ydh3up]p/Fh%[L&H#WCYAM9X:7d^[T$7,fEi@QZPuC/hV.@%_i'JFq7I3SGXQ`PF^:2e"$pT=X)A]+,Rlo?SFkqi&+:t@p`;=oRK^qT=+0mT>?:fMO>>Y/\n1ArM8dn3G#@@qg[/2&$qe&g0.EPU%M>ubo*-_t3:sC<\]V30Zd=-X,q2@5$J*XbNg/tRt%NZ^-;pm:=*L<L?+1A__<DOp,$p\UG=B$L^HJOn"f?/,p6ocf-?tEJ+BG:Ym%Co/LLEO:g^\(1?u,K\EPSVm&jkM7Z2`KS4$F3]*VC%O('cZ@r<mT=l&>WYpL5`.Of#%.&&WsVI_(qC+u/e[)"XS\uL(0)6J,Lk4^%aW-76>,j5m'qdc`k8b`9%!?q4YbF2dYZcD+*V<;u'"/Z9!BgVr5.H>16&njYg'h0g?`8dKl@Xp?.Ag<g9bV;6m5'UNV(JpY[tX@M%>pLnOoVO]p?X'B58b3GLcXeT"q#lq,>?^,*PQJ#"/P"E[Vui?M[)h#GM"ETC8^f?121q;g-im_a?_&KC,I#ALOhM1T10>:EC=6LM%e%kV8$kB3QJ/Sb"'O<4*=<gPT/ZuP9_3HQd5.YJ7bAfH9;N>`k;/YT=iA)DK]@49'YZ:5"`6=^%6milS3(/!VX7@hhOiBi'j=)Ef%cUa;\#f+>j4uA=o4aZgEX7['7\hAMMY#1du]7q1:1jAsTXTcji$*<K)@DtHj\9TW%Qa5Eg8Fhk,I*T04k>m5,K*Q+>A".'(^=7G;%d#i4J/INTD8t]&9p=P@Pnc4['BqPiIm)qT5M]8piU'C(a)6)_RnY%%l?auKb4KB.%Vq?4I4J:AJ"<NMKFMXSo[olU+c4gpNqdm-s%/HU$!BjK%V(.QO:5Vu1N@2J6\@ce0%e_VD&&oW]8;<!"H#/.$+"_[HQL#O"Ig3/"+fl'58TaTEJADAn'JFU*[oZ'#4.9!$lTZMBH%>pe':f1:%^a]Jc(9_W&@D-an-3\+jIQV424Q"tBC/,&q^o'o(IF0n!5[KLu=-$>^`0tHouf:#</a4+P(aHO0Xq"./W[2qDjS+\nP%e]K!qRnm/fQZ<R.f[S6>L'JQglEM::0)#rQCm650kU_M"YT)1,.J%pk4#-:CLR?JO3A9Z?[;f^EkJKoWW=.?<j\_o]ID?]b!d_^@%!Xbg?kMen5at3e`\.(l*'KM&J33WR#S7id,PC5DK5D0U=#'Uhp@b#PSF<o,S-*u8P!.2\'o.[KA=Q*Lq6]HCFMM53+.6@Zj`I5&V%F[k]LgU>k]+./t#45fQ30ghK7NVhh(EFN?Al[Is7)B1i^0jfNc=oW'DA8>edkL#ZTo*Q=e\:AEF=tD2c>i#UcgSf:\[,(GhZ$=9>%e^srh<=YYmi=N/Sq!DBem</u(?D__FH<YLenH8'!>>7]%?X8S$`Z*j#SuWM;4_(<L!2`g]-itX66IA^eP_a55V)rdDcnfMJBP7WT%3]eM@?lNDPh+mD5=r?1EggLfQj3=>C`@`]Y=BWA*h'0;iNqn!G.PaaA5t/d'/8`K&KSiGokJ=WpgH\NSlA^'-;l4fQ\/^[oYA]FS%SBS;sND\ZLaFC#'8sT_E5;.G/>W-b6<jeLJL6N83QU5:5/r$oW/KT+C3DCh3T\1V*%m,/d"4<<1;#sU?&9pQZ+Qt/c8u)cVCrV):%?hhJ'j$5Xff^Q9T*&`i=5e\7$Ne&Cml6oQ^0^SMK,$'V9DkI3XQ0"_o4Ut0D1NGr!Ugq6K-A+=p;@$&S#iWu79MEII,RH$T6B?.h%'U^,-*qmUTB)8Ke8\>>FHChTEeDiCmcSiSY2?T`?*3`aAoRb(3@*Q,^UjU!/&[<)R5^f$Hm"(:-N1]D^HH*F8<\*9lDcf^SM[(M>%L<8`"Z-1/#(Q<Hs(,PJGB)&_cUh>V[8>JdmYCnMK_t)%46V*97lobg]_,5m(%EgfkZ9uk(WFn<@[1@XpA>OIR"9u%l[S;Tb/i0cQ%=b7e_pb@85Hf[75bifgXU2p*/&0c8/kl<267aI?@\j,1O%qc2']3<-?T<P`gW)*P2NdV'8HQ]TG`KtUWW@#%W2HgM'SQp`*Z6km7%_0h(blulm\,1Gn0@;PbQ(sjmJFT+2%cP:UJY=fG2c:sVVj!^?$W``ek'?B9.<Oj5;l<Wa-XC@2<kJ=bSqc']f(.##4@_p)'^SH51%1r?KoLH<P;_lo=;?R+1e__<ft,DXCt\_WYpM7#3_Wt1Q)\;%\afag`Pm90SEMBXaqAR^,:56]PR^!i+#qni&^DFZspD']MJU4m$,%Ql1%&ART^6\Ia@omNYaHV(4ubmglL#2&mP(>.!c+iD9C\N"O_:I+r4<nJKmFj"L]jm1L(%Fd>C-VlTuqh\37CeI]2XAB#TE6s**q%#=]VBcJbq(-t%kXi@8iC$o2.3ar"5UV]e*&E`jbCP9IgiQW)Y5*.uctK,NM%$[*shP<utdkRc2]*](i4)5Nco,<Al)KO:$VD!MT/%!#G!(B8aq?Tu;;Q[KHY89Dk*o4tJY+8/rgIXHofOC`gSRc]5lgfT`Yl5D/0%XK5!`)lFTdcn4C3[!0IB)Q6pTHZ.cXg0+Kh*s(u^%1SER!P3]uP!sVl45m#6(FZ$?:+":Jg9@sjbe/F.>4hAZ*Ur7'W#NcUHF,SjLY8q$$KIXcFLruN)c-\X[a+;3@)&Rs_J0"JbN"l50%M9U*G1lk8I@:,LJkZQ:KhRSK2AIOcW>8HP4U<F@eX3HFHMK8Tq_M[R[R/!d!O*k5+=_mXb/<8M1^rVS=.>l5!3m5<nYt$NAR9LC7%jaC5^(1cM@mmI'd>``q6$orkP'3d]+iIg:J<d\^rZ-['Z&f]q?`&1SZYbRUL0T!)]G%69@"C(V&QrXE3prHi.2[a-EB-TN!@)1"m%?PBVk@;;uo-Pg$Y9E:8V/fnZp>Z[khS:l_mKu$ar^IF&e5+#/1iX-k1`9b7NZ)[+@1OX<*NlX.[pb()s/ts)9h+N8-7nth?B2uXB%'oBSGKZ<lQe?I/.RUaK]*c\]=8jbqnW&.I+K%lDF$Jpo\dcM^O]&Mh"F7T"@`s%:RI:[IC7Y(cfY/8CrK\>0i=X_&[>^(Gdom>.r%ge=.>WC-g</Uf3a#\$bsk7:(-jW1PFOq4efj7OOY!`Z?BYhm8('j*jC^]ojt944H!+SuKeVXpCGpqh`OMA\E.4_l5)6$Tr`&r?uL%63<"'J7t@nUpBV@&,Gg-;H0NlJiNg]`<ca<3U[amZ?%tCAHsV#Tni*@^k2M&(^Ic-s)ZnVYtKXb3l,3t85nX0b!A[KG87Q:'.^r:%%G:Ip#]9"re/>8q3NApG+D1S8=X('pG6XHRU+Q[!`UjT/\**^cdq,*cCd(5eDS!(3kl\LOYdMkFRipa^oQ>PbEsY+ldg:bT-V(!b%$G1(XMHQ+i%IOuC!W%[2m"(d#(mrlFD'!uc'IF%U+%P2a`-(/$@Rh)J;>]>nPU>5IH7e;oQJL*RD611m/B]40O`SM4>kK:uSR%0,%QknTVl)?nk8jTQGCRmc_!I!\fX!tqB3HC#q-dB/UIZKa+UDu'Hl#[`Ddijb'"<P-Z"Y$H_]K^c*a@K:H4!d@FZV[+=e?>Xf,ToN3%\Q+%gok$.$l`48[lo6`?Q-t8t:"S.[[l%2Pn4:>_\p:,@W!c>P6Zp>iR(H\DnpW>"_tL.qkfV9sN%(f`%GdA5(^)]aSehHrU1$%M%H^RVNSG09n9TU\(6&i[7G7ZPL!1KQa$A\od9THm]$S7;HjFuNOE^/eZO\^KW+<sTD9N`/k@)p5lh^``&aC:/;9Zf<Hg5>5TUp.m2%%sk28+g)04bm9;nfE^FrAHPMq4IXOtR),LS\%lYm"dXR<RZp3n,%,XFcQ8b>RNIg[^]<7oDLq%UaO&$$24e<rHB-R=B,Xm6*.VOh%LBp3Z]@8)CkGV]4jr-mD2%BtPlQq!QpU6U'F;\LDC(p1rPN:N/H6O3NEZaAlL]o$clWg7T!L?F.9ucV#3l7u6hdSf*TIe-%8V!!<%F-:*EN8=dT"KsL7%Lt9_Z/3@5m*10SHpaL\Y3::A_bpj&feD=GFN2]1USn3_NN&GFRh%(#*qdrAK\3`:HJs$49^18f61FGl-=J9f%)R29;JF-@O4mqu#qM#53@*PT1fuTB2ic&l-JjVI?5E(hF(7Wk,C'b"OU&D7"QTCu4UMZ$8!%W<b3#0%KP:8U#X1b$j^XjKf8.'>.%+_-_%kQ>,8J;#9i(tEe;k?R6#bhM-h5riKN+D)#7om=U%`7(uJ^lHkrec7RoS55;0Ya\Rn@Gp"D\%X$$c_iJ>;4_FqUm6YEfJ/re%3N?u8qOVTBN&\V`Q>OJr%TqL2Vb*ftKkn@AXC[][npScbNY,[0N\tZU"$%r^ARKa@!u<hcfl[lMB&51g&!6u*(g2iS[<(U&R(Kh]%iM\;/f2OLF!LP[jZOXq%!fI`?!e=*Q1W]o&?mO+l:I-atF,mnJ`*`oU(?)[:i%P9blm_*k3h9G^fP-aY2Gj^sm>1R@B[(F$1!C"t%@aHpL]pr#3^V$YI'N%8#H5*.<R"NV\,<-__14";KPSElYf-pl6S43H2T@8\DMj4_$io'uAXn,sp&BC::0<h]>7T2skhjCouAeNZj%fhLE-XHldS629NRJq5BBR^$p"H"5nM6@rrl0mU\c]C3N%>h`ED_%7FI&^hDE^T9/nFL=8Tna^Ne3Sn^rOej2)9W3s<iMUfq2k=&T%XM_h/"VMYS;@EQS+9CfQ>@>Nj("cCieo^Xb,?j!ji<&uR+.i2h%tFWUoueFaIJ`rugR$fHs6B9hk:o2Irg9B1q&#"Vq;]"K_dR^2%QcJXRS,`N[n",QSXIBlEJ"16@4%/*%HsA%ZkrUq(6/[:jlBa`0nCTZh3p-1'7M7#W]?fZd^\Rp)p?2IEDsn+R*;K(h*Q:8Cr9<,<%roo'=5Q0s9]DqO%2t+J1oD7S'T:c/^!H$/TroP&P%mTs9^--u;k/X+Nr;$#pc[YfObF`*(s7ka2=!'U*];*l*3<"4"iq'&Y55S(Q%qX7a?qo-aN?bQF5A,Z/bYJ0o523B8Fff<r+W3+BjE^0PGZju:9IsChZRl<S1r:^$VrqPoVk:^/V^KK/DTDl<DDngf#*SP`Pr3+0=%>oL+6J+iNtj+#hTM`4G4@bP@SSKT`7kkN>n:uX.Ks8DA"UPHmp!]R9i@l`LIh;K0']JCEq^p,*75@;-PMH-lDJ,/^++91Ht_uDon%Iss#r^O?*Rs(cu\p-?Cja/9aRJ83s?eV:a3n`eN+s7+>UhRn4,nJCEFo6@.+j>aD.7M3:?]_JD&I62n+r:AqJ*e/Qdna>TilMfcL%T7-53.f&O'57Zof08CA$4FR"T^?)Qlg-9n4nLn_FMuWD@icbpNK!][i8H$N3r1`!X-"$S[Wltl(<0_<AFnP^`*=K1r&(.R^G;"6@%Nr"]LlhaOh3]_Qa]Cb.@g[X1_X0&T@7u:2hs2io#)i-t`7&8H1[?`tAN0\l#s#U";H17<h43l[V<QO2'8S!:X_M=;@U"F#gnAm!/%2r@s_hKtBlin(6CQb6:A?!F/rT3iO<E!h-Oldr1c.!Zia8S2\eRpoJ1C&G[P&]E#f._f0G6cm*nchoa!#`]+$B)D6Nmj5.naX7>>%A;QTCrq[Hc2?,O4q,$Y\S#CLJU15Ob3c5HuDm?:GOn)RXD<S[UeG:j+^OLQucQ@W.r8mr<rckgC\!0<gIf%WR^@-=Ai#c9SpZf`P%Qf%g^*"Lm)l/c8Y4hlCCqTZX=mp>s7r693i^\ZEk2fE%D#L8fg#'0VeMLY?eRm4R^qDUY:nE3$LHi*@^p%@kJk>1!KHMcasYE'2V%J+r6ao;d@dp!(6KalCVAp,FCZ;WD\[qN#QDGk:Vf59<fF"l&n^rr$cMrqk%Qrq_u<rVY-66]Lm*O$EY:_nJG"rl3jqnEM[1IRnt]%,9M=&GJF%$:]Cr/i$t#~>%AI9_PrivateDataEnd